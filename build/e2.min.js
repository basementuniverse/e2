!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.E2=e():t.E2=e()}(this,()=>(()=>{"use strict";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};function n(t="element"){return`${t}-${Math.random().toString(36).substring(2,9)}`}function o(t,e,n,o={}){const i=new CustomEvent(e,{detail:n,bubbles:!0,cancelable:!0,...o});return t.dispatchEvent(i)}function i(t,e){if(e&&document.getElementById(e))return;const n=document.createElement("style");e&&(n.id=e),n.textContent=t,document.head.appendChild(n)}function s(t){const e=document.createElement("template");return e.innerHTML=t.trim(),e}function a(t,e={mode:"open"}){return t.shadowRoot||t.attachShadow(e)}function r(t,e){let n;return function(...o){clearTimeout(n),n=window.setTimeout(()=>{clearTimeout(n),t(...o)},e)}}function l(t){const e=t.getBoundingClientRect();return e.top>=0&&e.left>=0&&e.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&e.right<=(window.innerWidth||document.documentElement.clientWidth)}function d(t,e){t.classList.remove("theme-light","theme-dark","theme-auto"),t.classList.add(`theme-${e}`)}t.r(e),t.d(e,{VERSION:()=>w,addGlobalCSS:()=>i,applyTheme:()=>d,createTemplate:()=>s,debounce:()=>r,dispatchCustomEvent:()=>o,generateId:()=>n,getShadowRoot:()=>a,isElementVisible:()=>l});class h extends HTMLElement{static get observedAttributes(){return["theme","disabled","target"]}constructor(){super(),this._theme="auto",this._visible=!1,this._justShown=!1,this.boundContextMenuHandler=this.handleContextMenu.bind(this),this.setupElement(),this.bindEvents()}setupElement(){a(this).innerHTML="\n      <style>\n        :host {\n          position: fixed;\n          z-index: 9999;\n          display: none;\n          min-width: 180px;\n          background: var(--context-menu-bg, #ffffff);\n          border: 1px solid var(--context-menu-border, #d0d0d0);\n          border-radius: 4px;\n          box-shadow: var(--context-menu-shadow, 0 2px 8px rgba(0, 0, 0, 0.15));\n          padding: 4px 0;\n          font-family: inherit;\n          font-size: 14px;\n        }\n\n        :host([visible]) {\n          display: block;\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Light theme */\n        :host(.theme-light) {\n          background: var(--context-menu-bg-light, #ffffff);\n          border-color: var(--context-menu-border-light, #d0d0d0);\n          box-shadow: var(--context-menu-shadow-light, 0 2px 8px rgba(0, 0, 0, 0.15));\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) {\n          background: var(--context-menu-bg-dark, #2a2a2a);\n          border-color: var(--context-menu-border-dark, #444444);\n          box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) {\n            background: var(--context-menu-bg-dark, #2a2a2a);\n            border-color: var(--context-menu-border-dark, #444444);\n            box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n          }\n        }\n\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n      <slot></slot>\n    "}bindEvents(){document.addEventListener("click",this.handleDocumentClick.bind(this)),document.addEventListener("keydown",this.handleKeyDown.bind(this)),window.addEventListener("resize",this.handleWindowResize.bind(this))}connectedCallback(){this.id||(this.id=n("context-menu")),this.applyTheme(this._theme),this.setupTargetListeners()}disconnectedCallback(){this.removeTargetListeners()}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"theme":this._theme=n||"auto",this.applyTheme(this._theme);break;case"target":this.removeTargetListeners(),this.setupTargetListeners();break;case"disabled":null!==n&&this._visible&&this.hide()}}setupTargetListeners(){const t=this.getAttribute("target");t&&document.querySelectorAll(t).forEach(t=>{t.addEventListener("contextmenu",this.boundContextMenuHandler)})}removeTargetListeners(){const t=this.getAttribute("target");t&&document.querySelectorAll(t).forEach(t=>{t.removeEventListener("contextmenu",this.boundContextMenuHandler)})}handleContextMenu(t){if(this.disabled)return;const e=t;e.preventDefault(),e.stopPropagation();const n=e.currentTarget;this.show(e.clientX,e.clientY,n)}handleDocumentClick(t){var e;if(!this._visible)return;if(this._justShown)return void(this._justShown=!1);const n=t.target;this.contains(n)||(null===(e=this.shadowRoot)||void 0===e?void 0:e.contains(n))||this.hide()}handleKeyDown(t){if(this._visible)switch(t.key){case"Escape":t.preventDefault(),this.hide();break;case"ArrowDown":t.preventDefault(),this.focusNextItem();break;case"ArrowUp":t.preventDefault(),this.focusPreviousItem();break;case"Enter":case" ":t.preventDefault(),this.activateFocusedItem()}}handleWindowResize(){this._visible&&this.hide()}focusNextItem(){const t=this.querySelectorAll("e2-context-menu-item:not([disabled])"),e=Array.from(t).findIndex(t=>{var e;return t===document.activeElement||(null===(e=t.shadowRoot)||void 0===e?void 0:e.activeElement)});t[e<t.length-1?e+1:0].focus()}focusPreviousItem(){const t=this.querySelectorAll("e2-context-menu-item:not([disabled])"),e=Array.from(t).findIndex(t=>{var e;return t===document.activeElement||(null===(e=t.shadowRoot)||void 0===e?void 0:e.activeElement)});t[e>0?e-1:t.length-1].focus()}activateFocusedItem(){const t=document.activeElement;t&&"e2-context-menu-ITEM"===t.tagName&&t.click()}get theme(){return this._theme}set theme(t){this._theme=t,this.setAttribute("theme",t)}get disabled(){return this.hasAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get visible(){return this._visible}get target(){return this.getAttribute("target")}set target(t){t?this.setAttribute("target",t):this.removeAttribute("target")}show(t,e,n){this.disabled||(this._visible=!0,this.setAttribute("visible",""),this.style.left=`${t}px`,this.style.top=`${e}px`,this.adjustPosition(),this._justShown=!0,setTimeout(()=>{this._justShown=!1},50),this.applyTheme(this._theme),requestAnimationFrame(()=>{const t=this.querySelector("e2-context-menu-item:not([disabled])");t&&t.focus()}),o(this,"context-menu-show",{menuId:this.id,menu:this,x:t,y:e,trigger:n||this}))}hide(){this._visible&&(this._visible=!1,this.removeAttribute("visible"),o(this,"context-menu-hide",{menuId:this.id,menu:this}))}adjustPosition(){const t=this.getBoundingClientRect(),e=window.innerWidth,n=window.innerHeight;let o=parseInt(this.style.left),i=parseInt(this.style.top);o+t.width>e&&(o=e-t.width-10),o<10&&(o=10),i+t.height>n&&(i=n-t.height-10),i<10&&(i=10),this.style.left=`${o}px`,this.style.top=`${i}px`}applyTheme(t){this._theme=t,d(this,t),this.querySelectorAll("e2-context-menu-item, e2-context-menu-separator").forEach(e=>{"function"==typeof e.applyTheme&&e.applyTheme(t)})}}customElements.get("e2-context-menu")||customElements.define("e2-context-menu",h);class c extends HTMLElement{static get observedAttributes(){return["label","icon","theme","disabled","value","shortcut"]}constructor(){super(),this._theme="auto",this.setupElement()}setupElement(){const t=a(this);t.innerHTML='\n      <style>\n        :host {\n          display: block;\n        }\n\n        .item {\n          display: flex;\n          align-items: center;\n          padding: 8px 16px;\n          cursor: pointer;\n          color: var(--context-menu-item-color, #333);\n          background: transparent;\n          border: none;\n          width: 100%;\n          text-align: left;\n          font-family: inherit;\n          font-size: inherit;\n          line-height: 1.4;\n          transition: background-color 0.15s ease;\n          outline: none;\n        }\n\n        .item:hover,\n        .item:focus {\n          background: var(--context-menu-item-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        .item:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .item:disabled:hover {\n          background: transparent;\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          margin-right: 8px;\n          flex-shrink: 0;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .icon:empty {\n          margin-right: 0;\n          width: 0;\n        }\n\n        .content {\n          flex: 1;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          min-width: 0;\n        }\n\n        .label {\n          flex: 1;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        .shortcut {\n          color: var(--context-menu-item-shortcut-color, #666);\n          font-size: 0.85em;\n          margin-left: 12px;\n          flex-shrink: 0;\n        }\n\n        /* Light theme */\n        :host(.theme-light) .item {\n          color: var(--context-menu-item-color-light, #333);\n        }\n\n        :host(.theme-light) .item:hover,\n        :host(.theme-light) .item:focus {\n          background: var(--context-menu-item-hover-bg-light, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-light) .shortcut {\n          color: var(--context-menu-item-shortcut-color-light, #666);\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) .item {\n          color: var(--context-menu-item-color-dark, #fff);\n        }\n\n        :host(.theme-dark) .item:hover,\n        :host(.theme-dark) .item:focus {\n          background: var(--context-menu-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) .shortcut {\n          color: var(--context-menu-item-shortcut-color-dark, #aaa);\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .item {\n            color: var(--context-menu-item-color-dark, #fff);\n          }\n\n          :host(.theme-auto) .item:hover,\n          :host(.theme-auto) .item:focus {\n            background: var(--context-menu-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n          }\n\n          :host(.theme-auto) .shortcut {\n            color: var(--context-menu-item-shortcut-color-dark, #aaa);\n          }\n        }\n      </style>\n      <button class="item" type="button">\n        <span class="icon"></span>\n        <div class="content">\n          <span class="label"></span>\n          <span class="shortcut"></span>\n        </div>\n      </button>\n    ';const e=t.querySelector(".item");e.addEventListener("click",this.handleClick.bind(this)),e.addEventListener("keydown",t=>this.handleKeyDown(t)),this.tabIndex=0,this.addEventListener("focus",this.handleFocus.bind(this))}connectedCallback(){this.id||(this.id=n("context-menu-item")),this.applyTheme(this._theme),this.updateContent()}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"theme":this._theme=n||"auto",this.applyTheme(this._theme);break;case"label":case"icon":case"shortcut":this.updateContent();break;case"disabled":this.updateDisabledState()}}updateContent(){var t;if(!this.shadowRoot)return;const e=this.shadowRoot.querySelector(".icon"),n=this.shadowRoot.querySelector(".label"),o=this.shadowRoot.querySelector(".shortcut"),i=this.getAttribute("icon");i?(e.textContent=i,e.style.display="flex"):(e.textContent="",e.style.display="none");const s=this.getAttribute("label")||(null===(t=this.textContent)||void 0===t?void 0:t.trim())||"";n.textContent=s;const a=this.getAttribute("shortcut");a?(o.textContent=a,o.style.display="block"):(o.textContent="",o.style.display="none")}updateDisabledState(){this.shadowRoot&&(this.shadowRoot.querySelector(".item").disabled=this.disabled)}handleClick(t){if(this.disabled)return;t.stopPropagation();const e=this.closest("e2-context-menu");o(this,"context-menu-item-click",{itemId:this.id,item:this,menuId:(null==e?void 0:e.id)||"",menu:e,value:this.value}),e&&"function"==typeof e.hide&&e.hide()}handleKeyDown(t){this.disabled||["ArrowDown","ArrowUp","Escape"].includes(t.key)||"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),this.handleClick(t))}handleFocus(){this.shadowRoot&&this.shadowRoot.querySelector(".item").focus()}get theme(){return this._theme}set theme(t){this._theme=t,this.setAttribute("theme",t)}get disabled(){return this.hasAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get label(){return this.getAttribute("label")||""}set label(t){this.setAttribute("label",t)}get icon(){return this.getAttribute("icon")||""}set icon(t){t?this.setAttribute("icon",t):this.removeAttribute("icon")}get value(){return this.getAttribute("value")||this.label}set value(t){this.setAttribute("value",t)}get shortcut(){return this.getAttribute("shortcut")||""}set shortcut(t){t?this.setAttribute("shortcut",t):this.removeAttribute("shortcut")}click(){this.disabled||this.handleClick(new Event("click"))}focus(){super.focus(),this.handleFocus()}applyTheme(t){this._theme=t,d(this,t)}}customElements.get("e2-context-menu-item")||customElements.define("e2-context-menu-item",c);class u extends HTMLElement{static get observedAttributes(){return["theme"]}constructor(){super(),this._theme="auto",this.setupElement()}setupElement(){a(this).innerHTML='\n      <style>\n        :host {\n          display: block;\n          margin: 4px 0;\n        }\n\n        .separator {\n          height: 1px;\n          background: var(--context-menu-separator-color, #e0e0e0);\n          margin: 0 8px;\n        }\n\n        /* Light theme */\n        :host(.theme-light) .separator {\n          background: var(--context-menu-separator-color-light, #e0e0e0);\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) .separator {\n          background: var(--context-menu-separator-color-dark, #555);\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .separator {\n            background: var(--context-menu-separator-color-dark, #555);\n          }\n        }\n      </style>\n      <div class="separator"></div>\n    '}connectedCallback(){this.applyTheme(this._theme)}attributeChangedCallback(t,e,n){e!==n&&"theme"===t&&(this._theme=n||"auto",this.applyTheme(this._theme))}get theme(){return this._theme}set theme(t){this._theme=t,this.setAttribute("theme",t)}get disabled(){return!1}set disabled(t){}applyTheme(t){this._theme=t,d(this,t)}}customElements.get("e2-context-menu-separator")||customElements.define("e2-context-menu-separator",u);class b extends HTMLElement{static get observedAttributes(){return["title","message","button-text","theme","type"]}constructor(){super(),this._theme="auto",this._nativeDialog=null,this._resolvePromise=null,this._rejectPromise=null,this.setupElement()}setupElement(){const t=a(this);t.innerHTML='\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --button-bg: #007bff;\n          --button-hover: #0056b3;\n          --button-active: #004085;\n          --icon-info: #17a2b8;\n          --icon-success: #28a745;\n          --icon-warning: #ffc107;\n          --icon-error: #dc3545;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --button-bg: #0d6efd;\n          --button-hover: #0b5ed7;\n          --button-active: #0a58ca;\n          --icon-info: #0dcaf0;\n          --icon-success: #198754;\n          --icon-warning: #fd7e14;\n          --icon-error: #dc3545;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 320px;\n          max-width: 500px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-header {\n          display: flex;\n          align-items: flex-start;\n          gap: 12px;\n          margin-bottom: 16px;\n        }\n\n        .dialog-icon {\n          flex-shrink: 0;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 20px;\n          margin-top: 2px;\n        }\n\n        .dialog-icon.type-info {\n          color: var(--icon-info);\n        }\n\n        .dialog-icon.type-success {\n          color: var(--icon-success);\n        }\n\n        .dialog-icon.type-warning {\n          color: var(--icon-warning);\n        }\n\n        .dialog-icon.type-error {\n          color: var(--icon-error);\n        }\n\n        .dialog-text {\n          flex: 1;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 8px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0;\n          white-space: pre-wrap;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: center;\n          margin-top: 24px;\n        }\n\n        .dialog-button {\n          padding: 10px 24px;\n          border: none;\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: white;\n          font-family: inherit;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 100px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--button-bg);\n          outline-offset: 2px;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part="dialog">\n        <div class="dialog-content" part="content">\n          <div class="dialog-header" part="header">\n            <div class="dialog-icon type-info" part="icon">ℹ️</div>\n            <div class="dialog-text" part="text">\n              <h3 class="dialog-title" part="title">Information</h3>\n              <p class="dialog-message" part="message">This is an alert message.</p>\n            </div>\n          </div>\n\n          <div class="dialog-buttons" part="buttons">\n            <button class="dialog-button" part="button" type="button">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    ',this._nativeDialog=t.querySelector("dialog");const e=t.querySelector(".dialog-button");this._nativeDialog&&(this._nativeDialog.addEventListener("close",this.handleClose.bind(this)),this._nativeDialog.addEventListener("cancel",this.handleCancel.bind(this))),e&&e.addEventListener("click",()=>this.close()),this.applyTheme(this._theme),this.updateContent()}connectedCallback(){this.id||(this.id=n("alert-dialog"))}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"title":case"message":case"button-text":case"type":this.updateContent();break;case"theme":this._theme=n||"auto",this.applyTheme(this._theme)}}updateContent(){var t,e,n,o;const i=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".dialog-title"),s=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".dialog-message"),a=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector(".dialog-button"),r=null===(o=this.shadowRoot)||void 0===o?void 0:o.querySelector(".dialog-icon");if(i&&(i.textContent=this.getAttribute("title")||this.getDefaultTitle()),s&&(s.textContent=this.getAttribute("message")||"This is an alert message."),a&&(a.textContent=this.getAttribute("button-text")||"OK"),r){const t=this.getAttribute("type")||"info";r.className=`dialog-icon type-${t}`,r.textContent=this.getIconForType(t)}}getDefaultTitle(){switch(this.getAttribute("type")||"info"){case"success":return"Success";case"warning":return"Warning";case"error":return"Error";default:return"Information"}}getIconForType(t){switch(t){case"success":return"✅";case"warning":return"⚠️";case"error":return"❌";default:return"ℹ️"}}handleClose(){this._resolvePromise&&(this._resolvePromise(),this._resolvePromise=null,this._rejectPromise=null),o(this,"alert-dialog-close",{dialogId:this.id,dialog:this})}handleCancel(t){o(this,"alert-dialog-cancel",{dialogId:this.id,dialog:this})?this.close():t.preventDefault()}close(){var t;this._resolvePromise&&(this._resolvePromise(),this._resolvePromise=null,this._rejectPromise=null),o(this,"alert-dialog-dismiss",{dialogId:this.id,dialog:this}),null===(t=this._nativeDialog)||void 0===t||t.close()}get theme(){return this._theme}set theme(t){this.setAttribute("theme",t)}get title(){return this.getAttribute("title")||this.getDefaultTitle()}set title(t){this.setAttribute("title",t)}get message(){return this.getAttribute("message")||"This is an alert message."}set message(t){this.setAttribute("message",t)}get buttonText(){return this.getAttribute("button-text")||"OK"}set buttonText(t){this.setAttribute("button-text",t)}get type(){return this.getAttribute("type")||"info"}set type(t){this.setAttribute("type",t)}get open(){var t;return(null===(t=this._nativeDialog)||void 0===t?void 0:t.open)||!1}show(){return new Promise((t,e)=>{var n,i;this._resolvePromise&&(null===(n=this._rejectPromise)||void 0===n||n.call(this,new Error("Dialog was replaced by another show() call"))),this._resolvePromise=t,this._rejectPromise=e,o(this,"alert-dialog-show",{dialogId:this.id,dialog:this}),null===(i=this._nativeDialog)||void 0===i||i.showModal()})}applyTheme(t){this._theme=t,d(this,t)}}customElements.get("e2-alert")||customElements.define("e2-alert",b);class g extends HTMLElement{static get observedAttributes(){return["title","message","confirm-text","cancel-text","theme","danger"]}constructor(){super(),this._theme="auto",this._nativeDialog=null,this._resolvePromise=null,this._rejectPromise=null,this.setupElement()}setupElement(){const t=a(this);t.innerHTML='\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --button-bg: #f8f9fa;\n          --button-border: #e0e0e0;\n          --button-hover: #e9ecef;\n          --button-active: #dee2e6;\n          --confirm-bg: #007bff;\n          --confirm-hover: #0056b3;\n          --confirm-active: #004085;\n          --danger-bg: #dc3545;\n          --danger-hover: #c82333;\n          --danger-active: #bd2130;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --button-bg: #404040;\n          --button-border: #555555;\n          --button-hover: #4a4a4a;\n          --button-active: #555555;\n          --confirm-bg: #0d6efd;\n          --confirm-hover: #0b5ed7;\n          --confirm-active: #0a58ca;\n          --danger-bg: #dc3545;\n          --danger-hover: #bb2d3b;\n          --danger-active: #b02a37;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 320px;\n          max-width: 500px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 16px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0 0 24px 0;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-button {\n          padding: 8px 16px;\n          border: 1px solid var(--button-border);\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 80px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--confirm-bg);\n          outline-offset: 2px;\n        }\n\n        .confirm-button {\n          background: var(--confirm-bg);\n          color: white;\n          border-color: var(--confirm-bg);\n        }\n\n        .confirm-button:hover {\n          background: var(--confirm-hover);\n          border-color: var(--confirm-hover);\n        }\n\n        .confirm-button:active {\n          background: var(--confirm-active);\n          border-color: var(--confirm-active);\n        }\n\n        :host([danger]) .confirm-button {\n          background: var(--danger-bg);\n          border-color: var(--danger-bg);\n        }\n\n        :host([danger]) .confirm-button:hover {\n          background: var(--danger-hover);\n          border-color: var(--danger-hover);\n        }\n\n        :host([danger]) .confirm-button:active {\n          background: var(--danger-active);\n          border-color: var(--danger-active);\n        }\n\n        :host([danger]) .confirm-button:focus {\n          outline-color: var(--danger-bg);\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part="dialog">\n        <div class="dialog-content" part="content">\n          <h3 class="dialog-title" part="title">Confirm</h3>\n          <p class="dialog-message" part="message">Are you sure?</p>\n\n          <div class="dialog-buttons" part="buttons">\n            <button class="dialog-button cancel-button" part="cancel-button" type="button">\n              Cancel\n            </button>\n            <button class="dialog-button confirm-button" part="confirm-button" type="button">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    ',this._nativeDialog=t.querySelector("dialog");const e=t.querySelector(".confirm-button"),n=t.querySelector(".cancel-button");this._nativeDialog&&(this._nativeDialog.addEventListener("close",this.handleClose.bind(this)),this._nativeDialog.addEventListener("cancel",this.handleCancel.bind(this))),e&&e.addEventListener("click",()=>this.confirm()),n&&n.addEventListener("click",()=>this.cancel()),this.applyTheme(this._theme),this.updateContent()}connectedCallback(){this.id||(this.id=n("confirm-dialog"))}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"title":case"message":case"confirm-text":case"cancel-text":this.updateContent();break;case"theme":this._theme=n||"auto",this.applyTheme(this._theme)}}updateContent(){var t,e,n,o;const i=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".dialog-title"),s=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".dialog-message"),a=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector(".confirm-button"),r=null===(o=this.shadowRoot)||void 0===o?void 0:o.querySelector(".cancel-button");i&&(i.textContent=this.getAttribute("title")||"Confirm"),s&&(s.textContent=this.getAttribute("message")||"Are you sure?"),a&&(a.textContent=this.getAttribute("confirm-text")||"OK"),r&&(r.textContent=this.getAttribute("cancel-text")||"Cancel")}handleClose(){this._resolvePromise&&(this._resolvePromise(!1),this._resolvePromise=null,this._rejectPromise=null),o(this,"confirm-dialog-close",{dialogId:this.id,dialog:this,confirmed:!1})}handleCancel(t){o(this,"confirm-dialog-cancel",{dialogId:this.id,dialog:this})?this.cancel():t.preventDefault()}confirm(){var t;this._resolvePromise&&(this._resolvePromise(!0),this._resolvePromise=null,this._rejectPromise=null),o(this,"confirm-dialog-confirm",{dialogId:this.id,dialog:this,confirmed:!0}),null===(t=this._nativeDialog)||void 0===t||t.close("confirmed")}cancel(){var t;this._resolvePromise&&(this._resolvePromise(!1),this._resolvePromise=null,this._rejectPromise=null),o(this,"confirm-dialog-cancel",{dialogId:this.id,dialog:this,confirmed:!1}),null===(t=this._nativeDialog)||void 0===t||t.close("cancelled")}get theme(){return this._theme}set theme(t){this.setAttribute("theme",t)}get title(){return this.getAttribute("title")||"Confirm"}set title(t){this.setAttribute("title",t)}get message(){return this.getAttribute("message")||"Are you sure?"}set message(t){this.setAttribute("message",t)}get confirmText(){return this.getAttribute("confirm-text")||"OK"}set confirmText(t){this.setAttribute("confirm-text",t)}get cancelText(){return this.getAttribute("cancel-text")||"Cancel"}set cancelText(t){this.setAttribute("cancel-text",t)}get danger(){return this.hasAttribute("danger")}set danger(t){t?this.setAttribute("danger",""):this.removeAttribute("danger")}get open(){var t;return(null===(t=this._nativeDialog)||void 0===t?void 0:t.open)||!1}show(){return new Promise((t,e)=>{var n,i;this._resolvePromise&&(null===(n=this._rejectPromise)||void 0===n||n.call(this,new Error("Dialog was replaced by another show() call"))),this._resolvePromise=t,this._rejectPromise=e,o(this,"confirm-dialog-show",{dialogId:this.id,dialog:this}),null===(i=this._nativeDialog)||void 0===i||i.showModal()})}applyTheme(t){this._theme=t,d(this,t)}}customElements.get("e2-confirm")||customElements.define("e2-confirm",g);class m extends HTMLElement{static get observedAttributes(){return["title","theme","modal","closable","width","height"]}constructor(){super(),this._theme="auto",this._nativeDialog=null,this.setupElement()}setupElement(){const t=a(this);t.innerHTML='\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --dialog-header-bg: #f8f9fa;\n          --dialog-header-border: #e0e0e0;\n          --text-color: #333333;\n          --close-button-hover: #f0f0f0;\n          --close-button-active: #e0e0e0;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --dialog-header-bg: #404040;\n          --dialog-header-border: #555555;\n          --text-color: #ffffff;\n          --close-button-hover: #404040;\n          --close-button-active: #555555;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 300px;\n          max-width: calc(100vw - 32px);\n          max-height: calc(100vh - 32px);\n          overflow: hidden;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 16px 20px;\n          background: var(--dialog-header-bg);\n          border-bottom: 1px solid var(--dialog-header-border);\n          min-height: 24px;\n        }\n\n        .dialog-title {\n          font-weight: 600;\n          font-size: 16px;\n          margin: 0;\n        }\n\n        .close-button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 28px;\n          height: 28px;\n          border: none;\n          background: transparent;\n          border-radius: 4px;\n          cursor: pointer;\n          color: var(--text-color);\n          font-size: 18px;\n          transition: background-color 0.15s ease;\n        }\n\n        .close-button:hover {\n          background: var(--close-button-hover);\n        }\n\n        .close-button:active {\n          background: var(--close-button-active);\n        }\n\n        .close-button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .dialog-content {\n          padding: 20px;\n          overflow-y: auto;\n        }\n\n        .dialog-footer {\n          padding: 16px 20px;\n          border-top: 1px solid var(--dialog-header-border);\n          background: var(--dialog-header-bg);\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-footer:empty {\n          display: none;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part="dialog">\n        <div class="dialog-header" part="header">\n          <h3 class="dialog-title" part="title"></h3>\n          <button class="close-button" part="close-button" type="button" aria-label="Close dialog">\n            ×\n          </button>\n        </div>\n\n        <div class="dialog-content" part="content">\n          <slot></slot>\n        </div>\n\n        <div class="dialog-footer" part="footer">\n          <slot name="footer"></slot>\n        </div>\n      </dialog>\n    ',this._nativeDialog=t.querySelector("dialog");const e=t.querySelector(".close-button");this._nativeDialog&&(this._nativeDialog.addEventListener("close",this.handleClose.bind(this)),this._nativeDialog.addEventListener("cancel",this.handleCancel.bind(this))),e&&e.addEventListener("click",()=>this.close()),this.applyTheme(this._theme)}connectedCallback(){this.id||(this.id=n("dialog"))}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"title":this.updateTitle();break;case"theme":this._theme=n||"auto",this.applyTheme(this._theme);break;case"modal":break;case"closable":this.updateClosable();break;case"width":case"height":this.updateSize()}}updateTitle(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".dialog-title");e&&(e.textContent=this.getAttribute("title")||"")}updateClosable(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".close-button");if(e){const t="false"!==this.getAttribute("closable");e.disabled=!t,e.style.display=t?"flex":"none"}}updateSize(){if(this._nativeDialog){const t=this.getAttribute("width"),e=this.getAttribute("height");t&&(this._nativeDialog.style.width=t.includes("px")||t.includes("%")||t.includes("em")?t:`${t}px`),e&&(this._nativeDialog.style.height=e.includes("px")||e.includes("%")||e.includes("em")?e:`${e}px`)}}handleClose(){var t;o(this,"dialog-close",{dialogId:this.id,dialog:this,returnValue:null===(t=this._nativeDialog)||void 0===t?void 0:t.returnValue})}handleCancel(t){o(this,"dialog-cancel",{dialogId:this.id,dialog:this})||t.preventDefault()}get theme(){return this._theme}set theme(t){this.setAttribute("theme",t)}get title(){return this.getAttribute("title")||""}set title(t){this.setAttribute("title",t)}get modal(){return this.hasAttribute("modal")}set modal(t){t?this.setAttribute("modal",""):this.removeAttribute("modal")}get closable(){return"false"!==this.getAttribute("closable")}set closable(t){this.setAttribute("closable",t.toString())}get open(){var t;return(null===(t=this._nativeDialog)||void 0===t?void 0:t.open)||!1}get returnValue(){var t;return(null===(t=this._nativeDialog)||void 0===t?void 0:t.returnValue)||""}set returnValue(t){this._nativeDialog&&(this._nativeDialog.returnValue=t)}show(){this._nativeDialog&&(o(this,"dialog-show",{dialogId:this.id,dialog:this}),this._nativeDialog.show())}showModal(){this._nativeDialog&&(o(this,"dialog-show",{dialogId:this.id,dialog:this,modal:!0}),this._nativeDialog.showModal())}close(t){this._nativeDialog&&(void 0!==t&&(this._nativeDialog.returnValue=t),this._nativeDialog.close())}applyTheme(t){this._theme=t,d(this,t)}}customElements.get("e2-dialog")||customElements.define("e2-dialog",m);class p extends HTMLElement{static get observedAttributes(){return["title","message","placeholder","default-value","confirm-text","cancel-text","theme","required","multiline","pattern","min-length","max-length"]}constructor(){super(),this._theme="auto",this._nativeDialog=null,this._resolvePromise=null,this._rejectPromise=null,this.setupElement()}setupElement(){const t=a(this);t.innerHTML='\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --input-bg: #ffffff;\n          --input-border: #d0d7de;\n          --input-border-focus: #0969da;\n          --input-border-error: #d1242f;\n          --button-bg: #f8f9fa;\n          --button-border: #e0e0e0;\n          --button-hover: #e9ecef;\n          --button-active: #dee2e6;\n          --confirm-bg: #007bff;\n          --confirm-hover: #0056b3;\n          --confirm-active: #004085;\n          --error-color: #d1242f;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --input-bg: #21262d;\n          --input-border: #30363d;\n          --input-border-focus: #0969da;\n          --input-border-error: #f85149;\n          --button-bg: #404040;\n          --button-border: #555555;\n          --button-hover: #4a4a4a;\n          --button-active: #555555;\n          --confirm-bg: #0d6efd;\n          --confirm-hover: #0b5ed7;\n          --confirm-active: #0a58ca;\n          --error-color: #f85149;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 400px;\n          max-width: 600px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 8px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0 0 16px 0;\n        }\n\n        .dialog-message:empty {\n          display: none;\n        }\n\n        .input-group {\n          margin-bottom: 20px;\n        }\n\n        .dialog-input {\n          width: 100%;\n          padding: 8px 12px;\n          border: 1px solid var(--input-border);\n          border-radius: 4px;\n          background: var(--input-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          transition: border-color 0.15s ease;\n          box-sizing: border-box;\n        }\n\n        .dialog-input:focus {\n          outline: none;\n          border-color: var(--input-border-focus);\n          box-shadow: 0 0 0 2px rgba(9, 105, 218, 0.3);\n        }\n\n        .dialog-input.error {\n          border-color: var(--input-border-error);\n        }\n\n        .dialog-input.error:focus {\n          box-shadow: 0 0 0 2px rgba(209, 36, 47, 0.3);\n        }\n\n        .dialog-textarea {\n          min-height: 80px;\n          resize: vertical;\n          font-family: inherit;\n        }\n\n        .error-message {\n          color: var(--error-color);\n          font-size: 12px;\n          margin-top: 4px;\n          display: none;\n        }\n\n        .error-message.visible {\n          display: block;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-button {\n          padding: 8px 16px;\n          border: 1px solid var(--button-border);\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 80px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--confirm-bg);\n          outline-offset: 2px;\n        }\n\n        .dialog-button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .confirm-button {\n          background: var(--confirm-bg);\n          color: white;\n          border-color: var(--confirm-bg);\n        }\n\n        .confirm-button:hover:not(:disabled) {\n          background: var(--confirm-hover);\n          border-color: var(--confirm-hover);\n        }\n\n        .confirm-button:active:not(:disabled) {\n          background: var(--confirm-active);\n          border-color: var(--confirm-active);\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part="dialog">\n        <div class="dialog-content" part="content">\n          <h3 class="dialog-title" part="title">Input Required</h3>\n          <p class="dialog-message" part="message"></p>\n\n          <div class="input-group" part="input-group">\n            <input class="dialog-input" part="input" type="text" />\n            <div class="error-message" part="error-message"></div>\n          </div>\n\n          <div class="dialog-buttons" part="buttons">\n            <button class="dialog-button cancel-button" part="cancel-button" type="button">\n              Cancel\n            </button>\n            <button class="dialog-button confirm-button" part="confirm-button" type="button">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    ',this._nativeDialog=t.querySelector("dialog");const e=t.querySelector(".confirm-button"),n=t.querySelector(".cancel-button"),o=t.querySelector(".dialog-input");this._nativeDialog&&(this._nativeDialog.addEventListener("close",this.handleClose.bind(this)),this._nativeDialog.addEventListener("cancel",this.handleCancel.bind(this))),e&&e.addEventListener("click",()=>this.confirm()),n&&n.addEventListener("click",()=>this.cancel()),o&&(o.addEventListener("input",this.handleInput.bind(this)),o.addEventListener("keydown",this.handleKeydown.bind(this))),this.applyTheme(this._theme),this.updateContent()}connectedCallback(){this.id||(this.id=n("prompt-dialog"))}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"title":case"message":case"placeholder":case"default-value":case"confirm-text":case"cancel-text":case"required":case"multiline":case"pattern":case"min-length":case"max-length":this.updateContent();break;case"theme":this._theme=n||"auto",this.applyTheme(this._theme)}}updateContent(){var t,e,n,o,i,s,a;const r=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".dialog-title"),l=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".dialog-message"),d=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector(".confirm-button"),h=null===(o=this.shadowRoot)||void 0===o?void 0:o.querySelector(".cancel-button"),c=null===(i=this.shadowRoot)||void 0===i?void 0:i.querySelector(".dialog-input");if(r&&(r.textContent=this.getAttribute("title")||"Input Required"),l){const t=this.getAttribute("message")||"";l.textContent=t}if(d&&(d.textContent=this.getAttribute("confirm-text")||"OK"),h&&(h.textContent=this.getAttribute("cancel-text")||"Cancel"),c){const t=this.hasAttribute("multiline"),e=c.tagName.toLowerCase();if(t&&"input"===e){const t=document.createElement("textarea");t.className="dialog-input dialog-textarea",t.setAttribute("part","input"),null===(s=c.parentNode)||void 0===s||s.replaceChild(t,c),this.setupInputElement(t)}else if(t||"textarea"!==e)this.setupInputElement(c);else{const t=document.createElement("input");t.className="dialog-input",t.setAttribute("part","input"),t.type="text",null===(a=c.parentNode)||void 0===a||a.replaceChild(t,c),this.setupInputElement(t)}}}setupInputElement(t){const e=this.getAttribute("placeholder")||"",n=this.getAttribute("default-value")||"",o=this.getAttribute("pattern"),i=this.getAttribute("min-length"),s=this.getAttribute("max-length");t.placeholder=e,t.value=n,o&&t instanceof HTMLInputElement&&(t.pattern=o),i&&(t.minLength=parseInt(i,10)),s&&(t.maxLength=parseInt(s,10)),t.addEventListener("input",this.handleInput.bind(this)),t.addEventListener("keydown",t=>this.handleKeydown(t))}handleInput(){this.validateInput()}handleKeydown(t){"Enter"!==t.key||t.shiftKey||this.hasAttribute("multiline")?"Escape"===t.key&&(t.preventDefault(),this.cancel()):(t.preventDefault(),this.confirm())}validateInput(){var t,e,n;const o=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".dialog-input"),i=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".error-message"),s=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector(".confirm-button");if(!o||!i||!s)return!1;let a=!0,r="";const l=o.value,d=this.hasAttribute("required"),h=this.getAttribute("pattern"),c=this.getAttribute("min-length"),u=this.getAttribute("max-length");return d&&!l.trim()&&(a=!1,r="This field is required"),a&&h&&l&&!new RegExp(h).test(l)&&(a=!1,r="Invalid format"),a&&c&&l.length<parseInt(c,10)&&(a=!1,r=`Minimum length is ${c} characters`),a&&u&&l.length>parseInt(u,10)&&(a=!1,r=`Maximum length is ${u} characters`),o.classList.toggle("error",!a),i.textContent=r,i.classList.toggle("visible",!a),s.disabled=!a,a}handleClose(){this._resolvePromise&&(this._resolvePromise(null),this._resolvePromise=null,this._rejectPromise=null),o(this,"prompt-dialog-close",{dialogId:this.id,dialog:this,value:null})}handleCancel(t){o(this,"prompt-dialog-cancel",{dialogId:this.id,dialog:this})?this.cancel():t.preventDefault()}confirm(){var t,e;if(!this.validateInput())return;const n=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".dialog-input"),i=(null==n?void 0:n.value)||"";this._resolvePromise&&(this._resolvePromise(i),this._resolvePromise=null,this._rejectPromise=null),o(this,"prompt-dialog-confirm",{dialogId:this.id,dialog:this,value:i}),null===(e=this._nativeDialog)||void 0===e||e.close(i)}cancel(){var t;this._resolvePromise&&(this._resolvePromise(null),this._resolvePromise=null,this._rejectPromise=null),o(this,"prompt-dialog-cancel",{dialogId:this.id,dialog:this,value:null}),null===(t=this._nativeDialog)||void 0===t||t.close()}get theme(){return this._theme}set theme(t){this.setAttribute("theme",t)}get title(){return this.getAttribute("title")||"Input Required"}set title(t){this.setAttribute("title",t)}get message(){return this.getAttribute("message")||""}set message(t){this.setAttribute("message",t)}get placeholder(){return this.getAttribute("placeholder")||""}set placeholder(t){this.setAttribute("placeholder",t)}get defaultValue(){return this.getAttribute("default-value")||""}set defaultValue(t){this.setAttribute("default-value",t)}get confirmText(){return this.getAttribute("confirm-text")||"OK"}set confirmText(t){this.setAttribute("confirm-text",t)}get cancelText(){return this.getAttribute("cancel-text")||"Cancel"}set cancelText(t){this.setAttribute("cancel-text",t)}get required(){return this.hasAttribute("required")}set required(t){t?this.setAttribute("required",""):this.removeAttribute("required")}get multiline(){return this.hasAttribute("multiline")}set multiline(t){t?this.setAttribute("multiline",""):this.removeAttribute("multiline")}get value(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".dialog-input");return(null==e?void 0:e.value)||""}set value(t){var e;const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".dialog-input");n&&(n.value=t,this.validateInput())}get open(){var t;return(null===(t=this._nativeDialog)||void 0===t?void 0:t.open)||!1}show(){return new Promise((t,e)=>{var n,i;this._resolvePromise&&(null===(n=this._rejectPromise)||void 0===n||n.call(this,new Error("Dialog was replaced by another show() call"))),this._resolvePromise=t,this._rejectPromise=e,o(this,"prompt-dialog-show",{dialogId:this.id,dialog:this}),null===(i=this._nativeDialog)||void 0===i||i.showModal(),setTimeout(()=>{var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".dialog-input");null==e||e.focus(),null==e||e.select()},100)})}applyTheme(t){this._theme=t,d(this,t)}}customElements.get("e2-prompt")||customElements.define("e2-prompt",p);class v extends HTMLElement{static get observedAttributes(){return["theme","disabled","collapsed","orientation"]}constructor(){super(),this._theme="auto",this._collapsed=!1,this._orientation="vertical",this.setupElement()}setupElement(){const t=a(this);t.innerHTML='\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          background: var(--panel-bg, #ffffff);\n          border: 1px solid var(--panel-border, #ccc);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          transition: all 0.3s ease;\n        }\n\n        :host(.theme-dark) {\n          background: var(--panel-bg-dark, #2d2d2d);\n          border-color: var(--panel-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Vertical orientation (default) */\n        :host([orientation="vertical"]) {\n          min-height: 200px;\n        }\n\n        :host([orientation="vertical"][collapsed]) {\n          min-height: 32px;\n          height: 32px;\n          overflow: hidden;\n        }\n\n        /* Horizontal orientation */\n        :host([orientation="horizontal"]) {\n          min-width: 200px;\n          display: inline-block;\n          vertical-align: top;\n        }\n\n        :host([orientation="horizontal"][collapsed]) {\n          min-width: 32px;\n          width: 32px;\n          overflow: hidden;\n        }\n\n        .panel-header {\n          display: flex;\n          align-items: center;\n          padding: 8px;\n          background: var(--panel-header-bg, #f8f8f8);\n          border-bottom: 1px solid var(--panel-border, #ccc);\n          min-height: 16px;\n          cursor: pointer;\n          user-select: none;\n        }\n\n        :host(.theme-dark) .panel-header {\n          background: var(--panel-header-bg-dark, #3a3a3a);\n          border-bottom-color: var(--panel-border-dark, #555);\n        }\n\n        .panel-header:hover {\n          background: var(--panel-header-hover-bg, #e8e8e8);\n        }\n\n        :host(.theme-dark) .panel-header:hover {\n          background: var(--panel-header-hover-bg-dark, #404040);\n        }\n\n        .toggle-button {\n          width: 16px;\n          height: 16px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 12px;\n          margin-right: 8px;\n          flex-shrink: 0;\n        }\n\n        /* Vertical orientation icons */\n        :host([orientation="vertical"]) .toggle-button .burger-icon {\n          display: none;\n        }\n\n        :host([orientation="vertical"]) .toggle-button .close-icon {\n          display: block;\n        }\n\n        :host([orientation="vertical"][collapsed]) .toggle-button .burger-icon {\n          display: block;\n        }\n\n        :host([orientation="vertical"][collapsed]) .toggle-button .close-icon {\n          display: none;\n        }\n\n        /* Horizontal orientation icons */\n        :host([orientation="horizontal"]) .toggle-button .burger-icon {\n          display: none;\n        }\n\n        :host([orientation="horizontal"]) .toggle-button .close-icon {\n          display: block;\n        }\n\n        :host([orientation="horizontal"][collapsed]) .toggle-button .burger-icon {\n          display: block;\n        }\n\n        :host([orientation="horizontal"][collapsed]) .toggle-button .close-icon {\n          display: none;\n        }\n\n        /* Rotate icons for horizontal orientation */\n        :host([orientation="horizontal"]) .toggle-button {\n          transform: rotate(90deg);\n        }\n\n        .panel-title {\n          flex-grow: 1;\n          font-weight: 500;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        /* Hide title when collapsed */\n        :host([collapsed]) .panel-title {\n          display: none;\n        }\n\n        .panel-content {\n          padding: 12px;\n          overflow: auto;\n        }\n\n        :host([collapsed]) .panel-content {\n          display: none;\n        }\n\n        /* Content slot styling */\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n\n      <div class="panel-header">\n        <div class="toggle-button">\n          <span class="burger-icon">☰</span>\n          <span class="close-icon">✕</span>\n        </div>\n        <div class="panel-title">\n          <slot name="title">Panel</slot>\n        </div>\n      </div>\n\n      <div class="panel-content">\n        <slot></slot>\n      </div>\n    ',t.querySelector(".panel-header").addEventListener("click",this.handleToggle.bind(this))}connectedCallback(){this.id||(this.id=n("collapsible-panel")),this.applyTheme(this._theme)}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"theme":this.theme=n;break;case"collapsed":this._collapsed=null!==n;break;case"orientation":this._orientation=n||"vertical"}}handleToggle(){this.collapsed=!this.collapsed,o(this,"collapsible-panel-toggle",{panelId:this.id,panel:this,collapsed:this.collapsed,orientation:this.orientation})}get theme(){return this._theme}set theme(t){this._theme=t,this.applyTheme(t)}get collapsed(){return this._collapsed}set collapsed(t){this._collapsed=t,t?this.setAttribute("collapsed",""):this.removeAttribute("collapsed")}get orientation(){return this._orientation}set orientation(t){this._orientation=t,this.setAttribute("orientation",t)}toggle(){this.collapsed=!this.collapsed}expand(){this.collapsed=!1}collapse(){this.collapsed=!0}applyTheme(t){d(this,t)}}customElements.get("e2-collapsible-panel")||customElements.define("e2-collapsible-panel",v);class f extends HTMLElement{static get observedAttributes(){return["theme","disabled"]}constructor(){super(),this._theme="auto",this.setupElement()}setupElement(){a(this).innerHTML="\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          padding: 4px;\n          background: var(--toolbar-bg, #f0f0f0);\n          border-bottom: 1px solid var(--toolbar-border, #ccc);\n          gap: 2px;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n        }\n\n        :host(.theme-dark) {\n          background: var(--toolbar-bg-dark, #2d2d2d);\n          border-bottom-color: var(--toolbar-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        ::slotted(*) {\n          flex-shrink: 0;\n        }\n      </style>\n      <slot></slot>\n    "}connectedCallback(){this.id||(this.id=n("toolbar")),this.applyTheme(this._theme)}attributeChangedCallback(t,e,n){e!==n&&"theme"===t&&(this.theme=n)}get theme(){return this._theme}set theme(t){this._theme=t,this.applyTheme(t)}applyTheme(t){d(this,t)}closeAllMenus(t){this.querySelectorAll("e2-toolbar-menu").forEach(e=>{e!==t&&"function"==typeof e.close&&e.close()})}}customElements.get("e2-toolbar")||customElements.define("e2-toolbar",f);class x extends HTMLElement{static get observedAttributes(){return["label","icon","theme","disabled","active"]}constructor(){super(),this._theme="auto",this.setupElement()}setupElement(){const t=a(this);t.innerHTML='\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 4px;\n          padding: 6px 12px;\n          border: 1px solid transparent;\n          background: transparent;\n          color: var(--text-color, #333);\n          font-family: inherit;\n          font-size: inherit;\n          cursor: pointer;\n          border-radius: 3px;\n          min-height: 24px;\n          transition: all 0.15s ease;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n\n        button:hover {\n          background: var(--button-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        button:active,\n        button.active {\n          background: var(--button-active-bg, rgba(0, 0, 0, 0.2));\n        }\n\n        button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        :host(.theme-dark) button {\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host(.theme-dark) button:hover {\n          background: var(--button-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) button:active,\n        :host(.theme-dark) button.active {\n          background: var(--button-active-bg-dark, rgba(255, 255, 255, 0.2));\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          flex-shrink: 0;\n        }\n\n        .label {\n          white-space: nowrap;\n        }\n      </style>\n      <button>\n        <span class="icon" style="display: none;"></span>\n        <span class="label"></span>\n      </button>\n    ',t.querySelector("button").addEventListener("click",this.handleClick.bind(this))}connectedCallback(){this.id||(this.id=n("toolbar-button")),this.updateContent(),this.applyTheme(this._theme)}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"label":case"icon":this.updateContent();break;case"theme":this.theme=n;break;case"disabled":this.updateDisabled();break;case"active":this.updateActive()}}updateContent(){const t=this.shadowRoot,e=t.querySelector(".icon"),n=t.querySelector(".label"),o=this.getAttribute("icon"),i=this.getAttribute("label")||"";o?(e.textContent=o,e.style.display="inline-block"):e.style.display="none",n.textContent=i}updateDisabled(){this.shadowRoot.querySelector("button").disabled=this.hasAttribute("disabled")}updateActive(){this.shadowRoot.querySelector("button").classList.toggle("active",this.hasAttribute("active"))}handleClick(t){if(this.hasAttribute("disabled"))return;const e=new CustomEvent("toolbar-button-click",{detail:{buttonId:this.id,button:this},bubbles:!0,cancelable:!0});this.dispatchEvent(e)}get theme(){return this._theme}set theme(t){this._theme=t,this.applyTheme(t)}applyTheme(t){d(this,t)}get label(){return this.getAttribute("label")||""}set label(t){this.setAttribute("label",t)}get icon(){return this.getAttribute("icon")||""}set icon(t){this.setAttribute("icon",t)}get active(){return this.hasAttribute("active")}set active(t){t?this.setAttribute("active",""):this.removeAttribute("active")}}customElements.get("e2-toolbar-button")||customElements.define("e2-toolbar-button",x);class y extends HTMLElement{static get observedAttributes(){return["label","icon","theme","disabled"]}constructor(){super(),this._theme="auto",this._isOpen=!1,this._justOpened=!1,this.setupElement(),this.bindEvents()}setupElement(){const t=a(this);t.innerHTML='\n      <style>\n        :host {\n          display: inline-block;\n          position: relative;\n        }\n\n        .button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 4px;\n          padding: 6px 12px;\n          border: 1px solid transparent;\n          background: transparent;\n          color: var(--text-color, #333);\n          font-family: inherit;\n          font-size: inherit;\n          cursor: pointer;\n          border-radius: 3px;\n          min-height: 24px;\n          transition: all 0.15s ease;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n\n        .button:hover {\n          background: var(--button-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        .button:active,\n        .button.open {\n          background: var(--button-active-bg, rgba(0, 0, 0, 0.2));\n        }\n\n        .button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        :host(.theme-dark) .button {\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host(.theme-dark) .button:hover {\n          background: var(--button-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) .button:active,\n        :host(.theme-dark) .button.open {\n          background: var(--button-active-bg-dark, rgba(255, 255, 255, 0.2));\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          flex-shrink: 0;\n        }\n\n        .label {\n          white-space: nowrap;\n        }\n\n        .dropdown-arrow {\n          width: 0;\n          height: 0;\n          border-left: 4px solid transparent;\n          border-right: 4px solid transparent;\n          border-top: 4px solid currentColor;\n          margin-left: 4px;\n          flex-shrink: 0;\n        }\n\n        .dropdown {\n          position: absolute;\n          top: 100%;\n          left: 0;\n          z-index: 9999;\n          display: none;\n          min-width: 180px;\n          background: var(--context-menu-bg, #ffffff);\n          border: 1px solid var(--context-menu-border, #d0d0d0);\n          border-radius: 4px;\n          box-shadow: var(--context-menu-shadow, 0 2px 8px rgba(0, 0, 0, 0.15));\n          padding: 4px 0;\n          font-family: inherit;\n          font-size: 14px;\n          margin-top: 2px;\n        }\n\n        .dropdown.open {\n          display: block;\n        }\n\n        :host(.theme-light) .dropdown {\n          background: var(--context-menu-bg-light, #ffffff);\n          border-color: var(--context-menu-border-light, #d0d0d0);\n          box-shadow: var(--context-menu-shadow-light, 0 2px 8px rgba(0, 0, 0, 0.15));\n        }\n\n        :host(.theme-dark) .dropdown {\n          background: var(--context-menu-bg-dark, #2a2a2a);\n          border-color: var(--context-menu-border-dark, #444444);\n          box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n        }\n\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .dropdown {\n            background: var(--context-menu-bg-dark, #2a2a2a);\n            border-color: var(--context-menu-border-dark, #444444);\n            box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n          }\n        }\n\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n      <button class="button">\n        <span class="icon" style="display: none;"></span>\n        <span class="label"></span>\n        <div class="dropdown-arrow"></div>\n      </button>\n      <div class="dropdown">\n        <slot></slot>\n      </div>\n    ',t.querySelector(".button").addEventListener("click",this.handleButtonClick.bind(this))}bindEvents(){document.addEventListener("click",this.handleDocumentClick.bind(this)),document.addEventListener("keydown",this.handleKeyDown.bind(this)),window.addEventListener("resize",this.handleWindowResize.bind(this)),this.addEventListener("click",this.handleItemClick.bind(this))}connectedCallback(){this.id||(this.id=n("toolbar-menu")),this.updateContent(),this.applyTheme(this._theme)}attributeChangedCallback(t,e,n){if(e!==n)switch(t){case"label":case"icon":this.updateContent();break;case"theme":this.theme=n;break;case"disabled":this.updateDisabled()}}updateContent(){const t=this.shadowRoot,e=t.querySelector(".icon"),n=t.querySelector(".label"),o=this.getAttribute("icon"),i=this.getAttribute("label")||"";o?(e.textContent=o,e.style.display="inline-block"):e.style.display="none",n.textContent=i}updateDisabled(){this.shadowRoot.querySelector(".button").disabled=this.hasAttribute("disabled"),this.hasAttribute("disabled")&&this._isOpen&&this.close()}handleButtonClick(t){this.hasAttribute("disabled")||(t.stopPropagation(),this._isOpen?this.close():this.open())}handleDocumentClick(t){var e;if(!this._isOpen)return;if(this._justOpened)return void(this._justOpened=!1);const n=t.target;this.contains(n)||(null===(e=this.shadowRoot)||void 0===e?void 0:e.contains(n))||this.close()}handleKeyDown(t){if(this._isOpen)switch(t.key){case"Escape":t.preventDefault(),this.close();break;case"ArrowDown":t.preventDefault(),this.focusNextItem();break;case"ArrowUp":t.preventDefault(),this.focusPreviousItem();break;case"Enter":case" ":t.preventDefault(),this.activateFocusedItem()}}handleWindowResize(){this._isOpen&&this.close()}handleItemClick(t){const e=t.target;("E2-CONTEXT-MENU-ITEM"===e.tagName||e.closest("e2-context-menu-item"))&&setTimeout(()=>this.close(),0)}focusNextItem(){const t=this.querySelectorAll("e2-context-menu-item:not([disabled])"),e=Array.from(t).findIndex(t=>{var e;return t===document.activeElement||(null===(e=t.shadowRoot)||void 0===e?void 0:e.activeElement)});t[e<t.length-1?e+1:0].focus()}focusPreviousItem(){const t=this.querySelectorAll("e2-context-menu-item:not([disabled])"),e=Array.from(t).findIndex(t=>{var e;return t===document.activeElement||(null===(e=t.shadowRoot)||void 0===e?void 0:e.activeElement)});t[e>0?e-1:t.length-1].focus()}activateFocusedItem(){const t=document.activeElement;t&&"E2-CONTEXT-MENU-ITEM"===t.tagName&&t.click()}adjustPosition(){const t=this.shadowRoot.querySelector(".dropdown"),e=this.getBoundingClientRect(),n=t.getBoundingClientRect();e.left+n.width>window.innerWidth?(t.style.left="auto",t.style.right="0"):(t.style.left="0",t.style.right="auto"),e.bottom+n.height>window.innerHeight?(t.style.top="auto",t.style.bottom="100%",t.style.marginTop="0",t.style.marginBottom="2px"):(t.style.top="100%",t.style.bottom="auto",t.style.marginTop="2px",t.style.marginBottom="0")}get theme(){return this._theme}set theme(t){this._theme=t,this.applyTheme(t)}applyTheme(t){d(this,t),this.querySelectorAll("e2-context-menu-item, e2-context-menu-separator").forEach(e=>{"function"==typeof e.applyTheme&&e.applyTheme(t)})}get label(){return this.getAttribute("label")||""}set label(t){this.setAttribute("label",t)}get icon(){return this.getAttribute("icon")||""}set icon(t){this.setAttribute("icon",t)}get isOpen(){return this._isOpen}open(){if(this.hasAttribute("disabled")||this._isOpen)return;const t=this.closest("e2-toolbar");t&&"function"==typeof t.closeAllMenus&&t.closeAllMenus(this),this._isOpen=!0;const e=this.shadowRoot.querySelector(".button"),n=this.shadowRoot.querySelector(".dropdown");e.classList.add("open"),n.classList.add("open"),this.adjustPosition(),this._justOpened=!0,this.applyTheme(this._theme);const o=new CustomEvent("toolbar-menu-show",{detail:{menuId:this.id,menu:this},bubbles:!0,cancelable:!0});this.dispatchEvent(o)}close(){if(!this._isOpen)return;this._isOpen=!1;const t=this.shadowRoot.querySelector(".button"),e=this.shadowRoot.querySelector(".dropdown");t.classList.remove("open"),e.classList.remove("open");const n=new CustomEvent("toolbar-menu-hide",{detail:{menuId:this.id,menu:this},bubbles:!0,cancelable:!0});this.dispatchEvent(n)}toggle(){this._isOpen?this.close():this.open()}}customElements.get("e2-toolbar-menu")||customElements.define("e2-toolbar-menu",y);class k extends HTMLElement{static get observedAttributes(){return["theme"]}constructor(){super(),this._theme="auto",this.setupElement()}setupElement(){a(this).innerHTML="\n      <style>\n        :host {\n          display: inline-block;\n          width: 1px;\n          height: 24px;\n          background: var(--separator-color, #ccc);\n          margin: 0 4px;\n          flex-shrink: 0;\n        }\n\n        :host(.theme-dark) {\n          background: var(--separator-color-dark, #555);\n        }\n      </style>\n    "}connectedCallback(){this.applyTheme(this._theme)}attributeChangedCallback(t,e,n){e!==n&&"theme"===t&&(this.theme=n)}get theme(){return this._theme}set theme(t){this._theme=t,this.applyTheme(t)}applyTheme(t){d(this,t)}}customElements.get("e2-toolbar-separator")||customElements.define("e2-toolbar-separator",k);const w="1.0.0";return e})());
//# sourceMappingURL=e2.min.js.map