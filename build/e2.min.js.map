{"version":3,"file":"e2.min.js","mappings":"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","sources":["webpack://E2/webpack/universalModuleDefinition","webpack://E2/./node_modules/jsonschema/lib/attribute.js","webpack://E2/./node_modules/jsonschema/lib/index.js","webpack://E2/./node_modules/jsonschema/lib/validator.js","webpack://E2/./node_modules/jsonschema/lib/helpers.js","webpack://E2/./node_modules/jsonschema/lib/scan.js","webpack://E2/webpack/bootstrap","webpack://E2/webpack/runtime/define property getters","webpack://E2/webpack/runtime/hasOwnProperty shorthand","webpack://E2/webpack/runtime/make namespace object","webpack://E2/./src/utils.ts","webpack://E2/./src/elements/app/app.ts","webpack://E2/./src/elements/contextmenu/context-menu.ts","webpack://E2/./src/elements/contextmenu/context-menu-item.ts","webpack://E2/./src/elements/contextmenu/context-menu-menu.ts","webpack://E2/./src/elements/contextmenu/context-menu-separator.ts","webpack://E2/./src/elements/dialog/alert.ts","webpack://E2/./src/elements/dialog/confirm.ts","webpack://E2/./src/elements/dialog/dialog.ts","webpack://E2/./src/elements/dialog/prompt.ts","webpack://E2/./src/elements/keyvalue/keyvalue-editor.ts","webpack://E2/./src/elements/listview/list-view.ts","webpack://E2/./src/elements/notification/notification.ts","webpack://E2/./src/elements/notification/notification-container.ts","webpack://E2/./src/elements/panel/collapsible-panel.ts","webpack://E2/./src/elements/panel/split-panel.ts","webpack://E2/./src/elements/panel/split-panel-container.ts","webpack://E2/./src/elements/statusbar/status-bar.ts","webpack://E2/./src/elements/statusbar/status-item.ts","webpack://E2/./src/elements/statusbar/status-section.ts","webpack://E2/./src/elements/tabs/tab.ts","webpack://E2/./src/elements/tabs/tab-container.ts","webpack://E2/./src/elements/tabs/tab-panel.ts","webpack://E2/./src/elements/toolbar/toolbar.ts","webpack://E2/./src/elements/toolbar/toolbar-button.ts","webpack://E2/./src/elements/toolbar/toolbar-menu.ts","webpack://E2/./src/elements/toolbar/toolbar-separator.ts","webpack://E2/./src/elements/treeview/tree-view.ts","webpack://E2/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"E2\"] = factory();\n\telse\n\t\troot[\"E2\"] = factory();\n})(this, () => {\nreturn ","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","'use strict';\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  let base = helpers.resolveUrl(options.base,id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  let parsed = new URL(switchSchema,'thismessage::/');\n  let fragment = parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","'use strict';\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(typeof Error.captureStackTrace === 'function'){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  if(typeof Error.captureStackTrace === 'function'){\n    Error.captureStackTrace(this, SchemaError);\n  }\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return (() => resolveUrl(this.base,target))();\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  let base = (() => resolveUrl(this.base,id||''))();\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n/**\n * Resolve target URL from a base and relative URL.\n * Similar to Node's URL Lib's legacy resolve function.\n * Code from example in deprecation note in said library.\n * @param string\n * @param string\n * @returns {string}\n */\nvar resolveUrl = exports.resolveUrl = function resolveUrl(from, to) {\n  const resolvedUrl = new URL(to, new URL(from, 'resolve://'));\n  if (resolvedUrl.protocol === 'resolve:') {\n    const { pathname, search, hash } = resolvedUrl;\n    return pathname + search + hash;\n  }\n  return resolvedUrl.toString();\n}\n","\"use strict\";\n\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      let resolvedUri = helpers.resolveUrl(baseuri,schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    let resolvedBase = helpers.resolveUrl(baseuri,id);\n    var ourBase = id ? resolvedBase : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Utility functions for editor elements\n */\n\n/**\n * Generate a unique ID for elements\n */\nexport function generateId(prefix = 'element'): string {\n  return `${prefix}-${Math.random().toString(36).substring(2, 9)}`;\n}\n\n/**\n * Dispatch a custom event from an element\n */\nexport function dispatchCustomEvent<T = any>(\n  element: HTMLElement,\n  eventName: string,\n  detail?: T,\n  options: CustomEventInit = {}\n): boolean {\n  const event = new CustomEvent(eventName, {\n    detail,\n    bubbles: true,\n    cancelable: true,\n    ...options,\n  });\n\n  return element.dispatchEvent(event);\n}\n\n/**\n * Add CSS to the document head if it doesn't already exist\n */\nexport function addGlobalCSS(css: string, id?: string): void {\n  if (id && document.getElementById(id)) {\n    return; // CSS already added\n  }\n\n  const style = document.createElement('style');\n  if (id) {\n    style.id = id;\n  }\n  style.textContent = css;\n  document.head.appendChild(style);\n}\n\n/**\n * Create a template element with the given HTML\n */\nexport function createTemplate(html: string): HTMLTemplateElement {\n  const template = document.createElement('template');\n  template.innerHTML = html.trim();\n  return template;\n}\n\n/**\n * Get or create a shadow root for an element\n */\nexport function getShadowRoot(\n  element: HTMLElement,\n  options: ShadowRootInit = { mode: 'open' }\n): ShadowRoot {\n  return element.shadowRoot || element.attachShadow(options);\n}\n\n/**\n * Debounce function to limit how often a function can be called\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: number;\n\n  return function executedFunction(...args: Parameters<T>) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n\n    clearTimeout(timeout);\n    timeout = window.setTimeout(later, wait);\n  };\n}\n\n/**\n * Check if an element is visible in the viewport\n */\nexport function isElementVisible(element: HTMLElement): boolean {\n  const rect = element.getBoundingClientRect();\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <=\n      (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n}\n\n/**\n * Find the closest parent e2-app element\n */\nexport function findParentApp(element: HTMLElement): HTMLElement | null {\n  let current = element.parentElement;\n  while (current) {\n    if (current.tagName.toLowerCase() === 'e2-app') {\n      return current;\n    }\n    current = current.parentElement;\n  }\n  return null;\n}\n\n/**\n * Get the effective theme for an element\n * If the element has an explicit theme attribute, use that\n * Otherwise, inherit from the parent e2-app if available\n * Falls back to 'auto' if no parent app found\n */\nexport function getEffectiveTheme(\n  element: HTMLElement\n): 'light' | 'dark' | 'auto' {\n  // Check if element has explicit theme attribute\n  const explicitTheme = element.getAttribute('theme');\n  if (explicitTheme && ['light', 'dark', 'auto'].includes(explicitTheme)) {\n    return explicitTheme as 'light' | 'dark' | 'auto';\n  }\n\n  // Look for parent app theme\n  const parentApp = findParentApp(element);\n  if (parentApp) {\n    const parentTheme = parentApp.getAttribute('theme');\n    if (parentTheme && ['light', 'dark', 'auto'].includes(parentTheme)) {\n      return parentTheme as 'light' | 'dark' | 'auto';\n    }\n  }\n\n  // Default fallback\n  return 'auto';\n}\n\n/**\n * Apply theme class to an element\n */\nexport function applyTheme(\n  element: HTMLElement,\n  theme: 'light' | 'dark' | 'auto'\n): void {\n  element.classList.remove('theme-light', 'theme-dark', 'theme-auto');\n  element.classList.add(`theme-${theme}`);\n}\n\n/**\n * Apply effective theme to an element (with inheritance support)\n */\nexport function applyEffectiveTheme(element: HTMLElement): void {\n  const effectiveTheme = getEffectiveTheme(element);\n  applyTheme(element, effectiveTheme);\n}\n\n/**\n * Setup theme inheritance for an element\n * This should be called in the element's connectedCallback\n */\nexport function setupThemeInheritance(\n  element: HTMLElement,\n  onThemeChange?: (theme: 'light' | 'dark' | 'auto') => void\n): () => void {\n  const handleAppThemeChange = (event: CustomEvent) => {\n    // Only respond if this element doesn't have its own theme attribute\n    if (!element.hasAttribute('theme')) {\n      const newTheme = event.detail.theme;\n      applyTheme(element, newTheme);\n\n      // Call custom handler if provided\n      if (onThemeChange) {\n        onThemeChange(newTheme);\n      }\n    }\n  };\n\n  // Listen for theme changes from parent app\n  document.addEventListener(\n    'e2-app-theme-change',\n    handleAppThemeChange as EventListener\n  );\n\n  // Return cleanup function\n  return () => {\n    document.removeEventListener(\n      'e2-app-theme-change',\n      handleAppThemeChange as EventListener\n    );\n  };\n}\n\n/**\n * Notify all child elements about theme change\n */\nexport function notifyThemeChange(\n  appElement: HTMLElement,\n  theme: 'light' | 'dark' | 'auto'\n): void {\n  // Dispatch a custom event that bubbles up\n  const event = new CustomEvent('e2-app-theme-change', {\n    detail: {\n      theme,\n      appElement,\n    },\n    bubbles: true,\n    cancelable: false,\n  });\n\n  // Dispatch from the app element so it can be captured by child elements\n  appElement.dispatchEvent(event);\n\n  // Also dispatch globally for elements that might not be in the DOM tree yet\n  document.dispatchEvent(event);\n}\n\n/**\n * Initialize theme inheritance for a component\n * This is a helper function that standardizes the theme inheritance pattern\n * Call this in your component's connectedCallback\n */\nexport function initializeThemeInheritance(\n  element: HTMLElement & {\n    applyTheme: (theme: 'light' | 'dark' | 'auto') => void;\n  },\n  currentTheme: 'light' | 'dark' | 'auto'\n): (() => void) | undefined {\n  // Set up theme inheritance if no explicit theme is set\n  if (!element.hasAttribute('theme')) {\n    applyEffectiveTheme(element);\n    return setupThemeInheritance(element);\n  } else {\n    element.applyTheme(currentTheme);\n    return undefined;\n  }\n}\n\n/**\n * Handle theme changes for a component\n * This is a helper function that standardizes theme change handling\n * Call this in your component's theme setter and attributeChangedCallback\n */\nexport function handleThemeChange(\n  element: HTMLElement & {\n    applyTheme: (theme: 'light' | 'dark' | 'auto') => void;\n  },\n  newTheme: 'light' | 'dark' | 'auto' | null,\n  themeCleanupRef: { current?: () => void }\n): void {\n  // Clean up any existing theme inheritance first\n  if (themeCleanupRef.current) {\n    themeCleanupRef.current();\n    themeCleanupRef.current = undefined;\n  }\n\n  if (newTheme) {\n    // Explicit theme set\n    element.applyTheme(newTheme);\n  } else if (element.isConnected) {\n    // Theme attribute removed, switch to inheritance\n    applyEffectiveTheme(element);\n    themeCleanupRef.current = setupThemeInheritance(element);\n  }\n}\n\n/**\n * Create and show a toast notification programmatically\n */\nexport interface CreateToastOptions {\n  title?: string;\n  timeout?: number;\n  dismissible?: boolean;\n  persistent?: boolean;\n  container?: HTMLElement | string;\n}\n\nexport function createToast(\n  type: 'info' | 'success' | 'warning' | 'error',\n  message: string,\n  options: CreateToastOptions = {}\n): Promise<void> {\n  // Create the notification element\n  const notification = document.createElement('e2-notification') as any;\n  notification.type = type;\n  notification.message = message;\n\n  if (options.title) {\n    notification.title = options.title;\n  }\n\n  if (options.timeout !== undefined) {\n    notification.timeout = options.timeout;\n  }\n\n  if (options.dismissible !== undefined) {\n    notification.dismissible = options.dismissible;\n  }\n\n  if (options.persistent !== undefined) {\n    notification.persistent = options.persistent;\n  }\n\n  // Find or create container\n  let container: HTMLElement;\n\n  if (options.container) {\n    if (typeof options.container === 'string') {\n      const found = document.querySelector(options.container);\n      if (found) {\n        container = found as HTMLElement;\n      } else {\n        container = document.body;\n      }\n    } else {\n      container = options.container;\n    }\n  } else {\n    // Look for existing notification container\n    const existingContainer = document.querySelector(\n      'e2-notification-container'\n    );\n    if (existingContainer) {\n      container = existingContainer as HTMLElement;\n    } else {\n      // Create default container\n      const defaultContainer = document.createElement(\n        'e2-notification-container'\n      ) as any;\n      defaultContainer.position = 'top-right';\n      document.body.appendChild(defaultContainer);\n      container = defaultContainer;\n    }\n  }\n\n  // Add notification to container\n  container.appendChild(notification);\n\n  // Show the notification and clean up when done\n  return notification.show().then(() => {\n    // Remove from DOM after hiding animation completes\n    if (notification.parentNode) {\n      notification.parentNode.removeChild(notification);\n    }\n  });\n}\n\n/**\n * Toast API for convenient toast creation\n */\nexport const Toast = {\n  /**\n   * Show an info toast\n   */\n  info: (message: string, options?: CreateToastOptions): Promise<void> =>\n    createToast('info', message, options),\n\n  /**\n   * Show a success toast\n   */\n  success: (message: string, options?: CreateToastOptions): Promise<void> =>\n    createToast('success', message, options),\n\n  /**\n   * Show a warning toast\n   */\n  warning: (message: string, options?: CreateToastOptions): Promise<void> =>\n    createToast('warning', message, options),\n\n  /**\n   * Show an error toast\n   */\n  error: (message: string, options?: CreateToastOptions): Promise<void> =>\n    createToast('error', message, options),\n};\n","/**\n * E2 App Element\n * A wrapper element that provides global CSS styles and theming for E2 applications\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport { applyTheme, generateId, notifyThemeChange } from '../../utils';\n\nexport class E2App extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _stylesInitialized: boolean = false;\n\n  static get observedAttributes(): string[] {\n    return ['theme'];\n  }\n\n  constructor() {\n    super();\n    // Don't set up DOM in constructor - defer to connectedCallback\n  }\n\n  private setupElement(): void {\n    // Apply styles directly to the document head (not to the element itself)\n    // This allows global styles to cascade to child elements without interfering with DOM structure\n\n    // Check if styles are already added to avoid conflicts\n    if (!this._stylesInitialized && !document.getElementById('e2-app-styles')) {\n      const styleElement = document.createElement('style');\n      styleElement.id = 'e2-app-styles';\n      styleElement.textContent = `\n        /* CSS Reset and Base Styles */\n        e2-app, e2-app * {\n          box-sizing: border-box;\n        }\n\n        e2-app {\n          /* Layout */\n          --app-width: 100%;\n          --app-height: 100vh;\n          --app-padding: 0;\n          --app-margin: 0;\n\n          /* Typography */\n          --font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;\n          --font-size: 14px;\n          --line-height: 1.4;\n          --font-weight: 400;\n\n          /* Colors - Light Theme */\n          --bg-primary: #ffffff;\n          --bg-secondary: #f8f9fa;\n          --bg-tertiary: #e9ecef;\n          --text-primary: #212529;\n          --text-secondary: #6c757d;\n          --text-muted: #adb5bd;\n          --border-color: #dee2e6;\n          --border-color-hover: #adb5bd;\n          --accent-color: #0d6efd;\n          --accent-color-hover: #0b5ed7;\n          --success-color: #198754;\n          --warning-color: #ffc107;\n          --danger-color: #dc3545;\n\n          /* Form Controls */\n          --input-bg: #ffffff;\n          --input-border: #ced4da;\n          --input-border-focus: #86b7fe;\n          --input-text: #212529;\n          --input-placeholder: #6c757d;\n          --input-padding: 6px 12px;\n          --input-border-radius: 4px;\n          --input-font-size: 14px;\n\n          /* Buttons */\n          --button-bg: #f8f9fa;\n          --button-bg-hover: #e9ecef;\n          --button-border: #ced4da;\n          --button-text: #212529;\n          --button-padding: 6px 12px;\n          --button-border-radius: 4px;\n\n          /* Shadows */\n          --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);\n          --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n          --shadow-lg: 0 4px 6px rgba(0, 0, 0, 0.1);\n\n          /* Transitions */\n          --transition-fast: 0.15s ease-in-out;\n          --transition-normal: 0.3s ease-in-out;\n\n          /* Apply base layout */\n          display: block;\n          width: var(--app-width);\n          height: var(--app-height);\n          padding: var(--app-padding);\n          margin: var(--app-margin);\n          font-family: var(--font-family);\n          font-size: var(--font-size);\n          line-height: var(--line-height);\n          font-weight: var(--font-weight);\n          color: var(--text-primary);\n          background-color: var(--bg-primary);\n          overflow: hidden;\n        }\n\n        /* Dark Theme */\n        e2-app.theme-dark {\n          --bg-primary: #1a1a1a;\n          --bg-secondary: #2d2d2d;\n          --bg-tertiary: #404040;\n          --text-primary: #ffffff;\n          --text-secondary: #cccccc;\n          --text-muted: #999999;\n          --border-color: #404040;\n          --border-color-hover: #666666;\n          --accent-color: #4dabf7;\n          --accent-color-hover: #339af0;\n          --success-color: #51cf66;\n          --warning-color: #ffd43b;\n          --danger-color: #ff6b6b;\n\n          --input-bg: #2d2d2d;\n          --input-border: #404040;\n          --input-border-focus: #4dabf7;\n          --input-text: #ffffff;\n          --input-placeholder: #999999;\n\n          --button-bg: #2d2d2d;\n          --button-bg-hover: #404040;\n          --button-border: #404040;\n          --button-text: #ffffff;\n\n          --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.25);\n          --shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n          --shadow-lg: 0 4px 6px rgba(0, 0, 0, 0.3);\n        }\n\n        /* Auto Theme - uses system preference */\n        e2-app.theme-auto {\n          color-scheme: light dark;\n        }\n\n        @media (prefers-color-scheme: dark) {\n          e2-app.theme-auto {\n            --bg-primary: #1a1a1a;\n            --bg-secondary: #2d2d2d;\n            --bg-tertiary: #404040;\n            --text-primary: #ffffff;\n            --text-secondary: #cccccc;\n            --text-muted: #999999;\n            --border-color: #404040;\n            --border-color-hover: #666666;\n            --accent-color: #4dabf7;\n            --accent-color-hover: #339af0;\n            --success-color: #51cf66;\n            --warning-color: #ffd43b;\n            --danger-color: #ff6b6b;\n\n            --input-bg: #2d2d2d;\n            --input-border: #404040;\n            --input-border-focus: #4dabf7;\n            --input-text: #ffffff;\n            --input-placeholder: #999999;\n\n            --button-bg: #2d2d2d;\n            --button-bg-hover: #404040;\n            --button-border: #404040;\n            --button-text: #ffffff;\n\n            --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.25);\n            --shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n            --shadow-lg: 0 4px 6px rgba(0, 0, 0, 0.3);\n          }\n        }\n\n        /* Typography Styles */\n        e2-app h1, e2-app h2, e2-app h3, e2-app h4, e2-app h5, e2-app h6 {\n          margin: 0 0 0.5em 0;\n          font-weight: 600;\n          line-height: 1.2;\n          color: var(--text-primary);\n        }\n\n        e2-app h1 { font-size: 2rem; }\n        e2-app h2 { font-size: 1.5rem; }\n        e2-app h3 { font-size: 1.25rem; }\n        e2-app h4 { font-size: 1.1rem; }\n        e2-app h5 { font-size: 1rem; }\n        e2-app h6 { font-size: 0.9rem; }\n\n        e2-app p {\n          margin: 0 0 1em 0;\n          color: var(--text-primary);\n        }\n\n        e2-app small {\n          font-size: 0.875em;\n          color: var(--text-secondary);\n        }\n\n        e2-app strong {\n          font-weight: 600;\n        }\n\n        e2-app a {\n          color: var(--accent-color);\n          text-decoration: none;\n          transition: color var(--transition-fast);\n        }\n\n        e2-app a:hover {\n          color: var(--accent-color-hover);\n          text-decoration: underline;\n        }\n\n        /* Form Control Styles */\n        e2-app input[type=\"text\"],\n        e2-app input[type=\"email\"],\n        e2-app input[type=\"password\"],\n        e2-app input[type=\"number\"],\n        e2-app input[type=\"search\"],\n        e2-app input[type=\"url\"],\n        e2-app input[type=\"tel\"],\n        e2-app input[type=\"date\"],\n        e2-app input[type=\"time\"],\n        e2-app input[type=\"datetime-local\"],\n        e2-app textarea,\n        e2-app select {\n          display: block;\n          width: 100%;\n          padding: var(--input-padding);\n          font-size: var(--input-font-size);\n          font-family: var(--font-family);\n          line-height: var(--line-height);\n          color: var(--input-text);\n          background-color: var(--input-bg);\n          background-clip: padding-box;\n          border: 1px solid var(--input-border);\n          border-radius: var(--input-border-radius);\n          transition: border-color var(--transition-fast), box-shadow var(--transition-fast);\n        }\n\n        e2-app input[type=\"text\"]:focus,\n        e2-app input[type=\"email\"]:focus,\n        e2-app input[type=\"password\"]:focus,\n        e2-app input[type=\"number\"]:focus,\n        e2-app input[type=\"search\"]:focus,\n        e2-app input[type=\"url\"]:focus,\n        e2-app input[type=\"tel\"]:focus,\n        e2-app input[type=\"date\"]:focus,\n        e2-app input[type=\"time\"]:focus,\n        e2-app input[type=\"datetime-local\"]:focus,\n        e2-app textarea:focus,\n        e2-app select:focus {\n          outline: 0;\n          border-color: var(--input-border-focus);\n          box-shadow: 0 0 0 2px rgba(13, 110, 253, 0.25);\n        }\n\n        e2-app input::placeholder,\n        e2-app textarea::placeholder {\n          color: var(--input-placeholder);\n          opacity: 1;\n        }\n\n        e2-app input:disabled,\n        e2-app textarea:disabled,\n        e2-app select:disabled {\n          background-color: var(--bg-tertiary);\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        /* Textarea specific */\n        e2-app textarea {\n          resize: vertical;\n          min-height: 80px;\n        }\n\n        /* Select specific */\n        e2-app select {\n          cursor: pointer;\n        }\n\n        /* Checkbox and Radio Styles */\n        e2-app input[type=\"checkbox\"],\n        e2-app input[type=\"radio\"] {\n          width: 16px;\n          height: 16px;\n          margin: 0 8px 0 0;\n          vertical-align: middle;\n          cursor: pointer;\n          accent-color: var(--accent-color);\n        }\n\n        e2-app input[type=\"checkbox\"]:disabled,\n        e2-app input[type=\"radio\"]:disabled {\n          cursor: not-allowed;\n          opacity: 0.6;\n        }\n\n        /* Range Input */\n        e2-app input[type=\"range\"] {\n          width: 100%;\n          height: 6px;\n          background: var(--bg-tertiary);\n          border-radius: 3px;\n          outline: none;\n          cursor: pointer;\n          accent-color: var(--accent-color);\n        }\n\n        /* File Input */\n        e2-app input[type=\"file\"] {\n          display: block;\n          width: 100%;\n          padding: var(--input-padding);\n          font-size: var(--input-font-size);\n          font-family: var(--font-family);\n          color: var(--input-text);\n          background-color: var(--input-bg);\n          border: 1px solid var(--input-border);\n          border-radius: var(--input-border-radius);\n          cursor: pointer;\n        }\n\n        /* Button Styles */\n        e2-app button,\n        e2-app input[type=\"button\"],\n        e2-app input[type=\"submit\"],\n        e2-app input[type=\"reset\"] {\n          display: inline-block;\n          padding: var(--button-padding);\n          font-size: var(--input-font-size);\n          font-family: var(--font-family);\n          font-weight: 500;\n          line-height: var(--line-height);\n          color: var(--button-text);\n          text-align: center;\n          text-decoration: none;\n          vertical-align: middle;\n          cursor: pointer;\n          background-color: var(--button-bg);\n          border: 1px solid var(--button-border);\n          border-radius: var(--button-border-radius);\n          transition: all var(--transition-fast);\n          user-select: none;\n        }\n\n        e2-app button:hover,\n        e2-app input[type=\"button\"]:hover,\n        e2-app input[type=\"submit\"]:hover,\n        e2-app input[type=\"reset\"]:hover {\n          background-color: var(--button-bg-hover);\n          border-color: var(--border-color-hover);\n        }\n\n        e2-app button:focus,\n        e2-app input[type=\"button\"]:focus,\n        e2-app input[type=\"submit\"]:focus,\n        e2-app input[type=\"reset\"]:focus {\n          outline: 0;\n          box-shadow: 0 0 0 2px rgba(13, 110, 253, 0.25);\n        }\n\n        e2-app button:disabled,\n        e2-app input[type=\"button\"]:disabled,\n        e2-app input[type=\"submit\"]:disabled,\n        e2-app input[type=\"reset\"]:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n\n        /* Primary Button Variant */\n        e2-app button.primary,\n        e2-app input[type=\"submit\"] {\n          color: white;\n          background-color: var(--accent-color);\n          border-color: var(--accent-color);\n        }\n\n        e2-app button.primary:hover,\n        e2-app input[type=\"submit\"]:hover {\n          background-color: var(--accent-color-hover);\n          border-color: var(--accent-color-hover);\n        }\n\n        /* Label Styles */\n        e2-app label {\n          display: inline-block;\n          margin-bottom: 4px;\n          font-weight: 500;\n          color: var(--text-primary);\n          cursor: pointer;\n        }\n\n        /* Fieldset and Legend */\n        e2-app fieldset {\n          padding: 16px;\n          margin: 0 0 16px 0;\n          border: 1px solid var(--border-color);\n          border-radius: var(--input-border-radius);\n        }\n\n        e2-app legend {\n          padding: 0 8px;\n          font-weight: 600;\n          color: var(--text-primary);\n        }\n\n        /* Form Groups */\n        e2-app .form-group {\n          margin-bottom: 16px;\n        }\n\n        e2-app .form-group label {\n          display: block;\n          margin-bottom: 4px;\n        }\n\n        /* Utility Classes */\n        e2-app .text-muted {\n          color: var(--text-muted) !important;\n        }\n\n        e2-app .text-primary {\n          color: var(--text-primary) !important;\n        }\n\n        e2-app .text-secondary {\n          color: var(--text-secondary) !important;\n        }\n\n        e2-app .bg-primary {\n          background-color: var(--bg-primary) !important;\n        }\n\n        e2-app .bg-secondary {\n          background-color: var(--bg-secondary) !important;\n        }\n\n        e2-app .border {\n          border: 1px solid var(--border-color) !important;\n        }\n\n        e2-app .rounded {\n          border-radius: var(--input-border-radius) !important;\n        }\n\n        e2-app .shadow {\n          box-shadow: var(--shadow) !important;\n        }\n\n        e2-app .shadow-sm {\n          box-shadow: var(--shadow-sm) !important;\n        }\n\n        e2-app .shadow-lg {\n          box-shadow: var(--shadow-lg) !important;\n        }\n      `;\n\n      // Add style element to document head instead of modifying the App element's DOM\n      // This prevents interference with child custom element initialization\n      document.head.appendChild(styleElement);\n      this._stylesInitialized = true;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('e2-app');\n    }\n\n    // Set up element after it's connected to DOM\n    this.setupElement();\n\n    this.applyTheme(this._theme);\n\n    // Set up system theme detection for auto mode\n    if (this._theme === 'auto') {\n      this.setupAutoTheme();\n    }\n\n    // Notify child elements about initial theme\n    // Use setTimeout to ensure child elements are connected first\n    setTimeout(() => {\n      notifyThemeChange(this, this._theme);\n    }, 0);\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme listeners if any\n    if (this.mediaQueryList) {\n      this.mediaQueryList.removeEventListener('change', this.handleThemeChange);\n    }\n  }\n\n  private mediaQueryList?: MediaQueryList;\n  private handleThemeChange = () => {\n    if (this._theme === 'auto') {\n      this.applyTheme('auto');\n      // Notify child elements about system theme change\n      notifyThemeChange(this, 'auto');\n    }\n  };\n\n  private setupAutoTheme(): void {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.mediaQueryList = window.matchMedia('(prefers-color-scheme: dark)');\n      this.mediaQueryList.addEventListener('change', this.handleThemeChange);\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    const oldTheme = this._theme;\n    this._theme = value;\n    this.applyTheme(value);\n\n    if (value === 'auto') {\n      this.setupAutoTheme();\n    } else if (this.mediaQueryList) {\n      this.mediaQueryList.removeEventListener('change', this.handleThemeChange);\n      this.mediaQueryList = undefined;\n    }\n\n    // Notify child elements about theme change\n    if (oldTheme !== value) {\n      notifyThemeChange(this, value);\n    }\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Set a custom CSS property value\n   */\n  setCSSVariable(property: string, value: string): void {\n    this.style.setProperty(`--${property}`, value);\n  }\n\n  /**\n   * Get a custom CSS property value\n   */\n  getCSSVariable(property: string): string {\n    return getComputedStyle(this).getPropertyValue(`--${property}`).trim();\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-app')) {\n  customElements.define('e2-app', E2App);\n}\n","/**\n * Context Menu Element\n * A popup menu that appears on right-click or programmatic trigger\n */\n\nimport {\n  ComponentContext,\n  ContextMenuHideEvent,\n  ContextMenuShowEvent,\n  EditorElementProperties,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ContextMenu\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _visible: boolean = false;\n  private _justShown: boolean = false;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'target'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.bindEvents();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          position: fixed;\n          z-index: 9999;\n          display: none;\n          min-width: 180px;\n          background: var(--context-menu-bg, #ffffff);\n          border: 1px solid var(--context-menu-border, #d0d0d0);\n          border-radius: 4px;\n          box-shadow: var(--context-menu-shadow, 0 2px 8px rgba(0, 0, 0, 0.15));\n          padding: 4px 0;\n          font-family: inherit;\n          font-size: 14px;\n        }\n\n        :host([visible]) {\n          display: block;\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Light theme */\n        :host(.theme-light) {\n          background: var(--context-menu-bg-light, #ffffff);\n          border-color: var(--context-menu-border-light, #d0d0d0);\n          box-shadow: var(--context-menu-shadow-light, 0 2px 8px rgba(0, 0, 0, 0.15));\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) {\n          background: var(--context-menu-bg-dark, #2a2a2a);\n          border-color: var(--context-menu-border-dark, #444444);\n          box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) {\n            background: var(--context-menu-bg-dark, #2a2a2a);\n            border-color: var(--context-menu-border-dark, #444444);\n            box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n          }\n        }\n\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n      <slot></slot>\n    `;\n  }\n\n  private bindEvents(): void {\n    // Close menu when clicking outside\n    document.addEventListener('click', this.handleDocumentClick.bind(this));\n\n    // Close menu on escape key\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n    // Handle window resize\n    window.addEventListener('resize', this.handleWindowResize.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('context-menu');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      this.applyEffectiveThemeFromTarget();\n      // Set up theme inheritance with custom handler\n      this._themeCleanup = setupThemeInheritance(this, newTheme => {\n        // When theme changes, re-apply effective theme from target\n        this.applyEffectiveThemeFromTarget();\n      });\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    this.setupTargetListeners();\n  }\n\n  disconnectedCallback(): void {\n    this.removeTargetListeners();\n\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this.applyEffectiveThemeFromTarget();\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'target':\n        this.removeTargetListeners();\n        this.setupTargetListeners();\n        break;\n      case 'disabled':\n        if (newValue !== null && this._visible) {\n          this.hide();\n        }\n        break;\n    }\n  }\n\n  private boundContextMenuHandler = this.handleContextMenu.bind(this);\n\n  private setupTargetListeners(): void {\n    const targetSelector = this.getAttribute('target');\n    if (!targetSelector) return;\n\n    const targets = document.querySelectorAll(targetSelector);\n    targets.forEach(target => {\n      target.addEventListener('contextmenu', this.boundContextMenuHandler);\n    });\n  }\n\n  private removeTargetListeners(): void {\n    const targetSelector = this.getAttribute('target');\n    if (!targetSelector) return;\n\n    const targets = document.querySelectorAll(targetSelector);\n    targets.forEach(target => {\n      target.removeEventListener('contextmenu', this.boundContextMenuHandler);\n    });\n  }\n\n  private handleContextMenu(event: Event): void {\n    if (this.disabled) return;\n\n    const mouseEvent = event as MouseEvent;\n    mouseEvent.preventDefault();\n    mouseEvent.stopPropagation();\n\n    const trigger = mouseEvent.currentTarget as HTMLElement;\n    const componentContext = (mouseEvent as any).componentContext as\n      | ComponentContext\n      | undefined;\n\n    this.show(\n      mouseEvent.clientX,\n      mouseEvent.clientY,\n      trigger,\n      componentContext\n    );\n  }\n\n  private handleDocumentClick(event: MouseEvent): void {\n    if (!this._visible) return;\n\n    // Ignore the click that just triggered the menu to show\n    if (this._justShown) {\n      this._justShown = false;\n      return;\n    }\n\n    const target = event.target as Node;\n\n    // Check if click is inside the context menu or any of its sub-menus\n    let clickInsideMenu =\n      this.contains(target) || this.shadowRoot?.contains(target);\n\n    // Also check if click is inside any sub-menu that might be positioned outside the main menu\n    if (!clickInsideMenu) {\n      const allSubMenus = Array.from(\n        this.querySelectorAll('e2-context-menu-menu')\n      );\n      for (const subMenu of allSubMenus) {\n        const subMenuElement = subMenu.shadowRoot?.querySelector('.submenu');\n        if (subMenuElement && subMenuElement.contains(target)) {\n          clickInsideMenu = true;\n          break;\n        }\n      }\n    }\n\n    if (!clickInsideMenu) {\n      this.hide();\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (!this._visible) return;\n\n    switch (event.key) {\n      case 'Escape':\n        event.preventDefault();\n        this.hide();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextItem();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousItem();\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.activateFocusedItem();\n        break;\n    }\n  }\n\n  private handleWindowResize(): void {\n    if (this._visible) {\n      this.hide();\n    }\n  }\n\n  private focusNextItem(): void {\n    const items = this.querySelectorAll(\n      'e2-context-menu-item:not([disabled]), e2-context-menu-menu:not([disabled])'\n    );\n    const currentIndex = Array.from(items).findIndex(\n      item => item === document.activeElement || item.shadowRoot?.activeElement\n    );\n\n    const nextIndex = currentIndex < items.length - 1 ? currentIndex + 1 : 0;\n    (items[nextIndex] as HTMLElement).focus();\n  }\n\n  private focusPreviousItem(): void {\n    const items = this.querySelectorAll(\n      'e2-context-menu-item:not([disabled]), e2-context-menu-menu:not([disabled])'\n    );\n    const currentIndex = Array.from(items).findIndex(\n      item => item === document.activeElement || item.shadowRoot?.activeElement\n    );\n\n    const prevIndex = currentIndex > 0 ? currentIndex - 1 : items.length - 1;\n    (items[prevIndex] as HTMLElement).focus();\n  }\n\n  private activateFocusedItem(): void {\n    const focused = document.activeElement;\n    if (\n      focused &&\n      (focused.tagName === 'E2-CONTEXT-MENU-ITEM' ||\n        focused.tagName === 'E2-CONTEXT-MENU-MENU')\n    ) {\n      (focused as any).click();\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get target(): string | null {\n    return this.getAttribute('target');\n  }\n\n  set target(value: string | null) {\n    if (value) {\n      this.setAttribute('target', value);\n    } else {\n      this.removeAttribute('target');\n    }\n  }\n\n  show(\n    x: number,\n    y: number,\n    trigger?: HTMLElement,\n    componentContext?: ComponentContext\n  ): void {\n    if (this.disabled) return;\n\n    this._visible = true;\n    this.setAttribute('visible', '');\n\n    // Position the menu\n    this.style.left = `${x}px`;\n    this.style.top = `${y}px`;\n\n    // Ensure menu stays within viewport\n    this.adjustPosition();\n\n    // Set the flag to prevent immediate hiding, reset it after a short delay\n    this._justShown = true;\n    setTimeout(() => {\n      this._justShown = false;\n    }, 50);\n\n    // Ensure we have the correct theme, especially if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      this.applyEffectiveThemeFromTarget();\n    }\n\n    // Ensure all child items have the correct theme\n    this.applyTheme(this._theme);\n\n    // Focus first item\n    requestAnimationFrame(() => {\n      const firstItem = this.querySelector(\n        'e2-context-menu-item:not([disabled]), e2-context-menu-menu:not([disabled])'\n      ) as HTMLElement;\n      if (firstItem) {\n        firstItem.focus();\n      }\n    });\n\n    // Dispatch show event\n    const eventDetail: ContextMenuShowEvent['detail'] = {\n      menuId: this.id,\n      menu: this,\n      x,\n      y,\n      trigger: trigger || this,\n    };\n\n    if (componentContext) {\n      eventDetail.componentContext = componentContext;\n    }\n\n    dispatchCustomEvent<ContextMenuShowEvent['detail']>(\n      this,\n      'context-menu-show',\n      eventDetail\n    );\n  }\n\n  hide(): void {\n    if (!this._visible) return;\n\n    this._visible = false;\n    this.removeAttribute('visible');\n\n    // Reset all sub-menu states to ensure they don't reappear\n    const subMenus = this.querySelectorAll('e2-context-menu-menu');\n    subMenus.forEach(subMenu => {\n      if (typeof (subMenu as any).resetSubMenuState === 'function') {\n        (subMenu as any).resetSubMenuState();\n      }\n    });\n\n    // Dispatch hide event\n    dispatchCustomEvent<ContextMenuHideEvent['detail']>(\n      this,\n      'context-menu-hide',\n      {\n        menuId: this.id,\n        menu: this,\n      }\n    );\n  }\n\n  private adjustPosition(): void {\n    const rect = this.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    let left = parseInt(this.style.left);\n    let top = parseInt(this.style.top);\n\n    // Adjust horizontal position\n    if (left + rect.width > viewportWidth) {\n      left = viewportWidth - rect.width - 10;\n    }\n    if (left < 10) {\n      left = 10;\n    }\n\n    // Adjust vertical position\n    if (top + rect.height > viewportHeight) {\n      top = viewportHeight - rect.height - 10;\n    }\n    if (top < 10) {\n      top = 10;\n    }\n\n    this.style.left = `${left}px`;\n    this.style.top = `${top}px`;\n  }\n\n  /**\n   * Apply effective theme based on target element's theme\n   * Context menus inherit theme from their target element, not their DOM position\n   */\n  private applyEffectiveThemeFromTarget(): void {\n    const targetSelector = this.getAttribute('target');\n    if (targetSelector) {\n      const targets = document.querySelectorAll(targetSelector);\n      if (targets.length > 0) {\n        const firstTarget = targets[0] as HTMLElement;\n\n        // First, check if the target element itself has a theme\n        const targetTheme = firstTarget.getAttribute('theme');\n        if (targetTheme && ['light', 'dark', 'auto'].includes(targetTheme)) {\n          this.applyTheme(targetTheme as Theme);\n          return;\n        }\n\n        // If target doesn't have a theme, find its parent app\n        const parentApp = this.findParentApp(firstTarget);\n        if (parentApp) {\n          const parentTheme = parentApp.getAttribute('theme');\n          if (parentTheme && ['light', 'dark', 'auto'].includes(parentTheme)) {\n            this.applyTheme(parentTheme as Theme);\n            return;\n          }\n        }\n      }\n    }\n\n    // Fallback to normal effective theme logic\n    applyEffectiveTheme(this);\n  }\n\n  /**\n   * Find the closest parent e2-app element for any element\n   */\n  private findParentApp(element: HTMLElement): HTMLElement | null {\n    let current = element.parentElement;\n    while (current) {\n      if (current.tagName.toLowerCase() === 'e2-app') {\n        return current;\n      }\n      current = current.parentElement;\n    }\n    return null;\n  }\n\n  applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n\n    // Apply theme to all child context menu items, separators, and sub-menus\n    const childItems = this.querySelectorAll(\n      'e2-context-menu-item, e2-context-menu-separator, e2-context-menu-menu'\n    );\n    childItems.forEach(child => {\n      if (typeof (child as any).applyTheme === 'function') {\n        (child as any).applyTheme(theme);\n      }\n    });\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-context-menu')) {\n  customElements.define('e2-context-menu', ContextMenu);\n}\n","/**\n * Context Menu Item Element\n * A clickable item within a context menu\n */\n\nimport {\n  ContextMenuItemClickEvent,\n  EditorElementProperties,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ContextMenuItem\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['label', 'icon', 'theme', 'disabled', 'value', 'shortcut'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n        }\n\n        .item {\n          display: flex;\n          align-items: center;\n          padding: 8px 16px;\n          cursor: pointer;\n          color: var(--context-menu-item-color, #333);\n          background: transparent;\n          border: none;\n          width: 100%;\n          text-align: left;\n          font-family: inherit;\n          font-size: inherit;\n          line-height: 1.4;\n          transition: background-color 0.15s ease;\n          outline: none;\n        }\n\n        .item:hover,\n        .item:focus {\n          background: var(--context-menu-item-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        .item:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .item:disabled:hover {\n          background: transparent;\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          margin-right: 8px;\n          flex-shrink: 0;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .icon:empty {\n          margin-right: 0;\n          width: 0;\n        }\n\n        .content {\n          flex: 1;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          min-width: 0;\n        }\n\n        .label {\n          flex: 1;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        .shortcut {\n          color: var(--context-menu-item-shortcut-color, #666);\n          font-size: 0.85em;\n          margin-left: 12px;\n          flex-shrink: 0;\n        }\n\n        /* Light theme */\n        :host(.theme-light) .item {\n          color: var(--context-menu-item-color-light, #333);\n        }\n\n        :host(.theme-light) .item:hover,\n        :host(.theme-light) .item:focus {\n          background: var(--context-menu-item-hover-bg-light, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-light) .shortcut {\n          color: var(--context-menu-item-shortcut-color-light, #666);\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) .item {\n          color: var(--context-menu-item-color-dark, #fff);\n        }\n\n        :host(.theme-dark) .item:hover,\n        :host(.theme-dark) .item:focus {\n          background: var(--context-menu-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) .shortcut {\n          color: var(--context-menu-item-shortcut-color-dark, #aaa);\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .item {\n            color: var(--context-menu-item-color-dark, #fff);\n          }\n\n          :host(.theme-auto) .item:hover,\n          :host(.theme-auto) .item:focus {\n            background: var(--context-menu-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n          }\n\n          :host(.theme-auto) .shortcut {\n            color: var(--context-menu-item-shortcut-color-dark, #aaa);\n          }\n        }\n      </style>\n      <button class=\"item\" type=\"button\">\n        <span class=\"icon\"></span>\n        <div class=\"content\">\n          <span class=\"label\"></span>\n          <span class=\"shortcut\"></span>\n        </div>\n      </button>\n    `;\n\n    const button = shadowRoot.querySelector('.item')!;\n    button.addEventListener('click', this.handleClick.bind(this));\n    button.addEventListener('keydown', (event: Event) =>\n      this.handleKeyDown(event as KeyboardEvent)\n    );\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('context-menu-item');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Make the element focusable\n    this.tabIndex = 0;\n    this.addEventListener('focus', this.handleFocus.bind(this));\n\n    this.updateContent();\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'label':\n      case 'icon':\n      case 'shortcut':\n        this.updateContent();\n        break;\n      case 'disabled':\n        this.updateDisabledState();\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    if (!this.shadowRoot) return;\n\n    const iconElement = this.shadowRoot.querySelector('.icon') as HTMLElement;\n    const labelElement = this.shadowRoot.querySelector('.label') as HTMLElement;\n    const shortcutElement = this.shadowRoot.querySelector(\n      '.shortcut'\n    ) as HTMLElement;\n\n    // Update icon\n    const icon = this.getAttribute('icon');\n    if (icon) {\n      iconElement.textContent = icon;\n      iconElement.style.display = 'flex';\n    } else {\n      iconElement.textContent = '';\n      iconElement.style.display = 'none';\n    }\n\n    // Update label\n    const label = this.getAttribute('label') || this.textContent?.trim() || '';\n    labelElement.textContent = label;\n\n    // Update shortcut\n    const shortcut = this.getAttribute('shortcut');\n    if (shortcut) {\n      shortcutElement.textContent = shortcut;\n      shortcutElement.style.display = 'block';\n    } else {\n      shortcutElement.textContent = '';\n      shortcutElement.style.display = 'none';\n    }\n  }\n\n  private updateDisabledState(): void {\n    if (!this.shadowRoot) return;\n\n    const button = this.shadowRoot.querySelector('.item') as HTMLButtonElement;\n    button.disabled = this.disabled;\n  }\n\n  private handleClick(event: Event): void {\n    if (this.disabled) return;\n\n    event.stopPropagation();\n\n    // Find the parent context menu\n    const contextMenu = this.closest('e2-context-menu');\n\n    // Dispatch item click event\n    dispatchCustomEvent<ContextMenuItemClickEvent['detail']>(\n      this,\n      'context-menu-item-click',\n      {\n        itemId: this.id,\n        item: this,\n        menuId: contextMenu?.id || '',\n        menu: contextMenu as HTMLElement,\n        value: this.value,\n      }\n    );\n\n    // Hide the context menu\n    if (contextMenu && typeof (contextMenu as any).hide === 'function') {\n      (contextMenu as any).hide();\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (this.disabled) return;\n\n    // Let the parent context menu handle navigation keys\n    if (['ArrowDown', 'ArrowUp', 'Escape'].includes(event.key)) {\n      return;\n    }\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  }\n\n  private handleFocus(): void {\n    if (!this.shadowRoot) return;\n\n    const button = this.shadowRoot.querySelector('.item') as HTMLButtonElement;\n    button.focus();\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  get label(): string {\n    return this.getAttribute('label') || '';\n  }\n\n  set label(value: string) {\n    this.setAttribute('label', value);\n  }\n\n  get icon(): string {\n    return this.getAttribute('icon') || '';\n  }\n\n  set icon(value: string) {\n    if (value) {\n      this.setAttribute('icon', value);\n    } else {\n      this.removeAttribute('icon');\n    }\n  }\n\n  get value(): string {\n    return this.getAttribute('value') || this.label;\n  }\n\n  set value(value: string) {\n    this.setAttribute('value', value);\n  }\n\n  get shortcut(): string {\n    return this.getAttribute('shortcut') || '';\n  }\n\n  set shortcut(value: string) {\n    if (value) {\n      this.setAttribute('shortcut', value);\n    } else {\n      this.removeAttribute('shortcut');\n    }\n  }\n\n  click(): void {\n    if (!this.disabled) {\n      this.handleClick(new Event('click'));\n    }\n  }\n\n  focus(): void {\n    super.focus();\n    this.handleFocus();\n  }\n\n  applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-context-menu-item')) {\n  customElements.define('e2-context-menu-item', ContextMenuItem);\n}\n","/**\n * Context Menu Menu Element\n * A menu item that contains a sub-menu that appears on hover\n */\n\nimport {\n  ContextMenuMenuHideEvent,\n  ContextMenuMenuShowEvent,\n  EditorElementProperties,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ContextMenuMenu\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _subMenuVisible: boolean = false;\n  private _subMenu?: HTMLElement;\n  private _hoverTimeout?: number;\n  private _hideTimeout?: number;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['label', 'icon', 'theme', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          position: relative;\n        }\n\n        .item {\n          display: flex;\n          align-items: center;\n          padding: 8px 16px;\n          cursor: pointer;\n          color: var(--context-menu-item-color, #333);\n          background: transparent;\n          border: none;\n          width: 100%;\n          text-align: left;\n          font-family: inherit;\n          font-size: inherit;\n          line-height: 1.4;\n          transition: background-color 0.15s ease;\n          outline: none;\n        }\n\n        .item:hover,\n        .item:focus {\n          background: var(--context-menu-item-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        .item:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .item:disabled:hover {\n          background: transparent;\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          margin-right: 8px;\n          flex-shrink: 0;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .icon:empty {\n          margin-right: 0;\n          width: 0;\n        }\n\n        .content {\n          flex: 1;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          min-width: 0;\n        }\n\n        .label {\n          flex: 1;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        .arrow {\n          color: var(--context-menu-item-shortcut-color, #666);\n          font-size: 0.85em;\n          margin-left: 12px;\n          flex-shrink: 0;\n          width: 12px;\n          height: 12px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .submenu {\n          position: fixed;\n          z-index: 10000;\n          display: none;\n          min-width: 180px;\n          background: var(--context-menu-bg, #ffffff);\n          border: 1px solid var(--context-menu-border, #d0d0d0);\n          border-radius: 4px;\n          box-shadow: var(--context-menu-shadow, 0 2px 8px rgba(0, 0, 0, 0.15));\n          padding: 4px 0;\n          font-family: inherit;\n          font-size: 14px;\n        }\n\n        .submenu.visible {\n          display: block;\n        }\n\n        /* Light theme */\n        :host(.theme-light) .item {\n          color: var(--context-menu-item-color-light, #333);\n        }\n\n        :host(.theme-light) .item:hover,\n        :host(.theme-light) .item:focus {\n          background: var(--context-menu-item-hover-bg-light, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-light) .arrow {\n          color: var(--context-menu-item-shortcut-color-light, #666);\n        }\n\n        :host(.theme-light) .submenu {\n          background: var(--context-menu-bg-light, #ffffff);\n          border-color: var(--context-menu-border-light, #d0d0d0);\n          box-shadow: var(--context-menu-shadow-light, 0 2px 8px rgba(0, 0, 0, 0.15));\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) .item {\n          color: var(--context-menu-item-color-dark, #fff);\n        }\n\n        :host(.theme-dark) .item:hover,\n        :host(.theme-dark) .item:focus {\n          background: var(--context-menu-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) .arrow {\n          color: var(--context-menu-item-shortcut-color-dark, #aaa);\n        }\n\n        :host(.theme-dark) .submenu {\n          background: var(--context-menu-bg-dark, #2a2a2a);\n          border-color: var(--context-menu-border-dark, #444444);\n          box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .item {\n            color: var(--context-menu-item-color-dark, #fff);\n          }\n\n          :host(.theme-auto) .item:hover,\n          :host(.theme-auto) .item:focus {\n            background: var(--context-menu-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n          }\n\n          :host(.theme-auto) .arrow {\n            color: var(--context-menu-item-shortcut-color-dark, #aaa);\n          }\n\n          :host(.theme-auto) .submenu {\n            background: var(--context-menu-bg-dark, #2a2a2a);\n            border-color: var(--context-menu-border-dark, #444444);\n            box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n          }\n        }\n      </style>\n      <button class=\"item\" type=\"button\">\n        <span class=\"icon\"></span>\n        <div class=\"content\">\n          <span class=\"label\"></span>\n          <span class=\"arrow\">▶</span>\n        </div>\n      </button>\n      <div class=\"submenu\">\n        <slot></slot>\n      </div>\n    `;\n\n    const button = shadowRoot.querySelector('.item')!;\n    button.addEventListener('mouseenter', this.handleMouseEnter.bind(this));\n    button.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n    button.addEventListener('click', this.handleClick.bind(this));\n    button.addEventListener('keydown', (event: Event) =>\n      this.handleKeyDown(event as KeyboardEvent)\n    );\n\n    const submenu = shadowRoot.querySelector('.submenu')!;\n    submenu.addEventListener(\n      'mouseenter',\n      this.handleSubMenuMouseEnter.bind(this)\n    );\n    submenu.addEventListener(\n      'mouseleave',\n      this.handleSubMenuMouseLeave.bind(this)\n    );\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('context-menu-menu');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Make the element focusable\n    this.tabIndex = 0;\n    this.addEventListener('focus', this.handleFocus.bind(this));\n\n    this.updateContent();\n\n    // Store reference to submenu\n    this._subMenu = this.shadowRoot?.querySelector('.submenu') as HTMLElement;\n  }\n\n  disconnectedCallback(): void {\n    // Clear any pending timeouts\n    if (this._hoverTimeout) {\n      clearTimeout(this._hoverTimeout);\n    }\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n    }\n\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'label':\n      case 'icon':\n        this.updateContent();\n        break;\n      case 'disabled':\n        this.updateDisabledState();\n        if (newValue !== null && this._subMenuVisible) {\n          this.hideSubMenu();\n        }\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    if (!this.shadowRoot) return;\n\n    const iconElement = this.shadowRoot.querySelector('.icon') as HTMLElement;\n    const labelElement = this.shadowRoot.querySelector('.label') as HTMLElement;\n\n    // Update icon\n    const icon = this.getAttribute('icon');\n    if (icon) {\n      iconElement.textContent = icon;\n      iconElement.style.display = 'flex';\n    } else {\n      iconElement.textContent = '';\n      iconElement.style.display = 'none';\n    }\n\n    // Update label\n    const label = this.getAttribute('label') || this.textContent?.trim() || '';\n    labelElement.textContent = label;\n  }\n\n  private updateDisabledState(): void {\n    if (!this.shadowRoot) return;\n\n    const button = this.shadowRoot.querySelector('.item') as HTMLButtonElement;\n    button.disabled = this.disabled;\n  }\n\n  private handleMouseEnter(): void {\n    if (this.disabled) return;\n\n    // Clear any pending hide timeout\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = undefined;\n    }\n\n    // Clear any existing hover timeout first\n    if (this._hoverTimeout) {\n      clearTimeout(this._hoverTimeout);\n      this._hoverTimeout = undefined;\n    }\n\n    // Show submenu after a short delay\n    this._hoverTimeout = window.setTimeout(() => {\n      this.showSubMenu();\n    }, 300);\n  }\n\n  private handleMouseLeave(): void {\n    if (this.disabled) return;\n\n    // Clear the hover timeout\n    if (this._hoverTimeout) {\n      clearTimeout(this._hoverTimeout);\n      this._hoverTimeout = undefined;\n    }\n\n    // Hide submenu after a short delay (unless mouse enters submenu)\n    this._hideTimeout = window.setTimeout(() => {\n      this.hideSubMenu();\n    }, 300);\n  }\n\n  private handleSubMenuMouseEnter(): void {\n    // Clear any pending hide timeout when mouse enters submenu\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = undefined;\n    }\n  }\n\n  private handleSubMenuMouseLeave(): void {\n    // Clear any existing hide timeout first\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = undefined;\n    }\n\n    // Hide submenu when mouse leaves submenu\n    this._hideTimeout = window.setTimeout(() => {\n      this.hideSubMenu();\n    }, 300);\n  }\n\n  private handleClick(event: Event): void {\n    if (this.disabled) return;\n\n    event.stopPropagation();\n\n    // Clear any pending timeouts\n    if (this._hoverTimeout) {\n      clearTimeout(this._hoverTimeout);\n      this._hoverTimeout = undefined;\n    }\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = undefined;\n    }\n\n    // Toggle submenu visibility on click\n    if (this._subMenuVisible) {\n      this.hideSubMenu();\n    } else {\n      this.showSubMenu();\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (this.disabled) return;\n\n    // Let the parent context menu handle most navigation keys\n    if (['ArrowDown', 'ArrowUp', 'Escape'].includes(event.key)) {\n      return;\n    }\n\n    if (event.key === 'ArrowRight') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.showSubMenu();\n\n      // Focus first item in submenu\n      requestAnimationFrame(() => {\n        const firstItem = this._subMenu?.querySelector(\n          'e2-context-menu-item:not([disabled]), e2-context-menu-menu:not([disabled])'\n        ) as HTMLElement;\n        if (firstItem) {\n          firstItem.focus();\n        }\n      });\n    } else if (event.key === 'ArrowLeft') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.hideSubMenu();\n    } else if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  }\n\n  private handleFocus(): void {\n    if (!this.shadowRoot) return;\n\n    const button = this.shadowRoot.querySelector('.item') as HTMLButtonElement;\n    button.focus();\n  }\n\n  private showSubMenu(): void {\n    if (!this._subMenu || this.disabled || this._subMenuVisible) return;\n\n    // Close sibling sub-menus first\n    this.closeSiblingSubMenus();\n\n    this._subMenuVisible = true;\n    // Reset display style in case it was set to 'none' during reset\n    this._subMenu.style.display = '';\n    this._subMenu.classList.add('visible');\n\n    // Position the submenu\n    this.positionSubMenu();\n\n    // Apply theme to child items\n    this.applyTheme(this._theme);\n\n    // Find the parent context menu\n    const parentMenu = this.closest('e2-context-menu');\n\n    // Dispatch show event\n    dispatchCustomEvent<ContextMenuMenuShowEvent['detail']>(\n      this,\n      'context-menu-menu-show',\n      {\n        menuId: parentMenu?.id || '',\n        menu: parentMenu as HTMLElement,\n        subMenuId: this.id,\n        subMenu: this,\n        x: parseInt(this._subMenu.style.left) || 0,\n        y: parseInt(this._subMenu.style.top) || 0,\n        trigger: this,\n      }\n    );\n  }\n\n  private closeSiblingSubMenus(): void {\n    // Find the root context menu to get all sub-menus\n    const rootContextMenu = this.closest('e2-context-menu');\n    if (!rootContextMenu) return;\n\n    // Get all sub-menus in the entire context menu tree\n    const allSubMenus = rootContextMenu.querySelectorAll(\n      'e2-context-menu-menu'\n    );\n\n    allSubMenus.forEach(subMenu => {\n      // Skip ourselves\n      if (subMenu === this) return;\n\n      // Don't close child sub-menus of this sub-menu (they should remain open)\n      if (this.contains(subMenu)) return;\n\n      // Don't close parent sub-menus of this sub-menu (they should remain open)\n      if (subMenu.contains(this)) return;\n\n      // Close all other sub-menus (siblings and unrelated sub-menus)\n      if (typeof (subMenu as any).hideSubMenu === 'function') {\n        (subMenu as any).hideSubMenu();\n      }\n    });\n  }\n\n  hideSubMenu(): void {\n    if (!this._subMenu) return;\n\n    // Check if it was actually visible before hiding\n    const wasVisible = this._subMenuVisible;\n\n    // Always reset state and remove class, even if we think it's not visible\n    this._subMenuVisible = false;\n    this._subMenu.classList.remove('visible');\n    // Clear any inline display style that might override the CSS class\n    this._subMenu.style.display = '';\n\n    // Clear any pending timeouts\n    if (this._hoverTimeout) {\n      clearTimeout(this._hoverTimeout);\n      this._hoverTimeout = undefined;\n    }\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = undefined;\n    }\n\n    // Hide any nested sub-menus recursively\n    const nestedSubMenus = this.querySelectorAll('e2-context-menu-menu');\n    nestedSubMenus.forEach(nestedSubMenu => {\n      if (typeof (nestedSubMenu as any).hideSubMenu === 'function') {\n        (nestedSubMenu as any).hideSubMenu();\n      }\n    });\n\n    // Find the parent context menu\n    const parentMenu = this.closest('e2-context-menu');\n\n    // Only dispatch hide event if the submenu was actually visible\n    if (wasVisible) {\n      dispatchCustomEvent<ContextMenuMenuHideEvent['detail']>(\n        this,\n        'context-menu-menu-hide',\n        {\n          menuId: parentMenu?.id || '',\n          menu: parentMenu as HTMLElement,\n          subMenuId: this.id,\n          subMenu: this,\n        }\n      );\n    }\n  }\n\n  private positionSubMenu(): void {\n    if (!this._subMenu) return;\n\n    const itemRect = this.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    // Get submenu dimensions (temporarily show it to measure)\n    const originalDisplay = this._subMenu.style.display;\n    this._subMenu.style.visibility = 'hidden';\n    this._subMenu.style.display = 'block';\n    const submenuRect = this._subMenu.getBoundingClientRect();\n    this._subMenu.style.visibility = '';\n    // Restore original display value instead of leaving it as 'block'\n    this._subMenu.style.display = originalDisplay;\n\n    // Calculate initial position (to the right of the item)\n    let left = itemRect.right;\n    let top = itemRect.top;\n\n    // Check if submenu would go off the right edge\n    if (left + submenuRect.width > viewportWidth) {\n      // Position to the left of the item instead\n      left = itemRect.left - submenuRect.width;\n    }\n\n    // Ensure submenu doesn't go off the left edge\n    if (left < 10) {\n      left = 10;\n    }\n\n    // Check if submenu would go off the bottom edge\n    if (top + submenuRect.height > viewportHeight) {\n      top = viewportHeight - submenuRect.height - 10;\n    }\n\n    // Ensure submenu doesn't go off the top edge\n    if (top < 10) {\n      top = 10;\n    }\n\n    this._subMenu.style.left = `${left}px`;\n    this._subMenu.style.top = `${top}px`;\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  get label(): string {\n    return this.getAttribute('label') || '';\n  }\n\n  set label(value: string) {\n    this.setAttribute('label', value);\n  }\n\n  get icon(): string {\n    return this.getAttribute('icon') || '';\n  }\n\n  set icon(value: string) {\n    if (value) {\n      this.setAttribute('icon', value);\n    } else {\n      this.removeAttribute('icon');\n    }\n  }\n\n  get subMenuVisible(): boolean {\n    return this._subMenuVisible;\n  }\n\n  // Force reset the sub-menu state - used when context menu is hidden\n  resetSubMenuState(): void {\n    this._subMenuVisible = false;\n    if (this._subMenu) {\n      this._subMenu.classList.remove('visible');\n      // Force hide the submenu element to ensure it's not displayed\n      this._subMenu.style.display = 'none';\n      // Clear any positioning styles that might cause it to reappear\n      this._subMenu.style.left = '';\n      this._subMenu.style.top = '';\n    }\n\n    // Clear any pending timeouts\n    if (this._hoverTimeout) {\n      clearTimeout(this._hoverTimeout);\n      this._hoverTimeout = undefined;\n    }\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = undefined;\n    }\n\n    // Reset nested sub-menus recursively\n    const nestedSubMenus = this.querySelectorAll('e2-context-menu-menu');\n    nestedSubMenus.forEach(nestedSubMenu => {\n      if (typeof (nestedSubMenu as any).resetSubMenuState === 'function') {\n        (nestedSubMenu as any).resetSubMenuState();\n      }\n    });\n  }\n\n  focus(): void {\n    super.focus();\n    this.handleFocus();\n  }\n\n  applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n\n    // Apply theme to all child context menu items, separators, and sub-menus\n    const childItems = this.querySelectorAll(\n      'e2-context-menu-item, e2-context-menu-separator, e2-context-menu-menu'\n    );\n    childItems.forEach(child => {\n      if (typeof (child as any).applyTheme === 'function') {\n        (child as any).applyTheme(theme);\n      }\n    });\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-context-menu-menu')) {\n  customElements.define('e2-context-menu-menu', ContextMenuMenu);\n}\n","/**\n * Context Menu Separator Element\n * A visual separator line between context menu items\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ContextMenuSeparator\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          margin: 4px 0;\n        }\n\n        .separator {\n          height: 1px;\n          background: var(--context-menu-separator-color, #e0e0e0);\n          margin: 0 8px;\n        }\n\n        /* Light theme */\n        :host(.theme-light) .separator {\n          background: var(--context-menu-separator-color-light, #e0e0e0);\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) .separator {\n          background: var(--context-menu-separator-color-dark, #555);\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .separator {\n            background: var(--context-menu-separator-color-dark, #555);\n          }\n        }\n      </style>\n      <div class=\"separator\"></div>\n    `;\n  }\n\n  connectedCallback(): void {\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get disabled(): boolean {\n    return false; // Separators cannot be disabled\n  }\n\n  set disabled(_value: boolean) {\n    // Separators cannot be disabled\n  }\n\n  applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-context-menu-separator')) {\n  customElements.define('e2-context-menu-separator', ContextMenuSeparator);\n}\n","/**\n * Alert Dialog Element\n * A specialized dialog for displaying messages and notifications\n */\n\nimport { AlertType, EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class AlertDialogElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _nativeDialog: HTMLDialogElement | null = null;\n  private _resolvePromise: ((value: void) => void) | null = null;\n  private _rejectPromise: ((reason?: any) => void) | null = null;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['title', 'message', 'button-text', 'theme', 'type'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --button-bg: #007bff;\n          --button-hover: #0056b3;\n          --button-active: #004085;\n          --icon-info: #17a2b8;\n          --icon-success: #28a745;\n          --icon-warning: #ffc107;\n          --icon-error: #dc3545;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --button-bg: #0d6efd;\n          --button-hover: #0b5ed7;\n          --button-active: #0a58ca;\n          --icon-info: #0dcaf0;\n          --icon-success: #198754;\n          --icon-warning: #fd7e14;\n          --icon-error: #dc3545;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 320px;\n          max-width: 500px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-header {\n          display: flex;\n          align-items: flex-start;\n          gap: 12px;\n          margin-bottom: 16px;\n        }\n\n        .dialog-icon {\n          flex-shrink: 0;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 20px;\n          margin-top: 2px;\n        }\n\n        .dialog-icon.type-info {\n          color: var(--icon-info);\n        }\n\n        .dialog-icon.type-success {\n          color: var(--icon-success);\n        }\n\n        .dialog-icon.type-warning {\n          color: var(--icon-warning);\n        }\n\n        .dialog-icon.type-error {\n          color: var(--icon-error);\n        }\n\n        .dialog-text {\n          flex: 1;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 8px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0;\n          white-space: pre-wrap;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: center;\n          margin-top: 24px;\n        }\n\n        .dialog-button {\n          padding: 10px 24px;\n          border: none;\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: white;\n          font-family: inherit;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 100px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--button-bg);\n          outline-offset: 2px;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part=\"dialog\">\n        <div class=\"dialog-content\" part=\"content\">\n          <div class=\"dialog-header\" part=\"header\">\n            <div class=\"dialog-icon type-info\" part=\"icon\">ℹ️</div>\n            <div class=\"dialog-text\" part=\"text\">\n              <h3 class=\"dialog-title\" part=\"title\">Information</h3>\n              <p class=\"dialog-message\" part=\"message\">This is an alert message.</p>\n            </div>\n          </div>\n\n          <div class=\"dialog-buttons\" part=\"buttons\">\n            <button class=\"dialog-button\" part=\"button\" type=\"button\">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    `;\n\n    this._nativeDialog = shadowRoot.querySelector('dialog');\n    const button = shadowRoot.querySelector('.dialog-button');\n\n    // Set up event listeners\n    if (this._nativeDialog) {\n      this._nativeDialog.addEventListener('close', this.handleClose.bind(this));\n      this._nativeDialog.addEventListener(\n        'cancel',\n        this.handleCancel.bind(this)\n      );\n    }\n\n    if (button) {\n      button.addEventListener('click', () => this.close());\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('alert-dialog');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Apply initial theme\n    this.applyTheme(this._theme);\n    this.updateContent();\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'title':\n      case 'message':\n      case 'button-text':\n      case 'type':\n        this.updateContent();\n        break;\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const titleElement = this.shadowRoot?.querySelector('.dialog-title');\n    const messageElement = this.shadowRoot?.querySelector('.dialog-message');\n    const buttonElement = this.shadowRoot?.querySelector('.dialog-button');\n    const iconElement = this.shadowRoot?.querySelector('.dialog-icon');\n\n    if (titleElement) {\n      titleElement.textContent =\n        this.getAttribute('title') || this.getDefaultTitle();\n    }\n\n    if (messageElement) {\n      messageElement.textContent =\n        this.getAttribute('message') || 'This is an alert message.';\n    }\n\n    if (buttonElement) {\n      buttonElement.textContent = this.getAttribute('button-text') || 'OK';\n    }\n\n    if (iconElement) {\n      const type = this.getAttribute('type') || 'info';\n      iconElement.className = `dialog-icon type-${type}`;\n      iconElement.textContent = this.getIconForType(type);\n    }\n  }\n\n  private getDefaultTitle(): string {\n    const type = this.getAttribute('type') || 'info';\n    switch (type) {\n      case 'success':\n        return 'Success';\n      case 'warning':\n        return 'Warning';\n      case 'error':\n        return 'Error';\n      default:\n        return 'Information';\n    }\n  }\n\n  private getIconForType(type: string): string {\n    switch (type) {\n      case 'success':\n        return '✅';\n      case 'warning':\n        return '⚠️';\n      case 'error':\n        return '❌';\n      default:\n        return 'ℹ️';\n    }\n  }\n\n  private handleClose(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise();\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'alert-dialog-close', {\n      dialogId: this.id,\n      dialog: this,\n    });\n  }\n\n  private handleCancel(event: Event): void {\n    const cancelable = dispatchCustomEvent(this, 'alert-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    if (!cancelable) {\n      event.preventDefault();\n    } else {\n      this.close();\n    }\n  }\n\n  private close(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise();\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'alert-dialog-dismiss', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    this._nativeDialog?.close();\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || this.getDefaultTitle();\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get message(): string {\n    return this.getAttribute('message') || 'This is an alert message.';\n  }\n\n  set message(value: string) {\n    this.setAttribute('message', value);\n  }\n\n  get buttonText(): string {\n    return this.getAttribute('button-text') || 'OK';\n  }\n\n  set buttonText(value: string) {\n    this.setAttribute('button-text', value);\n  }\n\n  get type(): AlertType {\n    return (this.getAttribute('type') || 'info') as AlertType;\n  }\n\n  set type(value: AlertType) {\n    this.setAttribute('type', value);\n  }\n\n  get open(): boolean {\n    return this._nativeDialog?.open || false;\n  }\n\n  /**\n   * Show the alert dialog and return a promise that resolves when dismissed\n   */\n  public show(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this._resolvePromise) {\n        // Already showing, reject the previous promise\n        this._rejectPromise?.(\n          new Error('Dialog was replaced by another show() call')\n        );\n      }\n\n      this._resolvePromise = resolve;\n      this._rejectPromise = reject;\n\n      dispatchCustomEvent(this, 'alert-dialog-show', {\n        dialogId: this.id,\n        dialog: this,\n      });\n\n      this._nativeDialog?.showModal();\n    });\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-alert')) {\n  customElements.define('e2-alert', AlertDialogElement);\n}\n","/**\n * Confirm Dialog Element\n * A specialized dialog for yes/no confirmations with promise-based API\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ConfirmDialogElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _nativeDialog: HTMLDialogElement | null = null;\n  private _resolvePromise: ((value: boolean) => void) | null = null;\n  private _rejectPromise: ((reason?: any) => void) | null = null;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return [\n      'title',\n      'message',\n      'confirm-text',\n      'cancel-text',\n      'theme',\n      'danger',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --button-bg: #f8f9fa;\n          --button-border: #e0e0e0;\n          --button-hover: #e9ecef;\n          --button-active: #dee2e6;\n          --confirm-bg: #007bff;\n          --confirm-hover: #0056b3;\n          --confirm-active: #004085;\n          --danger-bg: #dc3545;\n          --danger-hover: #c82333;\n          --danger-active: #bd2130;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --button-bg: #404040;\n          --button-border: #555555;\n          --button-hover: #4a4a4a;\n          --button-active: #555555;\n          --confirm-bg: #0d6efd;\n          --confirm-hover: #0b5ed7;\n          --confirm-active: #0a58ca;\n          --danger-bg: #dc3545;\n          --danger-hover: #bb2d3b;\n          --danger-active: #b02a37;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 320px;\n          max-width: 500px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 16px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0 0 24px 0;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-button {\n          padding: 8px 16px;\n          border: 1px solid var(--button-border);\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 80px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--confirm-bg);\n          outline-offset: 2px;\n        }\n\n        .confirm-button {\n          background: var(--confirm-bg);\n          color: white;\n          border-color: var(--confirm-bg);\n        }\n\n        .confirm-button:hover {\n          background: var(--confirm-hover);\n          border-color: var(--confirm-hover);\n        }\n\n        .confirm-button:active {\n          background: var(--confirm-active);\n          border-color: var(--confirm-active);\n        }\n\n        :host([danger]) .confirm-button {\n          background: var(--danger-bg);\n          border-color: var(--danger-bg);\n        }\n\n        :host([danger]) .confirm-button:hover {\n          background: var(--danger-hover);\n          border-color: var(--danger-hover);\n        }\n\n        :host([danger]) .confirm-button:active {\n          background: var(--danger-active);\n          border-color: var(--danger-active);\n        }\n\n        :host([danger]) .confirm-button:focus {\n          outline-color: var(--danger-bg);\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part=\"dialog\">\n        <div class=\"dialog-content\" part=\"content\">\n          <h3 class=\"dialog-title\" part=\"title\">Confirm</h3>\n          <p class=\"dialog-message\" part=\"message\">Are you sure?</p>\n\n          <div class=\"dialog-buttons\" part=\"buttons\">\n            <button class=\"dialog-button cancel-button\" part=\"cancel-button\" type=\"button\">\n              Cancel\n            </button>\n            <button class=\"dialog-button confirm-button\" part=\"confirm-button\" type=\"button\">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    `;\n\n    this._nativeDialog = shadowRoot.querySelector('dialog');\n    const confirmButton = shadowRoot.querySelector('.confirm-button');\n    const cancelButton = shadowRoot.querySelector('.cancel-button');\n\n    // Set up event listeners\n    if (this._nativeDialog) {\n      this._nativeDialog.addEventListener('close', this.handleClose.bind(this));\n      this._nativeDialog.addEventListener(\n        'cancel',\n        this.handleCancel.bind(this)\n      );\n    }\n\n    if (confirmButton) {\n      confirmButton.addEventListener('click', () => this.confirm());\n    }\n\n    if (cancelButton) {\n      cancelButton.addEventListener('click', () => this.cancel());\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('confirm-dialog');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Apply initial theme\n    this.applyTheme(this._theme);\n    this.updateContent();\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'title':\n      case 'message':\n      case 'confirm-text':\n      case 'cancel-text':\n        this.updateContent();\n        break;\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'danger':\n        // Styling handled by CSS attribute selector\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const titleElement = this.shadowRoot?.querySelector('.dialog-title');\n    const messageElement = this.shadowRoot?.querySelector('.dialog-message');\n    const confirmButton = this.shadowRoot?.querySelector('.confirm-button');\n    const cancelButton = this.shadowRoot?.querySelector('.cancel-button');\n\n    if (titleElement) {\n      titleElement.textContent = this.getAttribute('title') || 'Confirm';\n    }\n\n    if (messageElement) {\n      messageElement.textContent =\n        this.getAttribute('message') || 'Are you sure?';\n    }\n\n    if (confirmButton) {\n      confirmButton.textContent = this.getAttribute('confirm-text') || 'OK';\n    }\n\n    if (cancelButton) {\n      cancelButton.textContent = this.getAttribute('cancel-text') || 'Cancel';\n    }\n  }\n\n  private handleClose(): void {\n    // If dialog was closed without explicit confirm/cancel, treat as cancel\n    if (this._resolvePromise) {\n      this._resolvePromise(false);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'confirm-dialog-close', {\n      dialogId: this.id,\n      dialog: this,\n      confirmed: false,\n    });\n  }\n\n  private handleCancel(event: Event): void {\n    const cancelable = dispatchCustomEvent(this, 'confirm-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    if (!cancelable) {\n      event.preventDefault();\n    } else {\n      this.cancel();\n    }\n  }\n\n  private confirm(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise(true);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'confirm-dialog-confirm', {\n      dialogId: this.id,\n      dialog: this,\n      confirmed: true,\n    });\n\n    this._nativeDialog?.close('confirmed');\n  }\n\n  private cancel(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise(false);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'confirm-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n      confirmed: false,\n    });\n\n    this._nativeDialog?.close('cancelled');\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || 'Confirm';\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get message(): string {\n    return this.getAttribute('message') || 'Are you sure?';\n  }\n\n  set message(value: string) {\n    this.setAttribute('message', value);\n  }\n\n  get confirmText(): string {\n    return this.getAttribute('confirm-text') || 'OK';\n  }\n\n  set confirmText(value: string) {\n    this.setAttribute('confirm-text', value);\n  }\n\n  get cancelText(): string {\n    return this.getAttribute('cancel-text') || 'Cancel';\n  }\n\n  set cancelText(value: string) {\n    this.setAttribute('cancel-text', value);\n  }\n\n  get danger(): boolean {\n    return this.hasAttribute('danger');\n  }\n\n  set danger(value: boolean) {\n    if (value) {\n      this.setAttribute('danger', '');\n    } else {\n      this.removeAttribute('danger');\n    }\n  }\n\n  get open(): boolean {\n    return this._nativeDialog?.open || false;\n  }\n\n  /**\n   * Show the confirmation dialog and return a promise that resolves to true/false\n   */\n  public show(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this._resolvePromise) {\n        // Already showing, reject the previous promise\n        this._rejectPromise?.(\n          new Error('Dialog was replaced by another show() call')\n        );\n      }\n\n      this._resolvePromise = resolve;\n      this._rejectPromise = reject;\n\n      dispatchCustomEvent(this, 'confirm-dialog-show', {\n        dialogId: this.id,\n        dialog: this,\n      });\n\n      this._nativeDialog?.showModal();\n    });\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-confirm')) {\n  customElements.define('e2-confirm', ConfirmDialogElement);\n}\n","/**\n * Dialog Element\n * A wrapper around the native <dialog> element with theming and enhanced functionality\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class DialogElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _nativeDialog: HTMLDialogElement | null = null;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['title', 'theme', 'modal', 'closable', 'width', 'height'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --dialog-header-bg: #f8f9fa;\n          --dialog-header-border: #e0e0e0;\n          --text-color: #333333;\n          --close-button-hover: #f0f0f0;\n          --close-button-active: #e0e0e0;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --dialog-header-bg: #404040;\n          --dialog-header-border: #555555;\n          --text-color: #ffffff;\n          --close-button-hover: #404040;\n          --close-button-active: #555555;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 300px;\n          max-width: calc(100vw - 32px);\n          max-height: calc(100vh - 32px);\n          overflow: hidden;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 16px 20px;\n          background: var(--dialog-header-bg);\n          border-bottom: 1px solid var(--dialog-header-border);\n          min-height: 24px;\n        }\n\n        .dialog-title {\n          font-weight: 600;\n          font-size: 16px;\n          margin: 0;\n        }\n\n        .close-button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 28px;\n          height: 28px;\n          border: none;\n          background: transparent;\n          border-radius: 4px;\n          cursor: pointer;\n          color: var(--text-color);\n          font-size: 18px;\n          transition: background-color 0.15s ease;\n        }\n\n        .close-button:hover {\n          background: var(--close-button-hover);\n        }\n\n        .close-button:active {\n          background: var(--close-button-active);\n        }\n\n        .close-button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .dialog-content {\n          padding: 20px;\n          overflow-y: auto;\n        }\n\n        .dialog-footer {\n          padding: 16px 20px;\n          border-top: 1px solid var(--dialog-header-border);\n          background: var(--dialog-header-bg);\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-footer:empty {\n          display: none;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part=\"dialog\">\n        <div class=\"dialog-header\" part=\"header\">\n          <h3 class=\"dialog-title\" part=\"title\"></h3>\n          <button class=\"close-button\" part=\"close-button\" type=\"button\" aria-label=\"Close dialog\">\n            ×\n          </button>\n        </div>\n\n        <div class=\"dialog-content\" part=\"content\">\n          <slot></slot>\n        </div>\n\n        <div class=\"dialog-footer\" part=\"footer\">\n          <slot name=\"footer\"></slot>\n        </div>\n      </dialog>\n    `;\n\n    this._nativeDialog = shadowRoot.querySelector('dialog');\n    const closeButton = shadowRoot.querySelector('.close-button');\n\n    // Set up event listeners\n    if (this._nativeDialog) {\n      this._nativeDialog.addEventListener('close', this.handleClose.bind(this));\n      this._nativeDialog.addEventListener(\n        'cancel',\n        this.handleCancel.bind(this)\n      );\n    }\n\n    if (closeButton) {\n      closeButton.addEventListener('click', () => this.close());\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('dialog');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Apply initial theme\n    this.applyTheme(this._theme);\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'title':\n        this.updateTitle();\n        break;\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'modal':\n        // Modal state affects how dialog opens\n        break;\n      case 'closable':\n        this.updateClosable();\n        break;\n      case 'width':\n        this.updateSize();\n        break;\n      case 'height':\n        this.updateSize();\n        break;\n    }\n  }\n\n  private updateTitle(): void {\n    const titleElement = this.shadowRoot?.querySelector('.dialog-title');\n    if (titleElement) {\n      titleElement.textContent = this.getAttribute('title') || '';\n    }\n  }\n\n  private updateClosable(): void {\n    const closeButton = this.shadowRoot?.querySelector(\n      '.close-button'\n    ) as HTMLButtonElement;\n    if (closeButton) {\n      const closable = this.getAttribute('closable') !== 'false';\n      closeButton.disabled = !closable;\n      closeButton.style.display = closable ? 'flex' : 'none';\n    }\n  }\n\n  private updateSize(): void {\n    if (this._nativeDialog) {\n      const width = this.getAttribute('width');\n      const height = this.getAttribute('height');\n\n      if (width) {\n        this._nativeDialog.style.width =\n          width.includes('px') || width.includes('%') || width.includes('em')\n            ? width\n            : `${width}px`;\n      }\n\n      if (height) {\n        this._nativeDialog.style.height =\n          height.includes('px') || height.includes('%') || height.includes('em')\n            ? height\n            : `${height}px`;\n      }\n    }\n  }\n\n  private handleClose(): void {\n    dispatchCustomEvent(this, 'dialog-close', {\n      dialogId: this.id,\n      dialog: this,\n      returnValue: this._nativeDialog?.returnValue,\n    });\n  }\n\n  private handleCancel(event: Event): void {\n    const cancelable = dispatchCustomEvent(this, 'dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    if (!cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || '';\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get modal(): boolean {\n    return this.hasAttribute('modal');\n  }\n\n  set modal(value: boolean) {\n    if (value) {\n      this.setAttribute('modal', '');\n    } else {\n      this.removeAttribute('modal');\n    }\n  }\n\n  get closable(): boolean {\n    return this.getAttribute('closable') !== 'false';\n  }\n\n  set closable(value: boolean) {\n    this.setAttribute('closable', value.toString());\n  }\n\n  get open(): boolean {\n    return this._nativeDialog?.open || false;\n  }\n\n  get returnValue(): string {\n    return this._nativeDialog?.returnValue || '';\n  }\n\n  set returnValue(value: string) {\n    if (this._nativeDialog) {\n      this._nativeDialog.returnValue = value;\n    }\n  }\n\n  public show(): void {\n    if (!this._nativeDialog) return;\n\n    dispatchCustomEvent(this, 'dialog-show', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    this._nativeDialog.show();\n  }\n\n  public showModal(): void {\n    if (!this._nativeDialog) return;\n\n    dispatchCustomEvent(this, 'dialog-show', {\n      dialogId: this.id,\n      dialog: this,\n      modal: true,\n    });\n\n    this._nativeDialog.showModal();\n  }\n\n  public close(returnValue?: string): void {\n    if (!this._nativeDialog) return;\n\n    if (returnValue !== undefined) {\n      this._nativeDialog.returnValue = returnValue;\n    }\n\n    this._nativeDialog.close();\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-dialog')) {\n  customElements.define('e2-dialog', DialogElement);\n}\n","/**\n * Prompt Dialog Element\n * A specialized dialog for text input with validation\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class PromptDialogElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _nativeDialog: HTMLDialogElement | null = null;\n  private _resolvePromise: ((value: string | null) => void) | null = null;\n  private _rejectPromise: ((reason?: any) => void) | null = null;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return [\n      'title',\n      'message',\n      'placeholder',\n      'default-value',\n      'confirm-text',\n      'cancel-text',\n      'theme',\n      'required',\n      'multiline',\n      'pattern',\n      'min-length',\n      'max-length',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --input-bg: #ffffff;\n          --input-border: #d0d7de;\n          --input-border-focus: #0969da;\n          --input-border-error: #d1242f;\n          --button-bg: #f8f9fa;\n          --button-border: #e0e0e0;\n          --button-hover: #e9ecef;\n          --button-active: #dee2e6;\n          --confirm-bg: #007bff;\n          --confirm-hover: #0056b3;\n          --confirm-active: #004085;\n          --error-color: #d1242f;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --input-bg: #21262d;\n          --input-border: #30363d;\n          --input-border-focus: #0969da;\n          --input-border-error: #f85149;\n          --button-bg: #404040;\n          --button-border: #555555;\n          --button-hover: #4a4a4a;\n          --button-active: #555555;\n          --confirm-bg: #0d6efd;\n          --confirm-hover: #0b5ed7;\n          --confirm-active: #0a58ca;\n          --error-color: #f85149;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 400px;\n          max-width: 600px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 8px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0 0 16px 0;\n        }\n\n        .dialog-message:empty {\n          display: none;\n        }\n\n        .input-group {\n          margin-bottom: 20px;\n        }\n\n        .dialog-input {\n          width: 100%;\n          padding: 8px 12px;\n          border: 1px solid var(--input-border);\n          border-radius: 4px;\n          background: var(--input-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          transition: border-color 0.15s ease;\n          box-sizing: border-box;\n        }\n\n        .dialog-input:focus {\n          outline: none;\n          border-color: var(--input-border-focus);\n          box-shadow: 0 0 0 2px rgba(9, 105, 218, 0.3);\n        }\n\n        .dialog-input.error {\n          border-color: var(--input-border-error);\n        }\n\n        .dialog-input.error:focus {\n          box-shadow: 0 0 0 2px rgba(209, 36, 47, 0.3);\n        }\n\n        .dialog-textarea {\n          min-height: 80px;\n          resize: vertical;\n          font-family: inherit;\n        }\n\n        .error-message {\n          color: var(--error-color);\n          font-size: 12px;\n          margin-top: 4px;\n          display: none;\n        }\n\n        .error-message.visible {\n          display: block;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-button {\n          padding: 8px 16px;\n          border: 1px solid var(--button-border);\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 80px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--confirm-bg);\n          outline-offset: 2px;\n        }\n\n        .dialog-button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .confirm-button {\n          background: var(--confirm-bg);\n          color: white;\n          border-color: var(--confirm-bg);\n        }\n\n        .confirm-button:hover:not(:disabled) {\n          background: var(--confirm-hover);\n          border-color: var(--confirm-hover);\n        }\n\n        .confirm-button:active:not(:disabled) {\n          background: var(--confirm-active);\n          border-color: var(--confirm-active);\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part=\"dialog\">\n        <div class=\"dialog-content\" part=\"content\">\n          <h3 class=\"dialog-title\" part=\"title\">Input Required</h3>\n          <p class=\"dialog-message\" part=\"message\"></p>\n\n          <div class=\"input-group\" part=\"input-group\">\n            <input class=\"dialog-input\" part=\"input\" type=\"text\" />\n            <div class=\"error-message\" part=\"error-message\"></div>\n          </div>\n\n          <div class=\"dialog-buttons\" part=\"buttons\">\n            <button class=\"dialog-button cancel-button\" part=\"cancel-button\" type=\"button\">\n              Cancel\n            </button>\n            <button class=\"dialog-button confirm-button\" part=\"confirm-button\" type=\"button\">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    `;\n\n    this._nativeDialog = shadowRoot.querySelector('dialog');\n    const confirmButton = shadowRoot.querySelector('.confirm-button');\n    const cancelButton = shadowRoot.querySelector('.cancel-button');\n    const input = shadowRoot.querySelector('.dialog-input') as HTMLInputElement;\n\n    // Set up event listeners\n    if (this._nativeDialog) {\n      this._nativeDialog.addEventListener('close', this.handleClose.bind(this));\n      this._nativeDialog.addEventListener(\n        'cancel',\n        this.handleCancel.bind(this)\n      );\n    }\n\n    if (confirmButton) {\n      confirmButton.addEventListener('click', () => this.confirm());\n    }\n\n    if (cancelButton) {\n      cancelButton.addEventListener('click', () => this.cancel());\n    }\n\n    if (input) {\n      input.addEventListener('input', this.handleInput.bind(this));\n      input.addEventListener('keydown', this.handleKeydown.bind(this));\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('prompt-dialog');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Apply initial theme\n    this.applyTheme(this._theme);\n    this.updateContent();\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'title':\n      case 'message':\n      case 'placeholder':\n      case 'default-value':\n      case 'confirm-text':\n      case 'cancel-text':\n      case 'required':\n      case 'multiline':\n      case 'pattern':\n      case 'min-length':\n      case 'max-length':\n        this.updateContent();\n        break;\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const titleElement = this.shadowRoot?.querySelector('.dialog-title');\n    const messageElement = this.shadowRoot?.querySelector('.dialog-message');\n    const confirmButton = this.shadowRoot?.querySelector('.confirm-button');\n    const cancelButton = this.shadowRoot?.querySelector('.cancel-button');\n    const inputElement = this.shadowRoot?.querySelector(\n      '.dialog-input'\n    ) as HTMLInputElement;\n\n    if (titleElement) {\n      titleElement.textContent = this.getAttribute('title') || 'Input Required';\n    }\n\n    if (messageElement) {\n      const message = this.getAttribute('message') || '';\n      messageElement.textContent = message;\n    }\n\n    if (confirmButton) {\n      confirmButton.textContent = this.getAttribute('confirm-text') || 'OK';\n    }\n\n    if (cancelButton) {\n      cancelButton.textContent = this.getAttribute('cancel-text') || 'Cancel';\n    }\n\n    if (inputElement) {\n      // Handle multiline\n      const multiline = this.hasAttribute('multiline');\n      const currentType = inputElement.tagName.toLowerCase();\n\n      if (multiline && currentType === 'input') {\n        // Replace input with textarea\n        const textarea = document.createElement('textarea');\n        textarea.className = 'dialog-input dialog-textarea';\n        textarea.setAttribute('part', 'input');\n        inputElement.parentNode?.replaceChild(textarea, inputElement);\n        this.setupInputElement(textarea);\n      } else if (!multiline && currentType === 'textarea') {\n        // Replace textarea with input\n        const input = document.createElement('input');\n        input.className = 'dialog-input';\n        input.setAttribute('part', 'input');\n        input.type = 'text';\n        inputElement.parentNode?.replaceChild(input, inputElement);\n        this.setupInputElement(input);\n      } else {\n        this.setupInputElement(inputElement);\n      }\n    }\n  }\n\n  private setupInputElement(\n    element: HTMLInputElement | HTMLTextAreaElement\n  ): void {\n    const placeholder = this.getAttribute('placeholder') || '';\n    const defaultValue = this.getAttribute('default-value') || '';\n    const pattern = this.getAttribute('pattern');\n    const minLength = this.getAttribute('min-length');\n    const maxLength = this.getAttribute('max-length');\n\n    element.placeholder = placeholder;\n    element.value = defaultValue;\n\n    if (pattern && element instanceof HTMLInputElement) {\n      element.pattern = pattern;\n    }\n\n    if (minLength) {\n      element.minLength = parseInt(minLength, 10);\n    }\n\n    if (maxLength) {\n      element.maxLength = parseInt(maxLength, 10);\n    }\n\n    // Re-attach event listeners\n    element.addEventListener('input', this.handleInput.bind(this));\n    element.addEventListener('keydown', (event: Event) =>\n      this.handleKeydown(event as KeyboardEvent)\n    );\n  }\n\n  private handleInput(): void {\n    this.validateInput();\n  }\n\n  private handleKeydown(event: KeyboardEvent): void {\n    if (\n      event.key === 'Enter' &&\n      !event.shiftKey &&\n      !this.hasAttribute('multiline')\n    ) {\n      event.preventDefault();\n      this.confirm();\n    } else if (event.key === 'Escape') {\n      event.preventDefault();\n      this.cancel();\n    }\n  }\n\n  private validateInput(): boolean {\n    const input = this.shadowRoot?.querySelector('.dialog-input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n    const errorMessage = this.shadowRoot?.querySelector('.error-message');\n    const confirmButton = this.shadowRoot?.querySelector(\n      '.confirm-button'\n    ) as HTMLButtonElement;\n\n    if (!input || !errorMessage || !confirmButton) return false;\n\n    let isValid = true;\n    let error = '';\n\n    const value = input.value;\n    const required = this.hasAttribute('required');\n    const pattern = this.getAttribute('pattern');\n    const minLength = this.getAttribute('min-length');\n    const maxLength = this.getAttribute('max-length');\n\n    // Required validation\n    if (required && !value.trim()) {\n      isValid = false;\n      error = 'This field is required';\n    }\n\n    // Pattern validation\n    if (isValid && pattern && value && !new RegExp(pattern).test(value)) {\n      isValid = false;\n      error = 'Invalid format';\n    }\n\n    // Length validation\n    if (isValid && minLength && value.length < parseInt(minLength, 10)) {\n      isValid = false;\n      error = `Minimum length is ${minLength} characters`;\n    }\n\n    if (isValid && maxLength && value.length > parseInt(maxLength, 10)) {\n      isValid = false;\n      error = `Maximum length is ${maxLength} characters`;\n    }\n\n    // Update UI\n    input.classList.toggle('error', !isValid);\n    errorMessage.textContent = error;\n    errorMessage.classList.toggle('visible', !isValid);\n    confirmButton.disabled = !isValid;\n\n    return isValid;\n  }\n\n  private handleClose(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise(null);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'prompt-dialog-close', {\n      dialogId: this.id,\n      dialog: this,\n      value: null,\n    });\n  }\n\n  private handleCancel(event: Event): void {\n    const cancelable = dispatchCustomEvent(this, 'prompt-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    if (!cancelable) {\n      event.preventDefault();\n    } else {\n      this.cancel();\n    }\n  }\n\n  private confirm(): void {\n    if (!this.validateInput()) return;\n\n    const input = this.shadowRoot?.querySelector('.dialog-input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n    const value = input?.value || '';\n\n    if (this._resolvePromise) {\n      this._resolvePromise(value);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'prompt-dialog-confirm', {\n      dialogId: this.id,\n      dialog: this,\n      value,\n    });\n\n    this._nativeDialog?.close(value);\n  }\n\n  private cancel(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise(null);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'prompt-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n      value: null,\n    });\n\n    this._nativeDialog?.close();\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || 'Input Required';\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get message(): string {\n    return this.getAttribute('message') || '';\n  }\n\n  set message(value: string) {\n    this.setAttribute('message', value);\n  }\n\n  get placeholder(): string {\n    return this.getAttribute('placeholder') || '';\n  }\n\n  set placeholder(value: string) {\n    this.setAttribute('placeholder', value);\n  }\n\n  get defaultValue(): string {\n    return this.getAttribute('default-value') || '';\n  }\n\n  set defaultValue(value: string) {\n    this.setAttribute('default-value', value);\n  }\n\n  get confirmText(): string {\n    return this.getAttribute('confirm-text') || 'OK';\n  }\n\n  set confirmText(value: string) {\n    this.setAttribute('confirm-text', value);\n  }\n\n  get cancelText(): string {\n    return this.getAttribute('cancel-text') || 'Cancel';\n  }\n\n  set cancelText(value: string) {\n    this.setAttribute('cancel-text', value);\n  }\n\n  get required(): boolean {\n    return this.hasAttribute('required');\n  }\n\n  set required(value: boolean) {\n    if (value) {\n      this.setAttribute('required', '');\n    } else {\n      this.removeAttribute('required');\n    }\n  }\n\n  get multiline(): boolean {\n    return this.hasAttribute('multiline');\n  }\n\n  set multiline(value: boolean) {\n    if (value) {\n      this.setAttribute('multiline', '');\n    } else {\n      this.removeAttribute('multiline');\n    }\n  }\n\n  get value(): string {\n    const input = this.shadowRoot?.querySelector('.dialog-input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n    return input?.value || '';\n  }\n\n  set value(value: string) {\n    const input = this.shadowRoot?.querySelector('.dialog-input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n    if (input) {\n      input.value = value;\n      this.validateInput();\n    }\n  }\n\n  get open(): boolean {\n    return this._nativeDialog?.open || false;\n  }\n\n  /**\n   * Show the prompt dialog and return a promise that resolves to the input value or null if cancelled\n   */\n  public show(): Promise<string | null> {\n    return new Promise((resolve, reject) => {\n      if (this._resolvePromise) {\n        // Already showing, reject the previous promise\n        this._rejectPromise?.(\n          new Error('Dialog was replaced by another show() call')\n        );\n      }\n\n      this._resolvePromise = resolve;\n      this._rejectPromise = reject;\n\n      dispatchCustomEvent(this, 'prompt-dialog-show', {\n        dialogId: this.id,\n        dialog: this,\n      });\n\n      this._nativeDialog?.showModal();\n\n      // Focus the input after showing\n      setTimeout(() => {\n        const input = this.shadowRoot?.querySelector('.dialog-input') as\n          | HTMLInputElement\n          | HTMLTextAreaElement;\n        input?.focus();\n        input?.select();\n      }, 100);\n    });\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-prompt')) {\n  customElements.define('e2-prompt', PromptDialogElement);\n}\n","/**\n * KeyValue Editor Element\n * A form-like component for editing key-value pairs with schema support\n * Supports nested objects using collapsible sections\n */\n\nimport { Validator } from 'jsonschema';\nimport {\n  EditorElementProperties,\n  KeyValueEditorContext,\n  KeyValueSchema,\n  KeyValueValidationError,\n  KeyValueValidationResult,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class KeyValueEditorElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _themeCleanup?: () => void;\n  private _value: Record<string, any> = {};\n  private _valueProxy: Record<string, any> = {};\n  private _schema: KeyValueSchema | null = null;\n  private _readonly: boolean = false;\n  private _compact: boolean = false;\n  private _headerTitle: string | null = null;\n  private _validationErrors: KeyValueValidationError[] = [];\n  private _validator: Validator = new Validator();\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'readonly', 'compact', 'header-title'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    // Initialize header title from attribute\n    this._headerTitle = this.getAttribute('header-title');\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --spacing: 12px;\n          --border-radius: 6px;\n          --error-color: var(--danger-color, #dc3545);\n          --success-color: var(--success-color, #198754);\n          --warning-color: var(--warning-color, #ffc107);\n\n          display: block;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          color: var(--text-primary, #212529);\n        }\n\n        :host(.theme-dark) {\n          --error-color: var(--danger-color, #f85149);\n          --success-color: var(--success-color, #51cf66);\n          --warning-color: var(--warning-color, #ffd43b);\n          color: var(--text-primary, #e6edf3);\n        }\n\n        :host(.theme-dark) .keyvalue-container {\n          background: var(--bg-primary-dark, #1e1e1e);\n          border-color: var(--border-color-dark, #3e3e42);\n        }\n\n        :host(.theme-dark) .keyvalue-header {\n          background: var(--bg-secondary-dark, #252526);\n          border-bottom-color: var(--border-color-dark, #3e3e42);\n          color: var(--text-secondary-dark, #cccccc);\n        }\n\n        :host(.theme-dark) .field-label {\n          color: var(--text-primary-dark, #e6edf3);\n        }\n\n        :host(.theme-dark) .range-value {\n          color: var(--text-secondary-dark, #cccccc);\n        }\n\n        :host(.theme-dark) .field-description {\n          color: var(--text-secondary-dark, #cccccc);\n        }\n\n        :host(.theme-dark) .nested-section {\n          border-color: var(--border-color-dark, #3e3e42);\n        }\n\n        :host(.theme-dark) .nested-header {\n          background: var(--bg-secondary-dark, #252526);\n          border-bottom-color: var(--border-color-dark, #3e3e42);\n          color: var(--text-primary-dark, #e6edf3);\n        }\n\n        :host(.theme-dark) .nested-header:hover {\n          background: var(--bg-tertiary-dark, #2d2d30);\n        }\n\n        :host(.theme-dark) .nested-content {\n          background: var(--bg-primary-dark, #1e1e1e);\n        }\n\n        :host(.theme-dark) .empty-state {\n          color: var(--text-secondary-dark, #cccccc);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .keyvalue-container {\n          background: var(--bg-primary, #ffffff);\n          border: 1px solid var(--border-color, #dee2e6);\n          border-radius: var(--border-radius);\n          overflow: hidden;\n        }\n\n        .keyvalue-header {\n          background: var(--bg-secondary, #f8f9fa);\n          border-bottom: 1px solid var(--border-color, #dee2e6);\n          padding: var(--spacing);\n          font-weight: 600;\n          font-size: 13px;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n          color: var(--text-secondary, #6c757d);\n        }\n\n        .keyvalue-content {\n          padding: var(--spacing);\n        }\n\n        .field-row {\n          display: flex;\n          align-items: flex-start;\n          margin-bottom: var(--spacing);\n          gap: var(--spacing);\n        }\n\n        .field-row:last-child {\n          margin-bottom: 0;\n        }\n\n        :host([compact]) .field-row {\n          margin-bottom: calc(var(--spacing) / 2);\n        }\n\n        .field-label {\n          flex: 0 0 30%;\n          font-weight: 500;\n          color: var(--text-primary, #212529);\n          padding: 8px 0;\n          line-height: 1.4;\n          cursor: pointer;\n        }\n\n        :host([compact]) .field-label {\n          padding: 4px 0;\n        }\n\n        .field-input {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n        }\n\n        /* Input controls - inherit e2-app styles via CSS custom properties */\n        .input-control {\n          display: block;\n          width: 100%;\n          box-sizing: border-box;\n          padding: var(--input-padding, 6px 12px);\n          font-size: var(--input-font-size, 14px);\n          font-family: var(--font-family, system-ui, sans-serif);\n          line-height: var(--line-height, 1.4);\n          color: var(--input-text, #212529);\n          background-color: var(--input-bg, #ffffff);\n          background-clip: padding-box;\n          border: 1px solid var(--input-border, #ced4da);\n          border-radius: var(--input-border-radius, 4px);\n          transition: border-color var(--transition-fast, 0.15s ease-in-out), box-shadow var(--transition-fast, 0.15s ease-in-out);\n        }\n\n        .input-control:focus {\n          outline: 0;\n          border-color: var(--input-border-focus, #86b7fe);\n          box-shadow: 0 0 0 2px rgba(13, 110, 253, 0.25);\n        }\n\n        .input-control::placeholder {\n          color: var(--input-placeholder, #6c757d);\n          opacity: 1;\n        }\n\n        .input-control:disabled {\n          background-color: var(--bg-tertiary, #e9ecef);\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .input-control.error {\n          border-color: var(--error-color) !important;\n        }\n\n        .input-control.error:focus {\n          border-color: var(--error-color) !important;\n          box-shadow: 0 0 0 2px color-mix(in srgb, var(--error-color) 25%, transparent) !important;\n        }\n\n        /* Special styling for specific input types */\n        .input-control[type=\"color\"] {\n          width: 60px;\n          height: 38px;\n          padding: 4px;\n          cursor: pointer;\n        }\n\n        .input-control[type=\"range\"] {\n          height: auto;\n          padding: 0;\n          background: var(--bg-tertiary, #e9ecef);\n          cursor: pointer;\n          accent-color: var(--accent-color, #0d6efd);\n        }\n\n        .input-control[type=\"checkbox\"] {\n          width: 16px;\n          height: 16px;\n          margin: 0;\n          cursor: pointer;\n          accent-color: var(--accent-color, #0d6efd);\n        }\n\n        .input-control[type=\"checkbox\"]:disabled {\n          cursor: not-allowed;\n          opacity: 0.6;\n        }\n\n        .input-control[type=\"file\"] {\n          cursor: pointer;\n        }\n\n        /* Textarea specific */\n        textarea.input-control {\n          resize: vertical;\n          min-height: 80px;\n        }\n\n        /* Select specific */\n        select.input-control {\n          cursor: pointer;\n        }\n\n        .range-container {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        .range-value {\n          min-width: 60px;\n          font-size: 12px;\n          color: var(--text-secondary, #6c757d);\n          text-align: right;\n        }\n\n        .field-error {\n          color: var(--error-color);\n          font-size: 12px;\n          margin-top: 2px;\n          font-weight: 500;\n        }\n\n        .field-description {\n          color: var(--text-secondary, #6c757d);\n          font-size: 12px;\n          margin-top: 2px;\n          line-height: 1.3;\n        }\n\n        .nested-section {\n          border: 1px solid var(--border-color, #dee2e6);\n          border-radius: var(--border-radius);\n          margin-bottom: var(--spacing);\n          overflow: hidden;\n        }\n\n        .nested-header {\n          background: var(--bg-secondary, #f8f9fa);\n          border-bottom: 1px solid var(--border-color, #dee2e6);\n          padding: var(--spacing);\n          cursor: pointer;\n          user-select: none;\n          display: flex;\n          align-items: center;\n          gap: var(--spacing);\n          font-weight: 500;\n          transition: background-color var(--transition-fast, 0.15s ease-in-out);\n        }\n\n        .nested-header:hover {\n          background: var(--bg-tertiary, #e9ecef);\n        }\n\n        .nested-toggle {\n          width: 16px;\n          height: 16px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: transform 0.2s ease;\n        }\n\n        .nested-section.expanded .nested-toggle {\n          transform: rotate(90deg);\n        }\n\n        .nested-content {\n          padding: var(--spacing);\n          display: none;\n        }\n\n        .nested-section.expanded .nested-content {\n          display: block;\n        }\n\n        .empty-state {\n          text-align: center;\n          color: var(--text-secondary, #6c757d);\n          padding: calc(var(--spacing) * 2);\n          font-style: italic;\n        }\n      </style>\n\n      <div class=\"keyvalue-container\">\n        <div class=\"keyvalue-header\">Properties</div>\n        <div class=\"keyvalue-content\">\n          <div class=\"empty-state\">No properties to display</div>\n        </div>\n      </div>\n    `;\n  }\n\n  private setupValueProxy(): void {\n    const self = this;\n\n    this._valueProxy = new Proxy(this._value, {\n      set(\n        target: Record<string, any>,\n        key: string | symbol,\n        value: any\n      ): boolean {\n        if (typeof key === 'string') {\n          const oldValue = target[key];\n          target[key] = value;\n\n          // Dispatch change event\n          self.dispatchChangeEvent(key, oldValue, value, [key]);\n\n          // Update the specific input field without full re-render\n          self.updateInputValue(key, value);\n\n          // Validate after change\n          self.validateField(key);\n        }\n        return true;\n      },\n\n      deleteProperty(\n        target: Record<string, any>,\n        key: string | symbol\n      ): boolean {\n        if (typeof key === 'string' && key in target) {\n          const oldValue = target[key];\n          delete target[key];\n\n          // Dispatch change event\n          self.dispatchChangeEvent(key, oldValue, undefined, [key]);\n\n          // Trigger re-render for deletions\n          self.render();\n        }\n        return true;\n      },\n    });\n  }\n\n  private setupEventListeners(): void {\n    const content = this.shadowRoot?.querySelector('.keyvalue-content');\n    if (!content) return;\n\n    content.addEventListener('contextmenu', this.handleContextMenu.bind(this));\n  }\n\n  private handleContextMenu(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    const target = mouseEvent.target as HTMLElement;\n\n    // Find the field row that was right-clicked\n    const fieldRow = target.closest('.field-row') as HTMLElement;\n    let key: string | null = null;\n    let value: any = null;\n    let path: string[] = [];\n    let fieldType: string | null = null;\n\n    if (fieldRow) {\n      // Extract the key from the input element or label\n      const input = fieldRow.querySelector(\n        'input, select, textarea'\n      ) as HTMLInputElement;\n      const label = fieldRow.querySelector('.field-label') as HTMLElement;\n\n      if (input && input.id.startsWith('field-')) {\n        // Extract key from input ID (format: field-keyname)\n        key = input.id.replace('field-', '');\n\n        // Get the current value\n        value = this._value[key];\n\n        // Determine field type\n        fieldType = input.type || input.tagName.toLowerCase();\n\n        // For now, we'll use a simple path (just the key)\n        // In the future, this could be enhanced to support nested paths\n        path = [key];\n      } else if (label) {\n        // Try to extract key from label's for attribute\n        const forAttr = label.getAttribute('for');\n        if (forAttr && forAttr.startsWith('field-')) {\n          key = forAttr.replace('field-', '');\n          value = this._value[key];\n          fieldType = 'unknown';\n          path = [key];\n        }\n      }\n    }\n\n    // Add component context to the event\n    const componentContext: KeyValueEditorContext = {\n      componentType: 'keyvalue-editor',\n      componentId: this.id || generateId(),\n      component: this,\n      key,\n      value,\n      path,\n      fieldType,\n    };\n\n    // Add the context to the event\n    (mouseEvent as any).componentContext = componentContext;\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('keyvalue-editor');\n    }\n\n    this.setupValueProxy();\n    this.setupEventListeners();\n    this.render();\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'readonly':\n        this._readonly = newValue !== null;\n        this.render();\n        break;\n      case 'compact':\n        this._compact = newValue !== null;\n        break;\n      case 'header-title':\n        this._headerTitle = newValue;\n        this.render();\n        break;\n    }\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  private render(): void {\n    const shadowRoot = this.shadowRoot!;\n    const container = shadowRoot.querySelector('.keyvalue-container')!;\n    const content = shadowRoot.querySelector('.keyvalue-content')!;\n\n    // Update header visibility and content\n    const header = shadowRoot.querySelector('.keyvalue-header') as HTMLElement;\n    if (this._headerTitle !== null) {\n      // Show header with title (use \"Properties\" as default if empty string)\n      const headerText =\n        this._headerTitle === '' ? 'Properties' : this._headerTitle;\n      header.textContent = headerText;\n      header.style.display = 'block';\n    } else {\n      // Hide header\n      header.style.display = 'none';\n    }\n\n    if (Object.keys(this._value).length === 0) {\n      content.innerHTML =\n        '<div class=\"empty-state\">No properties to display</div>';\n      return;\n    }\n\n    content.innerHTML = this.renderFields();\n  }\n\n  private renderFields(): string {\n    const fields: string[] = [];\n\n    for (const [key, value] of Object.entries(this._value)) {\n      const fieldSchema = this._schema?.properties?.[key];\n      fields.push(this.renderField(key, value, fieldSchema, []));\n    }\n\n    return fields.join('');\n  }\n\n  private renderField(\n    key: string,\n    value: any,\n    schema?: any,\n    path: string[] = []\n  ): string {\n    const isNested =\n      typeof value === 'object' && value !== null && !Array.isArray(value);\n\n    if (isNested) {\n      return this.renderNestedField(key, value, schema, path);\n    }\n\n    const label = schema?.title || this.formatLabel(key);\n    const description = schema?.description;\n    const fullPath = [...path, key];\n    const error = this._validationErrors.find(\n      e => e.key === key && JSON.stringify(e.path) === JSON.stringify(fullPath)\n    );\n    const inputType = this.getInputType(value, schema);\n    const inputId = `field-${fullPath.join('-')}`;\n\n    return `\n      <div class=\"field-row\">\n        <label class=\"field-label\" for=\"${inputId}\">${label}</label>\n        <div class=\"field-input\">\n          ${this.renderInput(inputId, fullPath, value, schema, inputType)}\n          ${\n            description\n              ? `<div class=\"field-description\">${description}</div>`\n              : ''\n          }\n          ${error ? `<div class=\"field-error\">${error.message}</div>` : ''}\n        </div>\n      </div>\n    `;\n  }\n\n  private renderNestedField(\n    key: string,\n    value: Record<string, any>,\n    schema?: any,\n    path: string[] = []\n  ): string {\n    const label = schema?.title || this.formatLabel(key);\n    const isExpanded = true; // TODO: Track expansion state\n    const expandedClass = isExpanded ? 'expanded' : '';\n    const nestedPath = [...path, key];\n\n    return `\n      <div class=\"nested-section ${expandedClass}\">\n        <div class=\"nested-header\" onclick=\"this.parentElement.classList.toggle('expanded')\">\n          <span class=\"nested-toggle\">▶</span>\n          <span>${label}</span>\n        </div>\n        <div class=\"nested-content\">\n          ${this.renderNestedFields(value, schema?.properties, nestedPath)}\n        </div>\n      </div>\n    `;\n  }\n\n  private renderNestedFields(\n    value: Record<string, any>,\n    properties?: any,\n    path: string[] = []\n  ): string {\n    const fields: string[] = [];\n\n    for (const [key, val] of Object.entries(value)) {\n      const fieldSchema = properties?.[key];\n      // For nested fields, we only support scalar types (no further nesting)\n      if (typeof val !== 'object' || val === null || Array.isArray(val)) {\n        fields.push(this.renderField(key, val, fieldSchema, path));\n      }\n    }\n\n    return fields.join('');\n  }\n\n  private renderInput(\n    id: string,\n    path: string[],\n    value: any,\n    schema?: any,\n    inputType: string = 'text'\n  ): string {\n    const disabled = this.disabled || this._readonly;\n    const key = path[path.length - 1];\n    const hasError = this._validationErrors.some(\n      e => e.key === key && JSON.stringify(e.path) === JSON.stringify(path)\n    );\n    const errorClass = hasError ? ' error' : '';\n    const pathString = JSON.stringify(path).replace(/\"/g, '&quot;');\n\n    switch (inputType) {\n      case 'checkbox':\n        return `<input type=\"checkbox\" id=\"${id}\" class=\"input-control${errorClass}\" ${\n          value ? 'checked' : ''\n        } ${\n          disabled ? 'disabled' : ''\n        } onchange=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.checked)\">`;\n\n      case 'number':\n        const min =\n          schema?.minimum !== undefined ? `min=\"${schema.minimum}\"` : '';\n        const max =\n          schema?.maximum !== undefined ? `max=\"${schema.maximum}\"` : '';\n        const step =\n          schema?.type === 'integer'\n            ? 'step=\"1\"'\n            : schema?.multipleOf\n            ? `step=\"${schema.multipleOf}\"`\n            : '';\n        return `<input type=\"number\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || ''\n        }\" ${min} ${max} ${step} ${\n          disabled ? 'disabled' : ''\n        } oninput=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.valueAsNumber)\">`;\n\n      case 'range':\n        const rangeMin = schema?.minimum !== undefined ? schema.minimum : 0;\n        const rangeMax = schema?.maximum !== undefined ? schema.maximum : 100;\n        const rangeStep =\n          schema?.type === 'integer'\n            ? '1'\n            : schema?.multipleOf\n            ? schema.multipleOf.toString()\n            : '1';\n        return `\n          <div class=\"range-container\">\n            <input type=\"range\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || rangeMin\n        }\" min=\"${rangeMin}\" max=\"${rangeMax}\" step=\"${rangeStep}\" ${\n          disabled ? 'disabled' : ''\n        } oninput=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), parseFloat(this.value)); this.nextElementSibling.textContent = this.value\">\n            <span class=\"range-value\">${value || rangeMin}</span>\n          </div>\n        `;\n\n      case 'color':\n        const colorValue = value || '#000000';\n        return `<input type=\"color\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${colorValue}\" ${\n          disabled ? 'disabled' : ''\n        } onchange=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">`;\n\n      case 'date':\n        return `<input type=\"date\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || ''\n        }\" ${\n          disabled ? 'disabled' : ''\n        } onchange=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">`;\n\n      case 'time':\n        return `<input type=\"time\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || ''\n        }\" ${\n          disabled ? 'disabled' : ''\n        } onchange=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">`;\n\n      case 'datetime-local':\n        return `<input type=\"datetime-local\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || ''\n        }\" ${\n          disabled ? 'disabled' : ''\n        } onchange=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">`;\n\n      case 'email':\n        const emailPattern = schema?.pattern || '';\n        return `<input type=\"email\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || ''\n        }\" ${emailPattern ? `pattern=\"${emailPattern}\"` : ''} ${\n          disabled ? 'disabled' : ''\n        } oninput=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">`;\n\n      case 'url':\n        return `<input type=\"url\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || ''\n        }\" ${\n          disabled ? 'disabled' : ''\n        } oninput=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">`;\n\n      case 'tel':\n        const telPattern = schema?.pattern || '';\n        return `<input type=\"tel\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || ''\n        }\" ${telPattern ? `pattern=\"${telPattern}\"` : ''} ${\n          disabled ? 'disabled' : ''\n        } oninput=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">`;\n\n      case 'select':\n        const options =\n          schema?.enum\n            ?.map(\n              (option: any) =>\n                `<option value=\"${option}\" ${\n                  option === value ? 'selected' : ''\n                }>${this.formatEnumOption(option)}</option>`\n            )\n            .join('') || '';\n        return `<select id=\"${id}\" class=\"input-control${errorClass}\" ${\n          disabled ? 'disabled' : ''\n        } onchange=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">${options}</select>`;\n\n      case 'textarea':\n        const rows = schema?.maxLength && schema.maxLength > 100 ? '4' : '2';\n        const maxLength = schema?.maxLength\n          ? `maxlength=\"${schema.maxLength}\"`\n          : '';\n        return `<textarea id=\"${id}\" class=\"input-control${errorClass}\" rows=\"${rows}\" ${maxLength} ${\n          disabled ? 'disabled' : ''\n        } oninput=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">${\n          value || ''\n        }</textarea>`;\n\n      default: // text and other types\n        const pattern = schema?.pattern ? `pattern=\"${schema.pattern}\"` : '';\n        const maxLengthAttr = schema?.maxLength\n          ? `maxlength=\"${schema.maxLength}\"`\n          : '';\n        const minLength = schema?.minLength\n          ? `minlength=\"${schema.minLength}\"`\n          : '';\n\n        // Use textarea for long text\n        if (schema?.maxLength && schema.maxLength > 100) {\n          return this.renderInput(id, path, value, schema, 'textarea');\n        }\n\n        return `<input type=\"text\" id=\"${id}\" class=\"input-control${errorClass}\" value=\"${\n          value || ''\n        }\" ${pattern} ${maxLengthAttr} ${minLength} ${\n          disabled ? 'disabled' : ''\n        } oninput=\"this.getRootNode().host.updateValueByPath(JSON.parse('${pathString}'), this.value)\">`;\n    }\n  }\n\n  private formatEnumOption(option: any): string {\n    if (typeof option === 'string') {\n      // Convert camelCase and snake_case to readable text\n      return option\n        .replace(/([A-Z])/g, ' $1')\n        .replace(/_/g, ' ')\n        .replace(/^./, str => str.toUpperCase())\n        .trim();\n    }\n    return String(option);\n  }\n\n  private getInputType(value: any, schema?: any): string {\n    // Check for enum first (dropdown)\n    if (schema?.enum && Array.isArray(schema.enum)) {\n      return 'select';\n    }\n\n    // Check schema format hints\n    if (schema?.format) {\n      switch (schema.format) {\n        case 'email':\n          return 'email';\n        case 'uri':\n        case 'url':\n          return 'url';\n        case 'date':\n          return 'date';\n        case 'time':\n          return 'time';\n        case 'date-time':\n          return 'datetime-local';\n        case 'color':\n          return 'color';\n        case 'tel':\n        case 'telephone':\n          return 'tel';\n      }\n    }\n\n    // Check for range/slider based on min/max constraints\n    if (schema?.type === 'number' || schema?.type === 'integer') {\n      if (schema.minimum !== undefined && schema.maximum !== undefined) {\n        // Use slider for bounded numbers, especially for smaller ranges\n        const range = schema.maximum - schema.minimum;\n        if (range <= 100 && schema.type === 'integer') {\n          return 'range';\n        }\n      }\n      return 'number';\n    }\n\n    // Type-based detection\n    switch (typeof value) {\n      case 'boolean':\n        return 'checkbox';\n      case 'number':\n        // Check if we should use range based on schema\n        if (schema?.minimum !== undefined && schema?.maximum !== undefined) {\n          const range = schema.maximum - schema.minimum;\n          if (range <= 100 && Number.isInteger(value)) {\n            return 'range';\n          }\n        }\n        return 'number';\n      default:\n        // Pattern-based detection for strings\n        if (typeof value === 'string') {\n          if (value.includes('@') && value.includes('.')) {\n            return 'email';\n          }\n          if (value.startsWith('http') || value.startsWith('www.')) {\n            return 'url';\n          }\n          if (value.match(/^#[0-9a-fA-F]{6}$/)) {\n            return 'color';\n          }\n          if (value.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            return 'date';\n          }\n          if (value.match(/^\\d{2}:\\d{2}(:\\d{2})?$/)) {\n            return 'time';\n          }\n          if (value.match(/^\\+?\\d{10,}$/)) {\n            return 'tel';\n          }\n        }\n        return 'text';\n    }\n  }\n\n  private formatLabel(key: string): string {\n    return key\n      .replace(/([A-Z])/g, ' $1')\n      .replace(/^./, str => str.toUpperCase())\n      .trim();\n  }\n\n  private dispatchChangeEvent(\n    key: string,\n    oldValue: any,\n    newValue: any,\n    path: string[]\n  ): void {\n    dispatchCustomEvent(this, 'keyvalue-change', {\n      key,\n      oldValue,\n      newValue,\n      path,\n      isValid: this.isValid(),\n    });\n  }\n\n  private validateField(key: string): void {\n    this.validateFieldByPath([key]);\n  }\n\n  private validateFieldByPath(path: string[]): void {\n    const key = path[path.length - 1];\n\n    // Remove existing errors for this field path\n    this._validationErrors = this._validationErrors.filter(\n      e => !(e.key === key && JSON.stringify(e.path) === JSON.stringify(path))\n    );\n\n    // Get the value from the correct path\n    let value: any = this._value;\n    for (const pathPart of path) {\n      if (value && typeof value === 'object') {\n        value = value[pathPart];\n      } else {\n        value = undefined;\n        break;\n      }\n    }\n\n    // Navigate through the schema following the full path\n    let fieldSchema: any = this._schema;\n    for (let i = 0; i < path.length && fieldSchema; i++) {\n      if (fieldSchema.properties) {\n        fieldSchema = fieldSchema.properties[path[i]];\n      } else {\n        fieldSchema = undefined;\n        break;\n      }\n    }\n\n    if (!fieldSchema) return;\n\n    // Basic validation based on schema\n    const errors = this.validateValue(key, value, fieldSchema, path);\n    this._validationErrors.push(...errors);\n\n    // Update error display for this specific field\n    this.updateFieldErrorDisplayByPath(path);\n\n    // Dispatch validation event\n    dispatchCustomEvent(this, 'keyvalue-validation', {\n      isValid: this._validationErrors.length === 0,\n      errors: this._validationErrors,\n    });\n  }\n\n  private updateInputValue(key: string, value: any): void {\n    this.updateInputValueByPath([key], value);\n  }\n\n  private updateInputValueByPath(path: string[], value: any): void {\n    const fieldId = `field-${path.join('-')}`;\n    const input = this.shadowRoot?.querySelector(`#${fieldId}`) as\n      | HTMLInputElement\n      | HTMLSelectElement\n      | HTMLTextAreaElement;\n\n    if (!input) return;\n\n    // Update the input value only if it's different from the current value\n    // This prevents cursor position issues and unnecessary updates\n    if (input.type === 'checkbox') {\n      const checkbox = input as HTMLInputElement;\n      checkbox.checked = Boolean(value);\n    } else if (input.type === 'range') {\n      const range = input as HTMLInputElement;\n      range.value = String(value || 0);\n      // Also update the range value display\n      const rangeValue = range.nextElementSibling as HTMLElement;\n      if (rangeValue && rangeValue.classList.contains('range-value')) {\n        rangeValue.textContent = String(value || 0);\n      }\n    } else {\n      // For text inputs, select, and textarea elements\n      const stringValue =\n        value === null || value === undefined ? '' : String(value);\n      if (input.value !== stringValue) {\n        input.value = stringValue;\n      }\n    }\n  }\n\n  private updateFieldErrorDisplay(key: string): void {\n    this.updateFieldErrorDisplayByPath([key]);\n  }\n\n  private updateFieldErrorDisplayByPath(path: string[]): void {\n    const key = path[path.length - 1];\n    const fieldId = `field-${path.join('-')}`;\n\n    // Update input error state\n    const input = this.shadowRoot?.querySelector(`#${fieldId}`) as\n      | HTMLInputElement\n      | HTMLSelectElement\n      | HTMLTextAreaElement;\n\n    if (input) {\n      const hasError = this._validationErrors.some(\n        e => e.key === key && JSON.stringify(e.path) === JSON.stringify(path)\n      );\n      if (hasError) {\n        input.classList.add('error');\n      } else {\n        input.classList.remove('error');\n      }\n    }\n\n    // Update error message display\n    const fieldRow = this.shadowRoot\n      ?.querySelector(`label[for=\"${fieldId}\"]`)\n      ?.closest('.field-row');\n    if (!fieldRow) return;\n\n    const fieldInputContainer = fieldRow.querySelector('.field-input');\n    if (!fieldInputContainer) return;\n\n    // Remove existing error message\n    const existingError = fieldInputContainer.querySelector('.field-error');\n    if (existingError) {\n      existingError.remove();\n    }\n\n    // Add new error message if there's an error\n    const error = this._validationErrors.find(\n      e => e.key === key && JSON.stringify(e.path) === JSON.stringify(path)\n    );\n    if (error) {\n      const errorElement = document.createElement('div');\n      errorElement.className = 'field-error';\n      errorElement.textContent = error.message;\n      fieldInputContainer.appendChild(errorElement);\n    }\n  }\n\n  private validateValue(\n    key: string,\n    value: any,\n    schema: any,\n    path: string[]\n  ): KeyValueValidationError[] {\n    const errors: KeyValueValidationError[] = [];\n\n    // Use jsonschema library for comprehensive validation\n    if (this._schema) {\n      // Create a temporary object with just this field for validation\n      const tempObject = { [key]: value };\n      const tempSchema = {\n        type: 'object',\n        properties: { [key]: schema },\n        required: this._schema.required?.includes(key) ? [key] : [],\n      };\n\n      const result = this._validator.validate(tempObject, tempSchema);\n\n      if (!result.valid) {\n        for (const error of result.errors) {\n          // Parse jsonschema error messages into user-friendly format\n          let message = this.formatValidationError(error, schema);\n\n          errors.push({\n            key,\n            path,\n            message,\n          });\n        }\n      }\n    }\n\n    return errors;\n  }\n\n  private formatValidationError(error: any, schema: any): string {\n    const { name, message, argument } = error;\n\n    switch (name) {\n      case 'required':\n        return 'This field is required';\n\n      case 'type':\n        const expectedType = argument;\n        switch (expectedType) {\n          case 'string':\n            return 'Must be text';\n          case 'number':\n            return 'Must be a number';\n          case 'integer':\n            return 'Must be a whole number';\n          case 'boolean':\n            return 'Must be true or false';\n          default:\n            return `Must be a ${expectedType}`;\n        }\n\n      case 'minimum':\n        return `Must be at least ${argument}`;\n\n      case 'maximum':\n        return `Must be no more than ${argument}`;\n\n      case 'minLength':\n        return `Must be at least ${argument} characters long`;\n\n      case 'maxLength':\n        return `Must be no more than ${argument} characters long`;\n\n      case 'pattern':\n        // Try to provide better messages for common patterns\n        if (schema?.format) {\n          switch (schema.format) {\n            case 'email':\n              return 'Must be a valid email address';\n            case 'uri':\n            case 'url':\n              return 'Must be a valid URL';\n            case 'date':\n              return 'Must be a valid date (YYYY-MM-DD)';\n            case 'time':\n              return 'Must be a valid time (HH:MM)';\n            case 'color':\n              return 'Must be a valid color (e.g., #FF0000)';\n            default:\n              return 'Does not match the required format';\n          }\n        }\n        return 'Does not match the required pattern';\n\n      case 'enum':\n        const validValues = schema?.enum?.join(', ') || 'valid values';\n        return `Must be one of: ${validValues}`;\n\n      case 'multipleOf':\n        return `Must be a multiple of ${argument}`;\n\n      default:\n        // Fallback to the original error message, cleaned up\n        return (\n          message\n            .replace(/^instance\\.?\\w*\\.?/, '')\n            .replace(/^\\./, '')\n            .trim() || 'Invalid value'\n        );\n    }\n  }\n\n  // Public API methods\n  public updateValue(key: string, value: any): void {\n    this._valueProxy[key] = value;\n  }\n\n  public updateValueByPath(path: string[], value: any): void {\n    if (path.length === 1) {\n      // Top-level property\n      this._valueProxy[path[0]] = value;\n    } else {\n      // Nested property - navigate to the correct nested object\n      let target = this._value;\n      for (let i = 0; i < path.length - 1; i++) {\n        if (!target[path[i]] || typeof target[path[i]] !== 'object') {\n          target[path[i]] = {};\n        }\n        target = target[path[i]];\n      }\n\n      const finalKey = path[path.length - 1];\n      const oldValue = target[finalKey];\n      target[finalKey] = value;\n\n      // Dispatch change event\n      this.dispatchChangeEvent(finalKey, oldValue, value, path);\n\n      // Update the specific input field without full re-render\n      this.updateInputValueByPath(path, value);\n\n      // Validate after change\n      this.validateFieldByPath(path);\n    }\n  }\n\n  public getValue(): Record<string, any> {\n    return { ...this._value };\n  }\n\n  public setValue(value: Record<string, any>): void {\n    this._value = { ...value };\n    this.setupValueProxy();\n    this.render();\n    this.validate();\n  }\n\n  public setSchema(schema: KeyValueSchema): void {\n    this._schema = schema;\n    this.render();\n    this.validate();\n  }\n\n  public validate(): KeyValueValidationResult {\n    this._validationErrors = [];\n\n    if (!this._schema) {\n      return { isValid: true, errors: [] };\n    }\n\n    // Use jsonschema to validate the entire object\n    const result = this._validator.validate(this._value, this._schema);\n\n    if (!result.valid) {\n      for (const error of result.errors) {\n        // Extract the property name from the error path\n        const propertyPath = error.property.replace('instance.', '').split('.');\n        const key = propertyPath[propertyPath.length - 1] || 'root'; // Use the last part as the key\n        const fieldSchema = this._schema.properties?.[propertyPath[0]];\n\n        const message = this.formatValidationError(error, fieldSchema);\n\n        this._validationErrors.push({\n          key,\n          path: propertyPath,\n          message,\n        });\n      }\n    }\n\n    // Update field error displays for all fields with validation errors\n    for (const error of this._validationErrors) {\n      this.updateFieldErrorDisplayByPath(error.path);\n    }\n\n    const validationResult = {\n      isValid: this._validationErrors.length === 0,\n      errors: this._validationErrors,\n    };\n\n    dispatchCustomEvent(this, 'keyvalue-validation', validationResult);\n    return validationResult;\n  }\n\n  public isValid(): boolean {\n    return this._validationErrors.length === 0;\n  }\n\n  public focusField(key: string): void {\n    this.focusFieldByPath([key]);\n  }\n\n  public focusFieldByPath(path: string[]): void {\n    const fieldId = `field-${path.join('-')}`;\n    const input = this.shadowRoot?.querySelector(\n      `#${fieldId}`\n    ) as HTMLInputElement;\n    input?.focus();\n  }\n\n  // Properties\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  get readonly(): boolean {\n    return this._readonly;\n  }\n\n  set readonly(value: boolean) {\n    this._readonly = value;\n    if (value) {\n      this.setAttribute('readonly', '');\n    } else {\n      this.removeAttribute('readonly');\n    }\n  }\n\n  get compact(): boolean {\n    return this._compact;\n  }\n\n  set compact(value: boolean) {\n    this._compact = value;\n    if (value) {\n      this.setAttribute('compact', '');\n    } else {\n      this.removeAttribute('compact');\n    }\n  }\n\n  get value(): Record<string, any> {\n    return this.getValue();\n  }\n\n  set value(value: Record<string, any>) {\n    this.setValue(value);\n  }\n\n  get schema(): KeyValueSchema | null {\n    return this._schema;\n  }\n\n  set schema(value: KeyValueSchema | null) {\n    if (value) {\n      this.setSchema(value);\n    } else {\n      this._schema = null;\n      this.render();\n    }\n  }\n\n  get headerTitle(): string | null {\n    return this._headerTitle;\n  }\n\n  set headerTitle(value: string | null) {\n    this._headerTitle = value;\n    if (value !== null) {\n      this.setAttribute('header-title', value);\n    } else {\n      this.removeAttribute('header-title');\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-keyvalue-editor')) {\n  customElements.define('e2-keyvalue-editor', KeyValueEditorElement);\n}\n","/**\n * ListView Element\n * A versatile list component supporting multiple view modes (list, details, icons)\n * with selection management and multi-select capabilities\n */\n\nimport {\n  EditorElementProperties,\n  ListViewColumn,\n  ListViewContext,\n  ListViewItem,\n  ListViewItemClickEvent,\n  ListViewItemDoubleClickEvent,\n  ListViewMode,\n  ListViewSelectionChangeEvent,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ListView extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _themeCleanup?: () => void;\n  private _items: ListViewItem[] = [];\n  private _columns: ListViewColumn[] = [];\n  private _viewMode: ListViewMode = 'list';\n  private _multiSelect: boolean = false;\n  private _selectedItems: Set<string> = new Set();\n  private _lastSelectedIndex: number = -1;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'view-mode', 'multi-select'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          border: 1px solid var(--listview-border, #ccc);\n          background: var(--listview-bg, #fff);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          overflow: hidden;\n          min-height: 100px;\n          container-type: style;\n          --header-visible: yes;\n        }\n\n        :host(.theme-dark) {\n          background: var(--listview-bg-dark, #1e1e1e);\n          border-color: var(--listview-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .listview-container {\n          width: 100%;\n          height: 100%;\n        }\n\n        .listview-header {\n          display: none;\n          font-weight: bold;\n          padding: 0;\n          flex-shrink: 0;\n        }\n\n        /* Show header when in details mode and header is visible */\n        @container style(--header-visible: yes) {\n          :host([view-mode=\"details\"]) .listview-header {\n            display: block;\n          }\n        }\n\n        /* Hide header when explicitly set to no */\n        @container style(--header-visible: no) {\n          .listview-header {\n            display: none !important;\n          }\n        }\n\n        .listview-header-row {\n          display: flex;\n          align-items: center;\n        }\n\n        .listview-header-cell {\n          padding: 8px 12px;\n          background: var(--listview-header-bg, #f5f5f5);\n          border-bottom: 1px solid var(--listview-border, #ccc);\n          border-right: 1px solid var(--listview-border, #ccc);\n          flex: 1;\n          min-width: 0;\n          cursor: pointer;\n          user-select: none;\n        }\n\n        :host(.theme-dark) .listview-header-cell {\n          background: var(--listview-header-bg-dark, #2d2d2d);\n          border-bottom-color: var(--listview-border-dark, #555);\n          border-right-color: var(--listview-border-dark, #555);\n        }\n\n        .listview-header-cell:hover {\n          background: var(--listview-header-hover-bg, #e5e5e5);\n        }\n\n        :host(.theme-dark) .listview-header-cell:hover {\n          background: var(--listview-header-hover-bg-dark, #3d3d3d);\n        }\n\n        .listview-header-cell:last-child {\n          border-right: none;\n        }\n\n        .listview-content {\n          overflow: auto;\n          flex: 1;\n        }\n\n        .listview-item {\n          padding: 4px 8px;\n          cursor: pointer;\n          user-select: none;\n          border-bottom: 1px solid transparent;\n          display: flex;\n          align-items: center;\n          min-height: 24px;\n        }\n\n        :host(:not([view-mode=\"details\"])) .listview-item:hover {\n          background: var(--listview-item-hover-bg, #f0f0f0);\n        }\n        :host([view-mode=\"details\"]) .listview-item:hover .listview-item-cell {\n          background: var(--listview-item-hover-bg, #f0f0f0);\n        }\n\n        :host(.theme-dark:not([view-mode=\"details\"])) .listview-item:hover {\n          background: var(--listview-item-hover-bg-dark, #2d2d2d);\n        }\n        :host(.theme-dark[view-mode=\"details\"]) .listview-item:hover .listview-item-cell {\n          background: var(--listview-item-hover-bg-dark, #2d2d2d);\n        }\n\n        :host(:not([view-mode=\"details\"])) .listview-item.selected {\n          background: var(--listview-item-selected-bg, #0078d4);\n          color: var(--listview-item-selected-text, #fff);\n        }\n        :host([view-mode=\"details\"]) .listview-item.selected .listview-item-cell {\n          background: var(--listview-item-selected-bg, #0078d4);\n          color: var(--listview-item-selected-text, #fff);\n        }\n\n        :host(.theme-dark:not([view-mode=\"details\"])) .listview-item.selected {\n          background: var(--listview-item-selected-bg-dark, #0078d4);\n          color: var(--listview-item-selected-text-dark, #fff);\n        }\n        :host(.theme-dark[view-mode=\"details\"]) .listview-item.selected .listview-item-cell {\n          background: var(--listview-item-selected-bg-dark, #0078d4);\n          color: var(--listview-item-selected-text-dark, #fff);\n        }\n\n        .listview-item.disabled {\n          opacity: 0.6;\n          cursor: default;\n          pointer-events: none;\n        }\n\n        .listview-item-icon {\n          margin-right: 8px;\n          flex-shrink: 0;\n          font-size: 16px;\n          width: 16px;\n          text-align: center;\n        }\n\n        .listview-item-label {\n          flex: 1;\n          min-width: 0;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n\n        .listview-item-cell {\n          flex: 1;\n          min-width: 0;\n          padding: 0 4px;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n\n        /* Details view specific styles */\n        :host([view-mode=\"details\"]) .listview-container {\n          display: flex;\n          flex-direction: column;\n        }\n\n        :host([view-mode=\"details\"]) .listview-content {\n          min-height: 0;\n        }\n\n        :host([view-mode=\"details\"]) .listview-item {\n          padding: 0;\n        }\n\n        :host([view-mode=\"details\"]) .listview-item-cell {\n          height: 100%;\n          padding: 8px 12px;\n          border-right: 1px solid var(--listview-border, #ccc);\n        }\n\n        :host(.theme-dark[view-mode=\"details\"]) .listview-item-cell {\n          border-right-color: var(--listview-border-dark, #555);\n        }\n\n        :host([view-mode=\"details\"]) .listview-item-cell:last-child {\n          border-right: none;\n        }\n\n        /* Icons view specific styles */\n        :host([view-mode=\"icons\"]) .listview-items {\n          display: flex;\n          flex-wrap: wrap;\n          padding: 8px;\n          gap: 8px;\n          align-content: flex-start;\n        }\n\n        :host([view-mode=\"icons\"]) .listview-item {\n          flex-direction: column;\n          width: 80px;\n          height: 80px;\n          padding: 8px;\n          text-align: center;\n          border: 1px solid transparent;\n          border-radius: 4px;\n        }\n\n        :host([view-mode=\"icons\"]) .listview-item-icon {\n          margin: 0 0 4px 0;\n          font-size: 32px;\n          width: auto;\n        }\n\n        :host([view-mode=\"icons\"]) .listview-item-label {\n          font-size: 12px;\n          line-height: 1.2;\n          white-space: normal;\n          overflow: hidden;\n          display: -webkit-box;\n          -webkit-line-clamp: 2;\n          -webkit-box-orient: vertical;\n        }\n\n        .empty-state {\n          padding: 32px;\n          text-align: center;\n          color: var(--text-color-muted, #666);\n          font-style: italic;\n        }\n\n        :host(.theme-dark) .empty-state {\n          color: var(--text-color-muted-dark, #999);\n        }\n      </style>\n      <div class=\"listview-container\">\n        <div class=\"listview-content\">\n          <div class=\"listview-header\">\n            <div class=\"listview-header-row\"></div>\n          </div>\n          <div class=\"listview-items\"></div>\n        </div>\n      </div>\n    `;\n\n    this.setupEventHandlers();\n  }\n\n  private setupEventHandlers(): void {\n    const items = this.shadowRoot?.querySelector('.listview-items');\n    if (!items) return;\n\n    items.addEventListener('click', this.handleItemClick.bind(this));\n    items.addEventListener('dblclick', this.handleItemDoubleClick.bind(this));\n    items.addEventListener('contextmenu', this.handleContextMenu.bind(this));\n  }\n\n  private handleItemClick(event: Event): void {\n    const target = event.target as HTMLElement;\n    const itemElement = target.closest('.listview-item') as HTMLElement;\n\n    if (!itemElement || itemElement.classList.contains('disabled')) {\n      return;\n    }\n\n    const itemId = itemElement.dataset.itemId;\n    if (!itemId) return;\n\n    const item = this._items.find(i => i.id === itemId);\n    if (!item) return;\n\n    const mouseEvent = event as MouseEvent;\n    const { ctrlKey, shiftKey, altKey } = mouseEvent;\n\n    // Handle selection\n    this.handleItemSelection(itemId, ctrlKey, shiftKey);\n\n    // Dispatch click event\n    dispatchCustomEvent<ListViewItemClickEvent['detail']>(\n      this,\n      'listview-item-click',\n      {\n        listViewId: this.id,\n        listView: this,\n        item,\n        itemId,\n        ctrlKey,\n        shiftKey,\n        altKey,\n      }\n    );\n  }\n\n  private handleItemDoubleClick(event: Event): void {\n    const target = event.target as HTMLElement;\n    const itemElement = target.closest('.listview-item') as HTMLElement;\n\n    if (!itemElement || itemElement.classList.contains('disabled')) {\n      return;\n    }\n\n    const itemId = itemElement.dataset.itemId;\n    if (!itemId) return;\n\n    const item = this._items.find(i => i.id === itemId);\n    if (!item) return;\n\n    // Dispatch double-click event\n    dispatchCustomEvent<ListViewItemDoubleClickEvent['detail']>(\n      this,\n      'listview-item-double-click',\n      {\n        listViewId: this.id,\n        listView: this,\n        item,\n        itemId,\n      }\n    );\n  }\n\n  private handleContextMenu(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    const target = mouseEvent.target as HTMLElement;\n\n    // Find the clicked list item (if any)\n    const itemElement = target.closest('.listview-item') as HTMLElement;\n    let item: ListViewItem | null = null;\n    let itemId: string | null = null;\n\n    if (itemElement && !itemElement.classList.contains('disabled')) {\n      itemId = itemElement.dataset.itemId || null;\n      if (itemId) {\n        item = this._items.find(i => i.id === itemId) || null;\n      }\n    }\n\n    // Add component context to the event\n    const componentContext: ListViewContext = {\n      componentType: 'list-view',\n      componentId: this.id || generateId(),\n      component: this,\n      item,\n      itemId,\n    };\n\n    // Add the context to the event\n    (mouseEvent as any).componentContext = componentContext;\n  }\n\n  private handleItemSelection(\n    itemId: string,\n    ctrlKey: boolean,\n    shiftKey: boolean\n  ): void {\n    const itemIndex = this._items.findIndex(i => i.id === itemId);\n    if (itemIndex === -1) return;\n\n    const previousSelection = new Set(this._selectedItems);\n\n    if (this._multiSelect && shiftKey && this._lastSelectedIndex !== -1) {\n      // Range selection\n      const start = Math.min(this._lastSelectedIndex, itemIndex);\n      const end = Math.max(this._lastSelectedIndex, itemIndex);\n\n      if (!ctrlKey) {\n        this._selectedItems.clear();\n      }\n\n      for (let i = start; i <= end; i++) {\n        this._selectedItems.add(this._items[i].id);\n      }\n    } else if (this._multiSelect && ctrlKey) {\n      // Toggle selection\n      if (this._selectedItems.has(itemId)) {\n        this._selectedItems.delete(itemId);\n      } else {\n        this._selectedItems.add(itemId);\n      }\n    } else {\n      // Single selection\n      this._selectedItems.clear();\n      this._selectedItems.add(itemId);\n    }\n\n    this._lastSelectedIndex = itemIndex;\n    this.updateItemElements();\n    this.dispatchSelectionChange(previousSelection);\n  }\n\n  private dispatchSelectionChange(previousSelection: Set<string>): void {\n    const selectedItems = this._items.filter(item =>\n      this._selectedItems.has(item.id)\n    );\n    const addedItems = this._items.filter(\n      item =>\n        this._selectedItems.has(item.id) && !previousSelection.has(item.id)\n    );\n    const removedItems = this._items.filter(\n      item =>\n        !this._selectedItems.has(item.id) && previousSelection.has(item.id)\n    );\n\n    dispatchCustomEvent<ListViewSelectionChangeEvent['detail']>(\n      this,\n      'listview-selection-change',\n      {\n        listViewId: this.id,\n        listView: this,\n        selectedItems,\n        selectedIds: Array.from(this._selectedItems),\n        addedItems,\n        removedItems,\n      }\n    );\n  }\n\n  private render(): void {\n    if (!this.shadowRoot) return;\n\n    this.renderHeader();\n    this.renderContent();\n  }\n\n  private renderHeader(): void {\n    if (this._viewMode !== 'details' || this._columns.length === 0) {\n      return;\n    }\n\n    const headerRow = this.shadowRoot?.querySelector('.listview-header-row');\n    if (!headerRow) return;\n\n    headerRow.innerHTML = '';\n\n    this._columns.forEach(column => {\n      const cell = document.createElement('div');\n      cell.className = 'listview-header-cell';\n      cell.textContent = column.label;\n      cell.dataset.columnId = column.id;\n\n      if (column.width) {\n        if (typeof column.width === 'number') {\n          cell.style.flex = `0 0 ${column.width}px`;\n        } else {\n          cell.style.flex = `0 0 ${column.width}`;\n        }\n      }\n\n      headerRow.appendChild(cell);\n    });\n  }\n\n  private renderContent(): void {\n    const itemsContainer = this.shadowRoot?.querySelector('.listview-items');\n    if (!itemsContainer) return;\n\n    itemsContainer.innerHTML = '';\n\n    if (this._items.length === 0) {\n      const emptyState = document.createElement('div');\n      emptyState.className = 'empty-state';\n      emptyState.textContent = 'No items to display';\n      itemsContainer.appendChild(emptyState);\n      return;\n    }\n\n    this._items.forEach(item => {\n      const itemElement = this.createItemElement(item);\n      itemsContainer.appendChild(itemElement);\n    });\n  }\n\n  private createItemElement(item: ListViewItem): HTMLElement {\n    const itemElement = document.createElement('div');\n    itemElement.className = 'listview-item';\n    itemElement.dataset.itemId = item.id;\n\n    if (item.disabled) {\n      itemElement.classList.add('disabled');\n    }\n\n    if (this._selectedItems.has(item.id)) {\n      itemElement.classList.add('selected');\n    }\n\n    if (this._viewMode === 'details' && this._columns.length > 0) {\n      this._columns.forEach(column => {\n        const cell = document.createElement('div');\n        cell.className = 'listview-item-cell';\n\n        if (column.width) {\n          if (typeof column.width === 'number') {\n            cell.style.flex = `0 0 ${column.width}px`;\n          } else {\n            cell.style.flex = `0 0 ${column.width}`;\n          }\n        }\n\n        let value = '';\n        if (column.id === 'label') {\n          value = item.label;\n        } else if (column.id === 'icon') {\n          value = item.icon || '';\n        } else if (item.data && item.data[column.id] !== undefined) {\n          value = item.data[column.id];\n        }\n\n        if (column.renderer) {\n          cell.innerHTML = column.renderer(item, value);\n        } else {\n          cell.textContent = String(value);\n        }\n\n        itemElement.appendChild(cell);\n      });\n    } else {\n      // List or Icons view\n      if (item.icon) {\n        const iconElement = document.createElement('span');\n        iconElement.className = 'listview-item-icon';\n        iconElement.textContent = item.icon;\n        itemElement.appendChild(iconElement);\n      }\n\n      const labelElement = document.createElement('span');\n      labelElement.className = 'listview-item-label';\n      labelElement.textContent = item.label;\n      itemElement.appendChild(labelElement);\n    }\n\n    return itemElement;\n  }\n\n  private updateItemElements(): void {\n    if (!this.shadowRoot) return;\n\n    const itemElements = this.shadowRoot.querySelectorAll('.listview-item');\n    itemElements.forEach(element => {\n      const itemId = (element as HTMLElement).dataset.itemId;\n      if (itemId) {\n        element.classList.toggle('selected', this._selectedItems.has(itemId));\n      }\n    });\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('listview');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    this.render();\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'view-mode':\n        this.viewMode = (newValue as ListViewMode) || 'list';\n        break;\n      case 'multi-select':\n        this.multiSelect = newValue !== null;\n        break;\n    }\n  }\n\n  // Properties\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n    this.applyTheme(value);\n  }\n\n  get items(): ListViewItem[] {\n    return [...this._items];\n  }\n\n  set items(value: ListViewItem[]) {\n    this._items = [...value];\n    this._selectedItems.clear();\n    this._lastSelectedIndex = -1;\n    if (this.isConnected) {\n      this.render();\n    }\n  }\n\n  get columns(): ListViewColumn[] {\n    return [...this._columns];\n  }\n\n  set columns(value: ListViewColumn[]) {\n    this._columns = [...value];\n    if (this.isConnected) {\n      this.render();\n    }\n  }\n\n  get viewMode(): ListViewMode {\n    return this._viewMode;\n  }\n\n  set viewMode(value: ListViewMode) {\n    this._viewMode = value;\n    this.setAttribute('view-mode', value);\n    if (this.isConnected) {\n      this.render();\n    }\n  }\n\n  get multiSelect(): boolean {\n    return this._multiSelect;\n  }\n\n  set multiSelect(value: boolean) {\n    this._multiSelect = value;\n    if (value) {\n      this.setAttribute('multi-select', '');\n    } else {\n      this.removeAttribute('multi-select');\n    }\n  }\n\n  get selectedItems(): ListViewItem[] {\n    return this._items.filter(item => this._selectedItems.has(item.id));\n  }\n\n  get selectedIds(): string[] {\n    return Array.from(this._selectedItems);\n  }\n\n  // Methods\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  selectItem(itemId: string): void {\n    if (!this._multiSelect) {\n      this._selectedItems.clear();\n    }\n    this._selectedItems.add(itemId);\n    this.updateItemElements();\n  }\n\n  deselectItem(itemId: string): void {\n    this._selectedItems.delete(itemId);\n    this.updateItemElements();\n  }\n\n  selectAll(): void {\n    if (!this._multiSelect) return;\n\n    this._items.forEach(item => {\n      if (!item.disabled) {\n        this._selectedItems.add(item.id);\n      }\n    });\n    this.updateItemElements();\n  }\n\n  deselectAll(): void {\n    this._selectedItems.clear();\n    this.updateItemElements();\n  }\n\n  toggleItemSelection(itemId: string): void {\n    if (this._selectedItems.has(itemId)) {\n      this.deselectItem(itemId);\n    } else {\n      this.selectItem(itemId);\n    }\n  }\n\n  setSelectedItems(itemIds: string[]): void {\n    const previousSelection = new Set(this._selectedItems);\n    this._selectedItems.clear();\n\n    itemIds.forEach(id => {\n      if (this._items.find(item => item.id === id)) {\n        this._selectedItems.add(id);\n      }\n    });\n\n    this.updateItemElements();\n    this.dispatchSelectionChange(previousSelection);\n  }\n\n  scrollToItem(itemId: string): void {\n    const itemElement = this.shadowRoot?.querySelector(\n      `[data-item-id=\"${itemId}\"]`\n    );\n    if (itemElement) {\n      itemElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  getItem(itemId: string): ListViewItem | undefined {\n    return this._items.find(item => item.id === itemId);\n  }\n\n  addItem(item: ListViewItem): void {\n    this._items.push(item);\n    if (this.isConnected) {\n      this.render();\n    }\n  }\n\n  removeItem(itemId: string): boolean {\n    const index = this._items.findIndex(item => item.id === itemId);\n    if (index !== -1) {\n      this._items.splice(index, 1);\n      this._selectedItems.delete(itemId);\n      if (this.isConnected) {\n        this.render();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  updateItem(itemId: string, updates: Partial<ListViewItem>): boolean {\n    const item = this._items.find(i => i.id === itemId);\n    if (item) {\n      Object.assign(item, updates);\n      if (this.isConnected) {\n        this.render();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  refresh(): void {\n    this.render();\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-list-view')) {\n  customElements.define('e2-list-view', ListView);\n}\n","/**\n * Notification Element\n * A toast notification component with theming and animation support\n */\n\nimport { EditorElementProperties, NotificationType, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class NotificationElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _timeoutId: number | null = null;\n  private _visible: boolean = false;\n  private _resolvePromise: (() => void) | null = null;\n  private _rejectPromise: ((reason?: any) => void) | null = null;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return [\n      'type',\n      'title',\n      'message',\n      'timeout',\n      'dismissible',\n      'persistent',\n      'theme',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --notification-bg: #ffffff;\n          --notification-border: #e0e0e0;\n          --notification-shadow: rgba(0, 0, 0, 0.1);\n          --notification-text: #333333;\n          --notification-title: #1a1a1a;\n          --notification-close-hover: #f0f0f0;\n          --notification-close-active: #e0e0e0;\n          --notification-icon-info: #3b82f6;\n          --notification-icon-success: #10b981;\n          --notification-icon-warning: #f59e0b;\n          --notification-icon-error: #ef4444;\n\n          display: block;\n          position: fixed;\n          z-index: 10000;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n\n          /* Default positioning - can be overridden by container */\n          top: 20px;\n          right: 20px;\n\n          /* Animation states */\n          opacity: 0;\n          transform: translateX(100%);\n          transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n          pointer-events: none;\n        }\n\n        :host(.visible) {\n          opacity: 1;\n          transform: translateX(0);\n          pointer-events: auto;\n        }\n\n        :host(.theme-dark) {\n          --notification-bg: #374151;\n          --notification-border: #4b5563;\n          --notification-text: #e5e7eb;\n          --notification-title: #f9fafb;\n          --notification-close-hover: #4b5563;\n          --notification-close-active: #6b7280;\n        }\n\n        .notification {\n          background: var(--notification-bg);\n          border: 1px solid var(--notification-border);\n          border-radius: 8px;\n          box-shadow: 0 4px 12px var(--notification-shadow);\n          padding: 16px;\n          min-width: 320px;\n          max-width: 480px;\n          display: flex;\n          align-items: flex-start;\n          gap: 12px;\n          position: relative;\n        }\n\n        .notification-icon {\n          flex-shrink: 0;\n          width: 20px;\n          height: 20px;\n          margin-top: 2px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 16px;\n        }\n\n        .notification-icon.type-info {\n          color: var(--notification-icon-info);\n        }\n\n        .notification-icon.type-success {\n          color: var(--notification-icon-success);\n        }\n\n        .notification-icon.type-warning {\n          color: var(--notification-icon-warning);\n        }\n\n        .notification-icon.type-error {\n          color: var(--notification-icon-error);\n        }\n\n        .notification-content {\n          flex: 1;\n          min-width: 0;\n        }\n\n        .notification-title {\n          color: var(--notification-title);\n          font-weight: 600;\n          margin: 0 0 4px 0;\n          font-size: 14px;\n          line-height: 1.4;\n        }\n\n        .notification-message {\n          color: var(--notification-text);\n          margin: 0;\n          font-size: 14px;\n          line-height: 1.4;\n          word-wrap: break-word;\n        }\n\n        .notification-close {\n          flex-shrink: 0;\n          background: none;\n          border: none;\n          color: var(--notification-text);\n          cursor: pointer;\n          padding: 4px;\n          border-radius: 4px;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 16px;\n          line-height: 1;\n          margin-top: -2px;\n          margin-right: -2px;\n        }\n\n        .notification-close:hover {\n          background: var(--notification-close-hover);\n        }\n\n        .notification-close:active {\n          background: var(--notification-close-active);\n        }\n\n        .notification-close:focus {\n          outline: 2px solid var(--notification-icon-info);\n          outline-offset: 1px;\n        }\n\n        :host([dismissible=\"false\"]) .notification-close {\n          display: none;\n        }\n\n        /* Progress bar for timed notifications */\n        .notification-progress {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          height: 3px;\n          background: var(--notification-icon-info);\n          border-radius: 0 0 8px 8px;\n          transition: width linear;\n          opacity: 0.6;\n        }\n\n        :host([type=\"success\"]) .notification-progress {\n          background: var(--notification-icon-success);\n        }\n\n        :host([type=\"warning\"]) .notification-progress {\n          background: var(--notification-icon-warning);\n        }\n\n        :host([type=\"error\"]) .notification-progress {\n          background: var(--notification-icon-error);\n        }\n\n        :host([timeout=\"0\"]) .notification-progress,\n        :host([persistent]) .notification-progress {\n          display: none;\n        }\n      </style>\n\n      <div class=\"notification\" part=\"notification\">\n        <div class=\"notification-icon\" part=\"icon\"></div>\n        <div class=\"notification-content\" part=\"content\">\n          <div class=\"notification-title\" part=\"title\"></div>\n          <div class=\"notification-message\" part=\"message\"></div>\n        </div>\n        <button class=\"notification-close\" part=\"close-button\" type=\"button\" aria-label=\"Close notification\">\n          ×\n        </button>\n        <div class=\"notification-progress\" part=\"progress\"></div>\n      </div>\n    `;\n\n    this.setupEventListeners();\n    this.updateContent();\n  }\n\n  private setupEventListeners(): void {\n    const closeButton = this.shadowRoot?.querySelector('.notification-close');\n    const notification = this.shadowRoot?.querySelector('.notification');\n\n    if (closeButton) {\n      closeButton.addEventListener('click', this.handleCloseClick.bind(this));\n    }\n\n    if (notification) {\n      notification.addEventListener(\n        'click',\n        this.handleNotificationClick.bind(this)\n      );\n    }\n  }\n\n  private handleCloseClick(event: Event): void {\n    event.stopPropagation();\n    this.dismiss();\n  }\n\n  private handleNotificationClick(): void {\n    dispatchCustomEvent(this, 'notification-click', {\n      notificationId: this.id,\n      notification: this,\n      type: this.type,\n    });\n  }\n\n  private updateContent(): void {\n    const shadowRoot = this.shadowRoot;\n    if (!shadowRoot) return;\n\n    const iconElement = shadowRoot.querySelector('.notification-icon');\n    const titleElement = shadowRoot.querySelector('.notification-title');\n    const messageElement = shadowRoot.querySelector('.notification-message');\n\n    if (iconElement) {\n      iconElement.className = `notification-icon type-${this.type}`;\n      iconElement.textContent = this.getIconForType(this.type);\n    }\n\n    if (titleElement) {\n      const title = this.title;\n      if (title) {\n        titleElement.textContent = title;\n        (titleElement as HTMLElement).style.display = 'block';\n      } else {\n        (titleElement as HTMLElement).style.display = 'none';\n      }\n    }\n\n    if (messageElement) {\n      messageElement.textContent = this.message;\n    }\n  }\n\n  private getIconForType(type: NotificationType): string {\n    switch (type) {\n      case 'success':\n        return '✓';\n      case 'warning':\n        return '⚠';\n      case 'error':\n        return '✕';\n      case 'info':\n      default:\n        return 'ℹ';\n    }\n  }\n\n  private startTimeout(): void {\n    this.clearTimeout();\n\n    const timeout = this.timeout;\n    if (timeout <= 0 || this.persistent) return;\n\n    const progressBar = this.shadowRoot?.querySelector(\n      '.notification-progress'\n    ) as HTMLElement;\n    if (progressBar) {\n      progressBar.style.width = '100%';\n      progressBar.style.transitionDuration = `${timeout}ms`;\n\n      // Animate progress bar\n      requestAnimationFrame(() => {\n        progressBar.style.width = '0%';\n      });\n    }\n\n    this._timeoutId = window.setTimeout(() => {\n      this.hide();\n    }, timeout);\n  }\n\n  private clearTimeout(): void {\n    if (this._timeoutId !== null) {\n      window.clearTimeout(this._timeoutId);\n      this._timeoutId = null;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('notification');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.clearTimeout();\n\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'type':\n      case 'title':\n      case 'message':\n        this.updateContent();\n        break;\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'timeout':\n      case 'persistent':\n        if (this._visible) {\n          this.startTimeout();\n        }\n        break;\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get type(): NotificationType {\n    return (this.getAttribute('type') as NotificationType) || 'info';\n  }\n\n  set type(value: NotificationType) {\n    this.setAttribute('type', value);\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || '';\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get message(): string {\n    return this.getAttribute('message') || 'This is a notification message.';\n  }\n\n  set message(value: string) {\n    this.setAttribute('message', value);\n  }\n\n  get timeout(): number {\n    return parseInt(this.getAttribute('timeout') || '5000', 10);\n  }\n\n  set timeout(value: number) {\n    this.setAttribute('timeout', value.toString());\n  }\n\n  get dismissible(): boolean {\n    return this.getAttribute('dismissible') !== 'false';\n  }\n\n  set dismissible(value: boolean) {\n    this.setAttribute('dismissible', value.toString());\n  }\n\n  get persistent(): boolean {\n    return this.hasAttribute('persistent');\n  }\n\n  set persistent(value: boolean) {\n    if (value) {\n      this.setAttribute('persistent', '');\n    } else {\n      this.removeAttribute('persistent');\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  /**\n   * Show the notification and return a promise that resolves when hidden\n   */\n  public show(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this._resolvePromise) {\n        // Already showing, reject the previous promise\n        this._rejectPromise?.(\n          new Error('Notification was replaced by another show() call')\n        );\n      }\n\n      this._resolvePromise = resolve;\n      this._rejectPromise = reject;\n\n      this._visible = true;\n      this.classList.add('visible');\n\n      dispatchCustomEvent(this, 'notification-show', {\n        notificationId: this.id,\n        notification: this,\n        type: this.type,\n      });\n\n      this.startTimeout();\n    });\n  }\n\n  /**\n   * Hide the notification with animation\n   */\n  public hide(): void {\n    if (!this._visible) return;\n\n    this._visible = false;\n    this.classList.remove('visible');\n    this.clearTimeout();\n\n    dispatchCustomEvent(this, 'notification-hide', {\n      notificationId: this.id,\n      notification: this,\n      type: this.type,\n    });\n\n    // Resolve the promise after animation completes\n    setTimeout(() => {\n      if (this._resolvePromise) {\n        this._resolvePromise();\n        this._resolvePromise = null;\n        this._rejectPromise = null;\n      }\n    }, 300); // Match CSS transition duration\n  }\n\n  /**\n   * Dismiss the notification (hide and remove from DOM if appropriate)\n   */\n  public dismiss(): void {\n    dispatchCustomEvent(this, 'notification-dismiss', {\n      notificationId: this.id,\n      notification: this,\n      type: this.type,\n    });\n\n    this.hide();\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-notification')) {\n  customElements.define('e2-notification', NotificationElement);\n}\n","/**\n * Notification Container Element\n * A container that manages positioning and lifecycle of notification toasts\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport type NotificationPosition =\n  | 'top-left'\n  | 'top-right'\n  | 'top-center'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'bottom-center';\n\nexport type StackDirection = 'up' | 'down';\n\nexport class NotificationContainerElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _observer: MutationObserver | null = null;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return [\n      'position',\n      'max-notifications',\n      'stack-direction',\n      'spacing',\n      'theme',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --container-spacing: 16px;\n          --notification-gap: 8px;\n\n          position: fixed;\n          z-index: 10000;\n          pointer-events: none;\n          display: flex;\n          flex-direction: column;\n          gap: var(--notification-gap);\n          max-width: calc(100vw - 40px);\n          max-height: calc(100vh - 40px);\n          overflow: hidden;\n        }\n\n        /* Position variants */\n        :host([position=\"top-left\"]) {\n          top: var(--container-spacing);\n          left: var(--container-spacing);\n          align-items: flex-start;\n        }\n\n        :host([position=\"top-right\"]) {\n          top: var(--container-spacing);\n          right: var(--container-spacing);\n          align-items: flex-end;\n        }\n\n        :host([position=\"top-center\"]) {\n          top: var(--container-spacing);\n          left: 50%;\n          transform: translateX(-50%);\n          align-items: center;\n        }\n\n        :host([position=\"bottom-left\"]) {\n          bottom: var(--container-spacing);\n          left: var(--container-spacing);\n          align-items: flex-start;\n          flex-direction: column-reverse;\n        }\n\n        :host([position=\"bottom-right\"]) {\n          bottom: var(--container-spacing);\n          right: var(--container-spacing);\n          align-items: flex-end;\n          flex-direction: column-reverse;\n        }\n\n        :host([position=\"bottom-center\"]) {\n          bottom: var(--container-spacing);\n          left: 50%;\n          transform: translateX(-50%);\n          align-items: center;\n          flex-direction: column-reverse;\n        }\n\n        /* Stack direction overrides */\n        :host([stack-direction=\"up\"]) {\n          flex-direction: column-reverse;\n        }\n\n        :host([stack-direction=\"down\"]) {\n          flex-direction: column;\n        }\n\n        /* Spacing control */\n        :host([spacing=\"small\"]) {\n          --notification-gap: 4px;\n        }\n\n        :host([spacing=\"medium\"]) {\n          --notification-gap: 8px;\n        }\n\n        :host([spacing=\"large\"]) {\n          --notification-gap: 16px;\n        }\n\n        ::slotted(e2-notification) {\n          pointer-events: auto;\n          position: static !important;\n          transform: none !important;\n          margin: 0;\n        }\n\n        /* Animation for notifications */\n        ::slotted(e2-notification:not(.visible)) {\n          opacity: 0;\n          transform: scale(0.9);\n          transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n        }\n\n        ::slotted(e2-notification.visible) {\n          opacity: 1;\n          transform: scale(1);\n        }\n\n        /* Stacking animations for top positions */\n        :host([position^=\"top\"]) ::slotted(e2-notification) {\n          animation: slideInFromTop 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n        }\n\n        /* Stacking animations for bottom positions */\n        :host([position^=\"bottom\"]) ::slotted(e2-notification) {\n          animation: slideInFromBottom 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n        }\n\n        @keyframes slideInFromTop {\n          from {\n            opacity: 0;\n            transform: translateY(-20px) scale(0.9);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0) scale(1);\n          }\n        }\n\n        @keyframes slideInFromBottom {\n          from {\n            opacity: 0;\n            transform: translateY(20px) scale(0.9);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0) scale(1);\n          }\n        }\n\n        /* Responsive adjustments */\n        @media (max-width: 640px) {\n          :host {\n            --container-spacing: 12px;\n            max-width: calc(100vw - 24px);\n          }\n\n          ::slotted(e2-notification) {\n            min-width: 280px;\n            max-width: calc(100vw - 24px);\n          }\n        }\n      </style>\n\n      <slot></slot>\n    `;\n\n    this.setupMutationObserver();\n  }\n\n  private setupMutationObserver(): void {\n    this._observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.type === 'childList') {\n          this.manageNotifications();\n          this.updateNotificationPositions();\n        }\n      });\n    });\n\n    this._observer.observe(this, {\n      childList: true,\n      subtree: false,\n    });\n  }\n\n  private manageNotifications(): void {\n    const notifications = this.querySelectorAll('e2-notification');\n    const maxNotifications = this.maxNotifications;\n\n    if (maxNotifications > 0 && notifications.length > maxNotifications) {\n      // Remove oldest notifications that exceed the limit\n      const excess = notifications.length - maxNotifications;\n      for (let i = 0; i < excess; i++) {\n        const notification = notifications[i] as any;\n        if (typeof notification.dismiss === 'function') {\n          notification.dismiss();\n        } else {\n          notification.remove();\n        }\n      }\n    }\n\n    // Dispatch container update event\n    dispatchCustomEvent(this, 'notification-container-update', {\n      containerId: this.id,\n      container: this,\n      position: this.position,\n      count: notifications.length,\n    });\n  }\n\n  private updateNotificationPositions(): void {\n    const notifications = this.querySelectorAll('e2-notification');\n\n    notifications.forEach((notification, index) => {\n      // Apply theme to notification if it matches container theme\n      if (\n        this._theme !== 'auto' &&\n        typeof (notification as any).applyTheme === 'function'\n      ) {\n        (notification as any).theme = this._theme;\n      }\n\n      // Apply z-index to ensure proper stacking\n      (notification as HTMLElement).style.zIndex = (\n        10000 +\n        notifications.length -\n        index\n      ).toString();\n    });\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('notification-container');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    this.updateNotificationPositions();\n  }\n\n  disconnectedCallback(): void {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._observer = null;\n    }\n\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'position':\n      case 'stack-direction':\n      case 'spacing':\n        // Handled by CSS attribute selectors\n        break;\n      case 'max-notifications':\n        this.manageNotifications();\n        break;\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        this.updateNotificationPositions();\n        break;\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  get position(): NotificationPosition {\n    return (\n      (this.getAttribute('position') as NotificationPosition) || 'top-right'\n    );\n  }\n\n  set position(value: NotificationPosition) {\n    this.setAttribute('position', value);\n  }\n\n  get maxNotifications(): number {\n    return parseInt(this.getAttribute('max-notifications') || '5', 10);\n  }\n\n  set maxNotifications(value: number) {\n    this.setAttribute('max-notifications', value.toString());\n  }\n\n  get stackDirection(): StackDirection {\n    return (this.getAttribute('stack-direction') as StackDirection) || 'down';\n  }\n\n  set stackDirection(value: StackDirection) {\n    this.setAttribute('stack-direction', value);\n  }\n\n  get spacing(): 'small' | 'medium' | 'large' {\n    return (\n      (this.getAttribute('spacing') as 'small' | 'medium' | 'large') || 'medium'\n    );\n  }\n\n  set spacing(value: 'small' | 'medium' | 'large') {\n    this.setAttribute('spacing', value);\n  }\n\n  /**\n   * Add a notification to this container\n   */\n  public addNotification(notification: HTMLElement): void {\n    this.appendChild(notification);\n  }\n\n  /**\n   * Remove a notification from this container\n   */\n  public removeNotification(notification: HTMLElement): void {\n    if (this.contains(notification)) {\n      this.removeChild(notification);\n    }\n  }\n\n  /**\n   * Clear all notifications from this container\n   */\n  public clear(): void {\n    const notifications = this.querySelectorAll('e2-notification');\n    notifications.forEach(notification => {\n      const notificationElement = notification as any;\n      if (typeof notificationElement.dismiss === 'function') {\n        notificationElement.dismiss();\n      } else {\n        notification.remove();\n      }\n    });\n  }\n\n  /**\n   * Get count of visible notifications\n   */\n  public getNotificationCount(): number {\n    return this.querySelectorAll('e2-notification').length;\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n    this.updateNotificationPositions();\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-notification-container')) {\n  customElements.define(\n    'e2-notification-container',\n    NotificationContainerElement\n  );\n}\n","/**\n * Collapsible Panel Element\n * A panel that can be collapsed to a thin bar with an expand button\n * or expanded to show its full content\n */\n\nimport {\n  CollapsiblePanelResizeEndEvent,\n  CollapsiblePanelResizeEvent,\n  CollapsiblePanelResizeStartEvent,\n  EditorElementProperties,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport type PanelOrientation = 'horizontal' | 'vertical';\n\nexport class CollapsiblePanel\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _collapsed: boolean = false;\n  private _orientation: PanelOrientation = 'vertical';\n  private _themeCleanup?: () => void;\n\n  // Resize properties\n  private _resizeLeft: boolean = false;\n  private _resizeRight: boolean = false;\n  private _resizeTop: boolean = false;\n  private _resizeBottom: boolean = false;\n  private _minWidth: number = 100;\n  private _maxWidth: number = 800;\n  private _minHeight: number = 100;\n  private _maxHeight: number = 600;\n\n  // Resize state\n  private _resizing: boolean = false;\n  private _resizeEdge: 'left' | 'right' | 'top' | 'bottom' | null = null;\n  private _startPosition: { x: number; y: number } = { x: 0, y: 0 };\n  private _startSize: { width: number; height: number } = {\n    width: 0,\n    height: 0,\n  };\n  private _storedSize: { width: number; height: number } | null = null;\n\n  static get observedAttributes(): string[] {\n    return [\n      'theme',\n      'disabled',\n      'collapsed',\n      'orientation',\n      'resize-left',\n      'resize-right',\n      'resize-top',\n      'resize-bottom',\n      'min-width',\n      'max-width',\n      'min-height',\n      'max-height',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          background: var(--panel-bg, #ffffff);\n          border: 1px solid var(--panel-border, #ccc);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n        }\n\n        :host(.theme-dark) {\n          background: var(--panel-bg-dark, #2d2d2d);\n          border-color: var(--panel-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Vertical orientation (default) */\n        :host([orientation=\"vertical\"]) {\n          min-height: 200px;\n        }\n\n        :host([orientation=\"vertical\"][collapsed]) {\n          min-height: 32px;\n          height: 32px !important;\n          overflow: hidden;\n        }\n\n        /* Horizontal orientation */\n        :host([orientation=\"horizontal\"]) {\n          min-width: 200px;\n          display: inline-block;\n          vertical-align: top;\n        }\n\n        :host([orientation=\"horizontal\"][collapsed]) {\n          min-width: 32px;\n          width: 32px !important;\n          overflow: hidden;\n        }\n\n        .panel-header {\n          display: flex;\n          align-items: center;\n          padding: 8px;\n          background: var(--panel-header-bg, #f8f8f8);\n          border-bottom: 1px solid var(--panel-border, #ccc);\n          min-height: 16px;\n          cursor: pointer;\n          user-select: none;\n        }\n\n        :host(.theme-dark) .panel-header {\n          background: var(--panel-header-bg-dark, #3a3a3a);\n          border-bottom-color: var(--panel-border-dark, #555);\n        }\n\n        .panel-header:hover {\n          background: var(--panel-header-hover-bg, #e8e8e8);\n        }\n\n        :host(.theme-dark) .panel-header:hover {\n          background: var(--panel-header-hover-bg-dark, #404040);\n        }\n\n        .toggle-button {\n          width: 16px;\n          height: 16px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 12px;\n          margin-right: 8px;\n          flex-shrink: 0;\n        }\n\n        .burger-icon::before {\n          content: var(--panel-collapsed-icon, \"☰\");\n        }\n\n        .close-icon::before {\n          content: var(--panel-expanded-icon, \"✕\");\n        }\n\n        /* Vertical orientation icons */\n        :host([orientation=\"vertical\"]) .toggle-button .burger-icon {\n          display: none;\n        }\n\n        :host([orientation=\"vertical\"]) .toggle-button .close-icon {\n          display: block;\n        }\n\n        :host([orientation=\"vertical\"][collapsed]) .toggle-button .burger-icon {\n          display: block;\n        }\n\n        :host([orientation=\"vertical\"][collapsed]) .toggle-button .close-icon {\n          display: none;\n        }\n\n        /* Horizontal orientation icons */\n        :host([orientation=\"horizontal\"]) .toggle-button .burger-icon {\n          display: none;\n        }\n\n        :host([orientation=\"horizontal\"]) .toggle-button .close-icon {\n          display: block;\n        }\n\n        :host([orientation=\"horizontal\"][collapsed]) .toggle-button .burger-icon {\n          display: block;\n        }\n\n        :host([orientation=\"horizontal\"][collapsed]) .toggle-button .close-icon {\n          display: none;\n        }\n\n        /* Rotate icons for horizontal orientation */\n        :host([orientation=\"horizontal\"]) .toggle-button {\n          transform: rotate(90deg);\n        }\n\n        .panel-title {\n          flex-grow: 1;\n          font-weight: 500;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        /* Hide title when collapsed */\n        :host([collapsed]) .panel-title {\n          display: none;\n        }\n\n        .panel-content {\n          padding: var(--panel-padding, 12px);\n          overflow: auto;\n          box-sizing: border-box;\n          height: calc(100% - 32px); /* Account for header height */\n        }\n\n        :host([collapsed]) .panel-content {\n          display: none;\n        }\n\n        /* Content slot styling */\n        ::slotted(*) {\n          display: block;\n        }\n\n        /* Resize handles */\n        :host([resize-left]:not([collapsed])) {\n          border-left-width: 4px;\n          border-left-color: var(--resize-handle-color, #999);\n        }\n\n        :host([resize-right]:not([collapsed])) {\n          border-right-width: 4px;\n          border-right-color: var(--resize-handle-color, #999);\n        }\n\n        :host([resize-top]:not([collapsed])) {\n          border-top-width: 4px;\n          border-top-color: var(--resize-handle-color, #999);\n        }\n\n        :host([resize-bottom]:not([collapsed])) {\n          border-bottom-width: 4px;\n          border-bottom-color: var(--resize-handle-color, #999);\n        }\n\n        /* Dark theme resize handles */\n        :host(.theme-dark[resize-left]:not([collapsed])) {\n          border-left-color: var(--resize-handle-color-dark, #666);\n        }\n\n        :host(.theme-dark[resize-right]:not([collapsed])) {\n          border-right-color: var(--resize-handle-color-dark, #666);\n        }\n\n        :host(.theme-dark[resize-top]:not([collapsed])) {\n          border-top-color: var(--resize-handle-color-dark, #666);\n        }\n\n        :host(.theme-dark[resize-bottom]:not([collapsed])) {\n          border-bottom-color: var(--resize-handle-color-dark, #666);\n        }\n\n        /* Resize cursors - will be handled by JavaScript for edge detection */\n\n        /* Disable resize cursors when dragging */\n        :host(.resizing) {\n          user-select: none;\n        }\n\n        :host(.resizing) * {\n          user-select: none;\n          pointer-events: none;\n        }\n      </style>\n\n      <div class=\"panel-header\">\n        <div class=\"toggle-button\">\n          <span class=\"burger-icon\"></span>\n          <span class=\"close-icon\"></span>\n        </div>\n        <div class=\"panel-title\">\n          <slot name=\"title\">Panel</slot>\n        </div>\n      </div>\n\n      <div class=\"panel-content\">\n        <slot></slot>\n      </div>\n    `;\n\n    // Add click handler for the header\n    const header = shadowRoot.querySelector('.panel-header') as HTMLElement;\n    header.addEventListener('click', this.handleToggle.bind(this));\n\n    // Add resize event handlers\n    this.addEventListener('mousedown', this.handleMouseDown.bind(this));\n    this.addEventListener('mousemove', this.handleMouseMove.bind(this));\n    this.addEventListener('mouseup', this.handleMouseUp.bind(this));\n    this.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('collapsible-panel');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'collapsed':\n        const wasCollapsed = this._collapsed;\n        this._collapsed = newValue !== null;\n        this.handleCollapsedChange(wasCollapsed);\n        break;\n      case 'orientation':\n        this._orientation = (newValue as PanelOrientation) || 'vertical';\n        break;\n      case 'resize-left':\n        this._resizeLeft = newValue !== null;\n        break;\n      case 'resize-right':\n        this._resizeRight = newValue !== null;\n        break;\n      case 'resize-top':\n        this._resizeTop = newValue !== null;\n        break;\n      case 'resize-bottom':\n        this._resizeBottom = newValue !== null;\n        break;\n      case 'min-width':\n        this._minWidth = parseFloat(newValue) || 100;\n        break;\n      case 'max-width':\n        this._maxWidth = parseFloat(newValue) || 800;\n        break;\n      case 'min-height':\n        this._minHeight = parseFloat(newValue) || 100;\n        break;\n      case 'max-height':\n        this._maxHeight = parseFloat(newValue) || 600;\n        break;\n    }\n  }\n\n  private handleToggle(): void {\n    this.collapsed = !this.collapsed;\n\n    // Dispatch toggle event\n    dispatchCustomEvent(this, 'collapsible-panel-toggle', {\n      panelId: this.id,\n      panel: this,\n      collapsed: this.collapsed,\n      orientation: this.orientation,\n    });\n  }\n\n  private handleCollapsedChange(wasCollapsed: boolean): void {\n    if (this._collapsed && !wasCollapsed) {\n      // Panel is being collapsed - store current size\n      this._storedSize = {\n        width: this.offsetWidth,\n        height: this.offsetHeight,\n      };\n    } else if (!this._collapsed && wasCollapsed && this._storedSize) {\n      // Panel is being expanded - restore stored size\n      requestAnimationFrame(() => {\n        if (this._storedSize) {\n          this.style.width = `${this._storedSize.width}px`;\n          this.style.height = `${this._storedSize.height}px`;\n        }\n      });\n    }\n  }\n\n  private handleMouseDown(event: MouseEvent): void {\n    if (this._collapsed) return;\n\n    const resizeEdge = this.getResizeEdge(event);\n    if (!resizeEdge) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    this._resizing = true;\n    this._resizeEdge = resizeEdge;\n    this._startPosition = { x: event.clientX, y: event.clientY };\n    this._startSize = {\n      width: this.offsetWidth,\n      height: this.offsetHeight,\n    };\n\n    this.classList.add('resizing');\n    document.body.style.cursor = this.getCursorForEdge(resizeEdge);\n\n    // Add global mouse events\n    document.addEventListener(\n      'mousemove',\n      this.handleDocumentMouseMove.bind(this)\n    );\n    document.addEventListener('mouseup', this.handleDocumentMouseUp.bind(this));\n\n    // Dispatch resize start event\n    dispatchCustomEvent<CollapsiblePanelResizeStartEvent['detail']>(\n      this,\n      'collapsible-panel-resize-start',\n      {\n        panelId: this.id,\n        panel: this,\n        startWidth: this._startSize.width,\n        startHeight: this._startSize.height,\n        edge: resizeEdge,\n      }\n    );\n  }\n\n  private handleMouseMove(event: MouseEvent): void {\n    if (this._resizing || this._collapsed) return;\n\n    const resizeEdge = this.getResizeEdge(event);\n    if (resizeEdge) {\n      this.style.cursor = this.getCursorForEdge(resizeEdge);\n    } else {\n      this.style.cursor = '';\n    }\n  }\n\n  private handleMouseUp(event: MouseEvent): void {\n    if (!this._resizing) return;\n    this.endResize(event);\n  }\n\n  private handleMouseLeave(event: MouseEvent): void {\n    if (!this._resizing) {\n      this.style.cursor = '';\n    }\n  }\n\n  private handleDocumentMouseMove(event: MouseEvent): void {\n    if (!this._resizing || !this._resizeEdge) return;\n\n    event.preventDefault();\n\n    const deltaX = event.clientX - this._startPosition.x;\n    const deltaY = event.clientY - this._startPosition.y;\n\n    let newWidth = this._startSize.width;\n    let newHeight = this._startSize.height;\n\n    switch (this._resizeEdge) {\n      case 'left':\n        newWidth = Math.max(\n          this._minWidth,\n          Math.min(this._maxWidth, this._startSize.width - deltaX)\n        );\n        break;\n      case 'right':\n        newWidth = Math.max(\n          this._minWidth,\n          Math.min(this._maxWidth, this._startSize.width + deltaX)\n        );\n        break;\n      case 'top':\n        newHeight = Math.max(\n          this._minHeight,\n          Math.min(this._maxHeight, this._startSize.height - deltaY)\n        );\n        break;\n      case 'bottom':\n        newHeight = Math.max(\n          this._minHeight,\n          Math.min(this._maxHeight, this._startSize.height + deltaY)\n        );\n        break;\n    }\n\n    // Apply size constraints based on orientation\n    if (this._orientation === 'horizontal') {\n      // Horizontal panels expand/collapse horizontally, so they can only be resized horizontally (width changes)\n      if (this._resizeEdge === 'left' || this._resizeEdge === 'right') {\n        this.style.width = `${newWidth}px`;\n      }\n    } else {\n      // Vertical panels expand/collapse vertically, so they can only be resized vertically (height changes)\n      if (this._resizeEdge === 'top' || this._resizeEdge === 'bottom') {\n        this.style.height = `${newHeight}px`;\n      }\n    }\n\n    // Dispatch resize event\n    dispatchCustomEvent<CollapsiblePanelResizeEvent['detail']>(\n      this,\n      'collapsible-panel-resize',\n      {\n        panelId: this.id,\n        panel: this,\n        width: newWidth,\n        height: newHeight,\n        edge: this._resizeEdge,\n      }\n    );\n  }\n\n  private handleDocumentMouseUp(event: MouseEvent): void {\n    if (!this._resizing) return;\n    this.endResize(event);\n  }\n\n  private endResize(event: MouseEvent): void {\n    if (!this._resizing || !this._resizeEdge) return;\n\n    const finalWidth = this.offsetWidth;\n    const finalHeight = this.offsetHeight;\n    const edge = this._resizeEdge;\n\n    this._resizing = false;\n    this._resizeEdge = null;\n    this.classList.remove('resizing');\n    document.body.style.cursor = '';\n\n    // Remove global mouse events\n    document.removeEventListener(\n      'mousemove',\n      this.handleDocumentMouseMove.bind(this)\n    );\n    document.removeEventListener(\n      'mouseup',\n      this.handleDocumentMouseUp.bind(this)\n    );\n\n    // Update stored size\n    this._storedSize = { width: finalWidth, height: finalHeight };\n\n    // Dispatch resize end event\n    dispatchCustomEvent<CollapsiblePanelResizeEndEvent['detail']>(\n      this,\n      'collapsible-panel-resize-end',\n      {\n        panelId: this.id,\n        panel: this,\n        finalWidth,\n        finalHeight,\n        edge,\n      }\n    );\n  }\n\n  private getResizeEdge(\n    event: MouseEvent\n  ): 'left' | 'right' | 'top' | 'bottom' | null {\n    const rect = this.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const edgeSize = 4; // Size of resize handle\n\n    // Check each edge if it's enabled and allowed for the orientation\n    if (this._orientation === 'vertical') {\n      // Vertical panels expand/collapse vertically, so they can only be resized vertically (top/bottom edges)\n      if (this._resizeTop && y <= edgeSize) {\n        return 'top';\n      }\n      if (this._resizeBottom && y >= rect.height - edgeSize) {\n        return 'bottom';\n      }\n    } else {\n      // Horizontal panels expand/collapse horizontally, so they can only be resized horizontally (left/right edges)\n      if (this._resizeLeft && x <= edgeSize) {\n        return 'left';\n      }\n      if (this._resizeRight && x >= rect.width - edgeSize) {\n        return 'right';\n      }\n    }\n\n    return null;\n  }\n\n  private getCursorForEdge(edge: 'left' | 'right' | 'top' | 'bottom'): string {\n    switch (edge) {\n      case 'left':\n      case 'right':\n        return 'ew-resize';\n      case 'top':\n      case 'bottom':\n        return 'ns-resize';\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n\n  set collapsed(value: boolean) {\n    this._collapsed = value;\n    if (value) {\n      this.setAttribute('collapsed', '');\n    } else {\n      this.removeAttribute('collapsed');\n    }\n  }\n\n  get orientation(): PanelOrientation {\n    return this._orientation;\n  }\n\n  set orientation(value: PanelOrientation) {\n    this._orientation = value;\n    this.setAttribute('orientation', value);\n  }\n\n  toggle(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  expand(): void {\n    this.collapsed = false;\n  }\n\n  collapse(): void {\n    this.collapsed = true;\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  // Resize API\n  get resizeLeft(): boolean {\n    return this._resizeLeft;\n  }\n\n  set resizeLeft(value: boolean) {\n    this._resizeLeft = value;\n    this.toggleAttribute('resize-left', value);\n  }\n\n  get resizeRight(): boolean {\n    return this._resizeRight;\n  }\n\n  set resizeRight(value: boolean) {\n    this._resizeRight = value;\n    this.toggleAttribute('resize-right', value);\n  }\n\n  get resizeTop(): boolean {\n    return this._resizeTop;\n  }\n\n  set resizeTop(value: boolean) {\n    this._resizeTop = value;\n    this.toggleAttribute('resize-top', value);\n  }\n\n  get resizeBottom(): boolean {\n    return this._resizeBottom;\n  }\n\n  set resizeBottom(value: boolean) {\n    this._resizeBottom = value;\n    this.toggleAttribute('resize-bottom', value);\n  }\n\n  get minWidth(): number {\n    return this._minWidth;\n  }\n\n  set minWidth(value: number) {\n    this._minWidth = value;\n    this.setAttribute('min-width', value.toString());\n  }\n\n  get maxWidth(): number {\n    return this._maxWidth;\n  }\n\n  set maxWidth(value: number) {\n    this._maxWidth = value;\n    this.setAttribute('max-width', value.toString());\n  }\n\n  get minHeight(): number {\n    return this._minHeight;\n  }\n\n  set minHeight(value: number) {\n    this._minHeight = value;\n    this.setAttribute('min-height', value.toString());\n  }\n\n  get maxHeight(): number {\n    return this._maxHeight;\n  }\n\n  set maxHeight(value: number) {\n    this._maxHeight = value;\n    this.setAttribute('max-height', value.toString());\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-collapsible-panel')) {\n  customElements.define('e2-collapsible-panel', CollapsiblePanel);\n}\n","/**\n * Split Panel Element\n * A single panel within a split panel container that can be resized\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  generateId,\n  getShadowRoot,\n  notifyThemeChange,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class SplitPanel extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _size: number = 50; // percentage\n  private _minSize: number = 10; // percentage\n  private _maxSize: number = 90; // percentage\n  private _resizable: boolean = true;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'size', 'min-size', 'max-size', 'resizable'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          background: var(--panel-bg, #ffffff);\n          border: 1px solid var(--panel-border, #e0e0e0);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          overflow: hidden;\n          box-sizing: border-box;\n        }\n\n        :host(.theme-dark) {\n          background: var(--panel-bg-dark, #2d2d2d);\n          border-color: var(--panel-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .panel-content {\n          width: 100%;\n          height: 100%;\n          overflow: auto;\n          box-sizing: border-box;\n          padding: var(--panel-padding, 8px);\n        }\n\n        /* Content slot styling */\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n\n      <div class=\"panel-content\">\n        <slot></slot>\n      </div>\n    `;\n\n    // Set up event listeners\n    this.addEventListener('resize', this.handleResize.bind(this));\n  }\n\n  connectedCallback(): void {\n    // Generate ID if not provided\n    if (!this.id) {\n      this.id = generateId('split-panel');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // Clean up existing theme inheritance when explicit theme is set\n        if (this._themeCleanup) {\n          this._themeCleanup();\n          this._themeCleanup = undefined;\n        }\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'size':\n        this._size = parseFloat(newValue || '50');\n        this.updateSize();\n        break;\n      case 'min-size':\n        this._minSize = parseFloat(newValue || '10');\n        break;\n      case 'max-size':\n        this._maxSize = parseFloat(newValue || '90');\n        break;\n      case 'resizable':\n        this._resizable = newValue !== 'false';\n        break;\n      case 'disabled':\n        this.toggleAttribute('disabled', newValue !== null);\n        break;\n    }\n  }\n\n  private handleResize(): void {\n    // Handle resize events from the container\n    this.updateSize();\n  }\n\n  private updateSize(): void {\n    // The container will handle the actual sizing via CSS\n    // This method can be used for cleanup or notifications\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n    // Notify child elements of theme change\n    notifyThemeChange(this, value);\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  set size(value: number) {\n    this.setAttribute('size', value.toString());\n  }\n\n  get minSize(): number {\n    return this._minSize;\n  }\n\n  set minSize(value: number) {\n    this.setAttribute('min-size', value.toString());\n  }\n\n  get maxSize(): number {\n    return this._maxSize;\n  }\n\n  set maxSize(value: number) {\n    this.setAttribute('max-size', value.toString());\n  }\n\n  get resizable(): boolean {\n    return this._resizable;\n  }\n\n  set resizable(value: boolean) {\n    this.setAttribute('resizable', value.toString());\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  // Utility method to get the current computed size\n  getCurrentSize(): number {\n    const container = this.parentElement;\n    if (!container) return this._size;\n\n    const isVertical = container.getAttribute('orientation') === 'vertical';\n\n    if (isVertical) {\n      const containerHeight = container.clientHeight;\n      const thisHeight = this.clientHeight;\n      return (thisHeight / containerHeight) * 100;\n    } else {\n      const containerWidth = container.clientWidth;\n      const thisWidth = this.clientWidth;\n      return (thisWidth / containerWidth) * 100;\n    }\n  }\n}\n\n// Register the element\nif (!customElements.get('e2-split-panel')) {\n  customElements.define('e2-split-panel', SplitPanel);\n}\n\nexport default SplitPanel;\n","/**\n * Split Panel Container Element\n * A container that manages multiple resizable split panels with drag handles\n */\n\nimport {\n  EditorElementProperties,\n  SplitPanelOrientation,\n  SplitPanelResizeEndEvent,\n  SplitPanelResizeEvent,\n  SplitPanelResizeStartEvent,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  debounce,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  notifyThemeChange,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class SplitPanelContainer\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _orientation: SplitPanelOrientation = 'horizontal';\n  private _resizing: boolean = false;\n  private _activePanel: HTMLElement | null = null;\n  private _startPosition: number = 0;\n  private _startSize: number = 0;\n  private _nextPanelStartSize: number = 0;\n  private _updatingPanelSizes: boolean = false;\n  private _themeCleanup?: () => void;\n\n  private debouncedResize = debounce(this.handleResize.bind(this), 16);\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'orientation'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.bindEvents();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          position: relative;\n          width: 100%;\n          height: 100%;\n          min-height: 200px;\n          background: var(--container-bg, #f5f5f5);\n          font-family: var(--font-family, system-ui, sans-serif);\n          overflow: hidden;\n          box-sizing: border-box;\n        }\n\n        :host(.theme-dark) {\n          background: var(--container-bg-dark, #1e1e1e);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Horizontal layout (side by side) */\n        :host([orientation=\"horizontal\"]) {\n          flex-direction: row;\n        }\n\n        /* Vertical layout (stacked) */\n        :host([orientation=\"vertical\"]) {\n          flex-direction: column;\n        }\n\n        /* Panel styling */\n        ::slotted(e2-split-panel) {\n          flex-shrink: 0;\n          overflow: hidden;\n          position: relative;\n        }\n\n        /* Add spacing for handles and visual separators */\n        ::slotted(e2-split-panel:not(:last-child)) {\n          border-right: var(--handle-size, 4px) solid var(--handle-bg, #ccc);\n        }\n\n        :host([orientation=\"vertical\"]) ::slotted(e2-split-panel:not(:last-child)) {\n          border-right: none;\n          border-bottom: var(--handle-size, 4px) solid var(--handle-bg, #ccc);\n        }\n\n        :host(.theme-dark) ::slotted(e2-split-panel:not(:last-child)) {\n          border-right-color: var(--handle-bg-dark, #555);\n        }\n\n        :host([orientation=\"vertical\"].theme-dark) ::slotted(e2-split-panel:not(:last-child)) {\n          border-bottom-color: var(--handle-bg-dark, #555);\n        }\n\n        /* No user selection during drag */\n        :host(.dragging) {\n          user-select: none;\n        }\n\n        :host(.dragging) ::slotted(*) {\n          user-select: none;\n          pointer-events: none;\n        }\n      </style>\n\n      <slot></slot>\n    `;\n  }\n\n  private bindEvents(): void {\n    // Handle mouse events for resizing\n    this.addEventListener('mousedown', this.handleMouseDown.bind(this));\n    this.addEventListener('mousemove', this.handleMouseMove.bind(this));\n    this.addEventListener('mouseup', this.handleMouseUp.bind(this));\n    this.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n\n    // Handle window resize\n    window.addEventListener('resize', this.debouncedResize);\n\n    // Don't listen to slotchange to avoid infinite loops\n    // Instead, we'll rely on the initial setup and manual updates\n  }\n\n  connectedCallback(): void {\n    // Generate ID if not provided\n    if (!this.id) {\n      this.id = generateId('split-panel-container');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Initial setup\n    setTimeout(() => {\n      this.updateHandles();\n      this.updatePanelSizes();\n    }, 0);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener('resize', this.debouncedResize);\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // Clean up existing theme inheritance when explicit theme is set\n        if (this._themeCleanup) {\n          this._themeCleanup();\n          this._themeCleanup = undefined;\n        }\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'orientation':\n        this._orientation = (newValue as SplitPanelOrientation) || 'horizontal';\n        this.updateHandles();\n        this.updatePanelSizes();\n        break;\n      case 'disabled':\n        this.toggleAttribute('disabled', newValue !== null);\n        break;\n    }\n  }\n\n  private updateHandles(): void {\n    // Do nothing - we're using CSS borders as visual handles\n    // and mouse event delegation for interaction\n  }\n\n  private updatePanelSizes(): void {\n    // Prevent infinite recursion\n    if (this._updatingPanelSizes) return;\n    this._updatingPanelSizes = true;\n\n    try {\n      const panels = this.getPanels();\n      if (panels.length === 0) return;\n\n      // Calculate total available space\n      const containerRect = this.getBoundingClientRect();\n      const handleSize = parseInt(\n        getComputedStyle(this).getPropertyValue('--handle-size') || '4'\n      );\n      const totalHandles = panels.length - 1;\n      const totalHandleSpace = totalHandles * handleSize;\n\n      const availableSpace =\n        this._orientation === 'horizontal'\n          ? containerRect.width - totalHandleSpace\n          : containerRect.height - totalHandleSpace;\n\n      // Calculate default sizes if not set\n      let totalSetSize = 0;\n      let unsetPanels = 0;\n\n      panels.forEach(panel => {\n        const size = parseFloat(panel.getAttribute('size') || '0');\n        if (size > 0) {\n          totalSetSize += size;\n        } else {\n          unsetPanels++;\n        }\n      });\n\n      const remainingPercentage = Math.max(0, 100 - totalSetSize);\n      const defaultSize =\n        unsetPanels > 0 ? remainingPercentage / unsetPanels : 0;\n\n      // Apply sizes\n      panels.forEach(panel => {\n        let size = parseFloat(panel.getAttribute('size') || '0');\n        if (size <= 0) {\n          size = defaultSize;\n          // Only set attribute if it's actually different to avoid recursive calls\n          const currentSize = panel.getAttribute('size');\n          if (currentSize !== size.toString()) {\n            panel.setAttribute('size', size.toString());\n          }\n        }\n\n        const actualSize = (size / 100) * availableSpace;\n\n        if (this._orientation === 'horizontal') {\n          panel.style.width = `${actualSize}px`;\n          panel.style.height = '100%';\n          panel.style.flexBasis = `${actualSize}px`;\n        } else {\n          panel.style.height = `${actualSize}px`;\n          panel.style.width = '100%';\n          panel.style.flexBasis = `${actualSize}px`;\n        }\n      });\n    } finally {\n      this._updatingPanelSizes = false;\n    }\n  }\n\n  private handleMouseDown(event: MouseEvent): void {\n    const panels = this.getPanels();\n    if (panels.length < 2) return;\n\n    // Find which panel border we're on\n    let panelIndex = -1;\n    let currentPanel: HTMLElement | null = null;\n    let nextPanel: HTMLElement | null = null;\n\n    const handleSize = parseInt(\n      getComputedStyle(this).getPropertyValue('--handle-size') || '4'\n    );\n\n    for (let i = 0; i < panels.length - 1; i++) {\n      const panel = panels[i];\n      const rect = panel.getBoundingClientRect();\n      const containerRect = this.getBoundingClientRect();\n\n      const relativeX = event.clientX - containerRect.left;\n      const relativeY = event.clientY - containerRect.top;\n\n      let onBorder = false;\n\n      if (this._orientation === 'horizontal') {\n        // Check if we're on the right border of this panel (border is part of the panel)\n        const borderStart = rect.right - containerRect.left - handleSize;\n        const borderEnd = rect.right - containerRect.left;\n        onBorder = relativeX >= borderStart && relativeX <= borderEnd;\n      } else {\n        // Check if we're on the bottom border of this panel (border is part of the panel)\n        const borderStart = rect.bottom - containerRect.top - handleSize;\n        const borderEnd = rect.bottom - containerRect.top;\n        onBorder = relativeY >= borderStart && relativeY <= borderEnd;\n      }\n\n      if (onBorder) {\n        panelIndex = i;\n        currentPanel = panels[i];\n        nextPanel = panels[i + 1];\n        break;\n      }\n    }\n\n    if (panelIndex === -1 || !currentPanel || !nextPanel) return;\n\n    event.preventDefault();\n\n    this._resizing = true;\n    this._activePanel = currentPanel;\n    this._startPosition =\n      this._orientation === 'horizontal' ? event.clientX : event.clientY;\n    this._startSize = parseFloat(currentPanel.getAttribute('size') || '50');\n    this._nextPanelStartSize = parseFloat(\n      nextPanel.getAttribute('size') || '50'\n    );\n\n    this.classList.add('dragging');\n\n    // Update cursor\n    this.style.cursor =\n      this._orientation === 'horizontal' ? 'col-resize' : 'row-resize';\n\n    // Dispatch resize start event\n    dispatchCustomEvent<SplitPanelResizeStartEvent['detail']>(\n      this,\n      'split-panel-resize-start',\n      {\n        containerId: this.id,\n        container: this,\n        panelId: currentPanel.id,\n        panel: currentPanel,\n        startSize: this._startSize,\n      }\n    );\n  }\n\n  private handleMouseMove(event: MouseEvent): void {\n    // Handle dragging if currently resizing\n    if (this._resizing && this._activePanel) {\n      event.preventDefault();\n\n      const currentPosition =\n        this._orientation === 'horizontal' ? event.clientX : event.clientY;\n      const delta = currentPosition - this._startPosition;\n\n      const containerRect = this.getBoundingClientRect();\n      const containerSize =\n        this._orientation === 'horizontal'\n          ? containerRect.width\n          : containerRect.height;\n\n      const deltaPercentage = (delta / containerSize) * 100;\n\n      const panels = this.getPanels();\n      const currentIndex = panels.indexOf(this._activePanel);\n      const nextPanel = panels[currentIndex + 1];\n\n      if (!nextPanel) return;\n\n      const newCurrentSize = Math.max(\n        parseFloat(this._activePanel.getAttribute('min-size') || '10'),\n        Math.min(\n          parseFloat(this._activePanel.getAttribute('max-size') || '90'),\n          this._startSize + deltaPercentage\n        )\n      );\n\n      const newNextSize = Math.max(\n        parseFloat(nextPanel.getAttribute('min-size') || '10'),\n        Math.min(\n          parseFloat(nextPanel.getAttribute('max-size') || '90'),\n          this._nextPanelStartSize - deltaPercentage\n        )\n      );\n\n      // Update panel sizes\n      this._activePanel.setAttribute('size', newCurrentSize.toString());\n      nextPanel.setAttribute('size', newNextSize.toString());\n\n      this.updatePanelSizes();\n\n      // Dispatch resize event\n      dispatchCustomEvent<SplitPanelResizeEvent['detail']>(\n        this,\n        'split-panel-resize',\n        {\n          containerId: this.id,\n          container: this,\n          panelId: this._activePanel.id,\n          panel: this._activePanel,\n          size: newCurrentSize,\n          minSize: parseFloat(\n            this._activePanel.getAttribute('min-size') || '10'\n          ),\n          maxSize: parseFloat(\n            this._activePanel.getAttribute('max-size') || '90'\n          ),\n        }\n      );\n    } else {\n      // Handle hover cursor when not dragging\n      this.updateHoverCursor(event);\n    }\n  }\n\n  private updateHoverCursor(event: MouseEvent): void {\n    const panels = this.getPanels();\n    if (panels.length < 2) {\n      this.style.cursor = '';\n      return;\n    }\n\n    const handleSize = parseInt(\n      getComputedStyle(this).getPropertyValue('--handle-size') || '4'\n    );\n\n    let overHandle = false;\n\n    for (let i = 0; i < panels.length - 1; i++) {\n      const panel = panels[i];\n      const rect = panel.getBoundingClientRect();\n      const containerRect = this.getBoundingClientRect();\n\n      const relativeX = event.clientX - containerRect.left;\n      const relativeY = event.clientY - containerRect.top;\n\n      if (this._orientation === 'horizontal') {\n        // Check if we're on the right border of this panel (border is part of the panel)\n        const borderStart = rect.right - containerRect.left - handleSize;\n        const borderEnd = rect.right - containerRect.left;\n        if (relativeX >= borderStart && relativeX <= borderEnd) {\n          overHandle = true;\n          break;\n        }\n      } else {\n        // Check if we're on the bottom border of this panel (border is part of the panel)\n        const borderStart = rect.bottom - containerRect.top - handleSize;\n        const borderEnd = rect.bottom - containerRect.top;\n        if (relativeY >= borderStart && relativeY <= borderEnd) {\n          overHandle = true;\n          break;\n        }\n      }\n    }\n\n    // Update cursor based on whether we're over a handle\n    if (overHandle) {\n      this.style.cursor =\n        this._orientation === 'horizontal' ? 'col-resize' : 'row-resize';\n    } else {\n      this.style.cursor = '';\n    }\n  }\n\n  private handleMouseUp(event: MouseEvent): void {\n    if (!this._resizing) return;\n\n    event.preventDefault();\n\n    const finalSize = this._activePanel\n      ? parseFloat(this._activePanel.getAttribute('size') || '50')\n      : 0;\n\n    // Dispatch resize end event\n    if (this._activePanel) {\n      dispatchCustomEvent<SplitPanelResizeEndEvent['detail']>(\n        this,\n        'split-panel-resize-end',\n        {\n          containerId: this.id,\n          container: this,\n          panelId: this._activePanel.id,\n          panel: this._activePanel,\n          finalSize,\n        }\n      );\n    }\n\n    this._resizing = false;\n    this._activePanel = null;\n    this.classList.remove('dragging');\n\n    // Update cursor based on current hover position\n    this.updateHoverCursor(event);\n  }\n\n  private handleMouseLeave(event: MouseEvent): void {\n    // End resizing if mouse leaves the container\n    if (this._resizing) {\n      this.handleMouseUp(event);\n    }\n\n    // Reset cursor when leaving the container\n    this.style.cursor = '';\n  }\n\n  private handleResize(): void {\n    this.updatePanelSizes();\n  }\n\n  private getPanels(): HTMLElement[] {\n    return Array.from(this.querySelectorAll('e2-split-panel'));\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n    // Notify child elements of theme change\n    notifyThemeChange(this, value);\n  }\n\n  get orientation(): SplitPanelOrientation {\n    return this._orientation;\n  }\n\n  set orientation(value: SplitPanelOrientation) {\n    this.setAttribute('orientation', value);\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  // Method to programmatically resize a panel\n  resizePanel(panelId: string, size: number): void {\n    const panel = this.querySelector(`#${panelId}`) as HTMLElement;\n    if (panel && panel.tagName.toLowerCase() === 'e2-split-panel') {\n      panel.setAttribute('size', size.toString());\n      this.updatePanelSizes();\n    }\n  }\n\n  // Method to get panel sizes\n  getPanelSizes(): { [panelId: string]: number } {\n    const panels = this.getPanels();\n    const sizes: { [panelId: string]: number } = {};\n\n    panels.forEach(panel => {\n      if (panel.id) {\n        sizes[panel.id] = parseFloat(panel.getAttribute('size') || '0');\n      }\n    });\n\n    return sizes;\n  }\n\n  // Method to reset all panels to equal sizes\n  resetPanelSizes(): void {\n    const panels = this.getPanels();\n    const equalSize = 100 / panels.length;\n\n    panels.forEach(panel => {\n      panel.setAttribute('size', equalSize.toString());\n    });\n\n    this.updatePanelSizes();\n  }\n}\n\n// Register the element\nif (!customElements.get('e2-split-panel-container')) {\n  customElements.define('e2-split-panel-container', SplitPanelContainer);\n}\n\nexport default SplitPanelContainer;\n","/**\n * Status Bar Element\n * A horizontal status bar typically placed at the bottom of an application\n * Contains left, center, and right sections for different types of status information\n */\n\nimport {\n  EditorElementProperties,\n  StatusMessageEvent,\n  StatusMessageType,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class StatusBar extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _temporaryMessageTimeout?: number;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          padding: 4px 8px;\n          background: var(--statusbar-bg, #f8f8f8);\n          border-top: 1px solid var(--statusbar-border, #e0e0e0);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size-small, 12px);\n          min-height: 24px;\n          position: relative;\n          overflow: hidden;\n        }\n\n        :host(.theme-dark) {\n          background: var(--statusbar-bg-dark, #252526);\n          border-top-color: var(--statusbar-border-dark, #3e3e42);\n          color: var(--text-color-dark, #cccccc);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .status-container {\n          display: flex;\n          align-items: center;\n          width: 100%;\n          gap: 8px;\n        }\n\n        .status-section {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        .status-section.left {\n          flex: 0 0 auto;\n          justify-content: flex-start;\n        }\n\n        .status-section.center {\n          flex: 1 1 auto;\n          justify-content: center;\n        }\n\n        .status-section.right {\n          flex: 0 0 auto;\n          justify-content: flex-end;\n        }\n\n        .temporary-message {\n          position: absolute;\n          left: 0;\n          right: 0;\n          top: 0;\n          bottom: 0;\n          display: flex;\n          align-items: center;\n          padding: 4px 8px;\n          background: var(--statusbar-message-bg, var(--statusbar-bg, #f8f8f8));\n          z-index: 10;\n          opacity: 0;\n          transform: translateY(100%);\n          transition: all 0.2s ease-in-out;\n        }\n\n        .temporary-message.show {\n          opacity: 1;\n          transform: translateY(0);\n        }\n\n        .temporary-message.info {\n          background: var(--statusbar-info-bg, #e3f2fd);\n          color: var(--statusbar-info-text, #1565c0);\n        }\n\n        .temporary-message.success {\n          background: var(--statusbar-success-bg, #e8f5e8);\n          color: var(--statusbar-success-text, #2e7d32);\n        }\n\n        .temporary-message.warning {\n          background: var(--statusbar-warning-bg, #fff3e0);\n          color: var(--statusbar-warning-text, #f57c00);\n        }\n\n        .temporary-message.error {\n          background: var(--statusbar-error-bg, #ffebee);\n          color: var(--statusbar-error-text, #c62828);\n        }\n\n        :host(.theme-dark) .temporary-message.info {\n          background: var(--statusbar-info-bg-dark, #1e3a8a);\n          color: var(--statusbar-info-text-dark, #93c5fd);\n        }\n\n        :host(.theme-dark) .temporary-message.success {\n          background: var(--statusbar-success-bg-dark, #166534);\n          color: var(--statusbar-success-text-dark, #86efac);\n        }\n\n        :host(.theme-dark) .temporary-message.warning {\n          background: var(--statusbar-warning-bg-dark, #92400e);\n          color: var(--statusbar-warning-text-dark, #fcd34d);\n        }\n\n        :host(.theme-dark) .temporary-message.error {\n          background: var(--statusbar-error-bg-dark, #991b1b);\n          color: var(--statusbar-error-text-dark, #fca5a5);\n        }\n      </style>\n\n      <div class=\"status-container\">\n        <div class=\"status-section left\">\n          <slot name=\"left\"></slot>\n        </div>\n        <div class=\"status-section center\">\n          <slot name=\"center\"></slot>\n        </div>\n        <div class=\"status-section right\">\n          <slot name=\"right\"></slot>\n        </div>\n      </div>\n\n      <div class=\"temporary-message\" id=\"temporary-message\">\n        <span id=\"message-text\"></span>\n      </div>\n    `;\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('status-bar');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    // Clear any temporary message timeout\n    if (this._temporaryMessageTimeout) {\n      window.clearTimeout(this._temporaryMessageTimeout);\n      this._temporaryMessageTimeout = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Show a temporary message in the status bar\n   * @param message The message to display\n   * @param type The type of message (info, success, warning, error)\n   * @param duration Duration in milliseconds (default: 3000)\n   */\n  showMessage(\n    message: string,\n    type: StatusMessageType = 'info',\n    duration: number = 3000\n  ): void {\n    const shadowRoot = this.shadowRoot!;\n    const messageEl = shadowRoot.getElementById('temporary-message')!;\n    const textEl = shadowRoot.getElementById('message-text')!;\n\n    // Clear any existing timeout\n    if (this._temporaryMessageTimeout) {\n      clearTimeout(this._temporaryMessageTimeout);\n    }\n\n    // Set message content and type\n    textEl.textContent = message;\n    messageEl.className = `temporary-message ${type}`;\n\n    // Show message with animation\n    requestAnimationFrame(() => {\n      messageEl.classList.add('show');\n    });\n\n    // Dispatch event\n    dispatchCustomEvent<StatusMessageEvent['detail']>(this, 'status-message', {\n      message,\n      type,\n      duration,\n      temporary: true,\n    });\n\n    // Auto-hide after duration\n    if (duration > 0) {\n      this._temporaryMessageTimeout = window.setTimeout(() => {\n        this.hideMessage();\n      }, duration);\n    }\n  }\n\n  /**\n   * Hide the temporary message\n   */\n  hideMessage(): void {\n    const shadowRoot = this.shadowRoot!;\n    const messageEl = shadowRoot.getElementById('temporary-message')!;\n\n    messageEl.classList.remove('show');\n\n    if (this._temporaryMessageTimeout) {\n      clearTimeout(this._temporaryMessageTimeout);\n      this._temporaryMessageTimeout = undefined;\n    }\n  }\n\n  /**\n   * Get all status items in a specific section\n   * @param section The section to query ('left', 'center', 'right')\n   */\n  getItemsInSection(section: 'left' | 'center' | 'right'): HTMLElement[] {\n    const slot = this.querySelector(`[slot=\"${section}\"]`);\n    if (!slot) return [];\n\n    return Array.from(slot.children) as HTMLElement[];\n  }\n\n  /**\n   * Clear all items from a specific section\n   * @param section The section to clear ('left', 'center', 'right')\n   */\n  clearSection(section: 'left' | 'center' | 'right'): void {\n    const items = this.getItemsInSection(section);\n    items.forEach(item => item.remove());\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-status-bar')) {\n  customElements.define('e2-status-bar', StatusBar);\n}\n","/**\n * Status Item Element\n * A flexible status bar item that can display text, progress indicators, tools, and other status information\n * Supports different types: text, progress, tool, message, indicator\n */\n\nimport {\n  EditorElementProperties,\n  StatusItemClickEvent,\n  StatusItemType,\n  StatusItemUpdateEvent,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class StatusItem extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _type: StatusItemType = 'text';\n  private _value: string | number = '';\n  private _label: string = '';\n  private _clickable: boolean = false;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'type', 'value', 'label', 'clickable', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-flex;\n          align-items: center;\n          gap: 4px;\n          padding: 2px 6px;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size-small, 12px);\n          color: var(--text-color, #333);\n          white-space: nowrap;\n          border-radius: 2px;\n          transition: background-color 0.1s ease;\n        }\n\n        :host(.theme-dark) {\n          color: var(--text-color-dark, #cccccc);\n        }\n\n        :host([clickable]) {\n          cursor: pointer;\n          padding: 2px 8px;\n        }\n\n        :host([clickable]:hover) {\n          background: var(--status-item-hover-bg, rgba(0, 0, 0, 0.05));\n        }\n\n        :host(.theme-dark[clickable]:hover) {\n          background: var(--status-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host([clickable]:active) {\n          background: var(--status-item-active-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-dark[clickable]:active) {\n          background: var(--status-item-active-bg-dark, rgba(255, 255, 255, 0.15));\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .content {\n          display: flex;\n          align-items: center;\n          gap: 4px;\n        }\n\n        .icon {\n          font-size: 10px;\n          width: 12px;\n          text-align: center;\n          flex-shrink: 0;\n        }\n\n        .label {\n          flex-shrink: 0;\n        }\n\n        .value {\n          font-weight: 500;\n          flex-shrink: 0;\n        }\n\n        .progress-container {\n          display: flex;\n          align-items: center;\n          gap: 6px;\n        }\n\n        .progress-bar {\n          width: 60px;\n          height: 8px;\n          background: var(--progress-bg, #e0e0e0);\n          border-radius: 4px;\n          overflow: hidden;\n          position: relative;\n        }\n\n        :host(.theme-dark) .progress-bar {\n          background: var(--progress-bg-dark, #3e3e42);\n        }\n\n        .progress-fill {\n          height: 100%;\n          background: var(--progress-fill, #007acc);\n          border-radius: 4px;\n          transition: width 0.2s ease;\n          min-width: 2px;\n        }\n\n        :host(.theme-dark) .progress-fill {\n          background: var(--progress-fill-dark, #0e7afe);\n        }\n\n        .progress-text {\n          font-size: 10px;\n          min-width: 30px;\n          text-align: right;\n        }\n\n        /* Type-specific styles */\n        :host([type=\"tool\"]) {\n          background: var(--tool-item-bg, rgba(0, 120, 204, 0.1));\n          color: var(--tool-item-color, #007acc);\n          border: 1px solid var(--tool-item-border, rgba(0, 120, 204, 0.2));\n        }\n\n        :host(.theme-dark[type=\"tool\"]) {\n          background: var(--tool-item-bg-dark, rgba(14, 122, 254, 0.15));\n          color: var(--tool-item-color-dark, #0e7afe);\n          border-color: var(--tool-item-border-dark, rgba(14, 122, 254, 0.3));\n        }\n\n        :host([type=\"message\"]) {\n          font-style: italic;\n          opacity: 0.8;\n        }\n\n        :host([type=\"indicator\"]) .icon {\n          color: var(--indicator-color, #28a745);\n        }\n\n        :host(.theme-dark[type=\"indicator\"]) .icon {\n          color: var(--indicator-color-dark, #40d865);\n        }\n      </style>\n\n      <div class=\"content\">\n        <span class=\"icon\" id=\"icon\"></span>\n        <span class=\"label\" id=\"label\"></span>\n        <div class=\"progress-container\" id=\"progress-container\" style=\"display: none;\">\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" id=\"progress-fill\"></div>\n          </div>\n          <span class=\"progress-text\" id=\"progress-text\"></span>\n        </div>\n        <span class=\"value\" id=\"value\"></span>\n      </div>\n    `;\n\n    // Add click handler\n    this.addEventListener('click', this.handleClick.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('status-item');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    this.updateDisplay();\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'type':\n        this._type = newValue as StatusItemType;\n        this.updateDisplay();\n        break;\n      case 'value':\n        this._value = newValue;\n        this.updateDisplay();\n        break;\n      case 'label':\n        this._label = newValue;\n        this.updateDisplay();\n        break;\n      case 'clickable':\n        this._clickable = newValue !== null;\n        break;\n    }\n  }\n\n  private handleClick(event: Event): void {\n    if (!this._clickable || this.hasAttribute('disabled')) return;\n\n    dispatchCustomEvent<StatusItemClickEvent['detail']>(\n      this,\n      'status-item-click',\n      {\n        itemId: this.id,\n        item: this,\n        itemType: this._type,\n        value: this._value,\n      }\n    );\n  }\n\n  private updateDisplay(): void {\n    if (!this.shadowRoot) return;\n\n    const iconEl = this.shadowRoot.getElementById('icon')!;\n    const labelEl = this.shadowRoot.getElementById('label')!;\n    const valueEl = this.shadowRoot.getElementById('value')!;\n    const progressContainer =\n      this.shadowRoot.getElementById('progress-container')!;\n    const progressFill = this.shadowRoot.getElementById('progress-fill')!;\n    const progressText = this.shadowRoot.getElementById('progress-text')!;\n\n    // Set label\n    labelEl.textContent = this._label;\n    labelEl.style.display = this._label ? 'inline' : 'none';\n\n    // Handle different types\n    switch (this._type) {\n      case 'progress':\n        this.updateProgressDisplay(\n          progressContainer,\n          progressFill,\n          progressText\n        );\n        valueEl.style.display = 'none';\n        iconEl.style.display = 'none';\n        break;\n\n      case 'tool':\n        iconEl.textContent = '🔧';\n        iconEl.style.display = 'inline';\n        valueEl.textContent = String(this._value);\n        valueEl.style.display = this._value ? 'inline' : 'none';\n        progressContainer.style.display = 'none';\n        break;\n\n      case 'indicator':\n        iconEl.textContent = '●';\n        iconEl.style.display = 'inline';\n        valueEl.textContent = String(this._value);\n        valueEl.style.display = this._value ? 'inline' : 'none';\n        progressContainer.style.display = 'none';\n        break;\n\n      case 'message':\n        iconEl.textContent = 'ℹ';\n        iconEl.style.display = 'inline';\n        valueEl.textContent = String(this._value);\n        valueEl.style.display = this._value ? 'inline' : 'none';\n        progressContainer.style.display = 'none';\n        break;\n\n      case 'text':\n      default:\n        iconEl.style.display = 'none';\n        valueEl.textContent = String(this._value);\n        valueEl.style.display = this._value ? 'inline' : 'none';\n        progressContainer.style.display = 'none';\n        break;\n    }\n  }\n\n  private updateProgressDisplay(\n    container: HTMLElement,\n    fill: HTMLElement,\n    text: HTMLElement\n  ): void {\n    container.style.display = 'flex';\n\n    const numValue =\n      typeof this._value === 'number'\n        ? this._value\n        : parseFloat(String(this._value)) || 0;\n    const percentage = Math.max(0, Math.min(100, numValue * 100));\n\n    fill.style.width = `${percentage}%`;\n    text.textContent = `${Math.round(percentage)}%`;\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  get type(): StatusItemType {\n    return this._type;\n  }\n\n  set type(value: StatusItemType) {\n    this._type = value;\n    this.setAttribute('type', value);\n  }\n\n  get value(): string | number {\n    return this._value;\n  }\n\n  set value(newValue: string | number) {\n    const oldValue = this._value;\n    this._value = newValue;\n    this.setAttribute('value', String(newValue));\n\n    // Dispatch update event\n    dispatchCustomEvent<StatusItemUpdateEvent['detail']>(\n      this,\n      'status-item-update',\n      {\n        itemId: this.id,\n        item: this,\n        oldValue,\n        newValue,\n      }\n    );\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  set label(value: string) {\n    this._label = value;\n    this.setAttribute('label', value);\n  }\n\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  set clickable(value: boolean) {\n    this._clickable = value;\n    if (value) {\n      this.setAttribute('clickable', '');\n    } else {\n      this.removeAttribute('clickable');\n    }\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Update the progress value (for progress type items)\n   * @param progress Progress value between 0 and 1\n   */\n  setProgress(progress: number): void {\n    if (this._type === 'progress') {\n      this.value = Math.max(0, Math.min(1, progress));\n    }\n  }\n\n  /**\n   * Set an icon for the status item\n   * @param icon Unicode emoji or symbol\n   */\n  setIcon(icon: string): void {\n    if (this.shadowRoot) {\n      const iconEl = this.shadowRoot.getElementById('icon')!;\n      iconEl.textContent = icon;\n      iconEl.style.display = 'inline';\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-status-item')) {\n  customElements.define('e2-status-item', StatusItem);\n}\n","/**\n * Status Section Element\n * A container for grouping status items within a status bar\n * Provides left, center, or right positioning and overflow handling\n */\n\nimport {\n  EditorElementProperties,\n  StatusSectionPosition,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class StatusSection\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _position: StatusSectionPosition = 'left';\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'position', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size-small, 12px);\n          flex-shrink: 0;\n        }\n\n        :host([position=\"left\"]) {\n          justify-content: flex-start;\n        }\n\n        :host([position=\"center\"]) {\n          justify-content: center;\n          flex: 1 1 auto;\n        }\n\n        :host([position=\"right\"]) {\n          justify-content: flex-end;\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .section-container {\n          display: flex;\n          align-items: center;\n          gap: inherit;\n          min-width: 0; /* Allow shrinking */\n          overflow: hidden;\n        }\n\n        :host([position=\"center\"]) .section-container {\n          width: 100%;\n          justify-content: center;\n        }\n\n        ::slotted(*) {\n          flex-shrink: 0;\n          white-space: nowrap;\n        }\n\n        /* Responsive behavior - hide items on smaller screens */\n        @media (max-width: 768px) {\n          ::slotted([data-priority=\"low\"]) {\n            display: none;\n          }\n        }\n\n        @media (max-width: 480px) {\n          ::slotted([data-priority=\"medium\"]) {\n            display: none;\n          }\n        }\n      </style>\n\n      <div class=\"section-container\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('status-section');\n    }\n\n    // Set position attribute if not already set\n    if (!this.hasAttribute('position')) {\n      this.position = this._position;\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'position':\n        this._position = newValue as StatusSectionPosition;\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  get position(): StatusSectionPosition {\n    return this._position;\n  }\n\n  set position(value: StatusSectionPosition) {\n    this._position = value;\n    this.setAttribute('position', value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Add a status item to this section\n   * @param item The status item element to add\n   * @param priority Optional priority for responsive behavior ('high', 'medium', 'low')\n   */\n  addItem(item: HTMLElement, priority?: 'high' | 'medium' | 'low'): void {\n    if (priority) {\n      item.setAttribute('data-priority', priority);\n    }\n    this.appendChild(item);\n  }\n\n  /**\n   * Remove a status item from this section\n   * @param item The status item element to remove\n   */\n  removeItem(item: HTMLElement): void {\n    if (this.contains(item)) {\n      item.remove();\n    }\n  }\n\n  /**\n   * Clear all items from this section\n   */\n  clear(): void {\n    while (this.firstChild) {\n      this.removeChild(this.firstChild);\n    }\n  }\n\n  /**\n   * Get all items in this section\n   */\n  getItems(): HTMLElement[] {\n    return Array.from(this.children) as HTMLElement[];\n  }\n\n  /**\n   * Get items by priority level\n   * @param priority The priority level to filter by\n   */\n  getItemsByPriority(priority: 'high' | 'medium' | 'low'): HTMLElement[] {\n    return this.getItems().filter(\n      item => item.getAttribute('data-priority') === priority\n    );\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-status-section')) {\n  customElements.define('e2-status-section', StatusSection);\n}\n","/**\n * Tab Element\n * Individual tab that can be clicked to show associated content\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  notifyThemeChange,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class Tab extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _active: boolean = false;\n  private _closable: boolean = false;\n  private _icon: string = '';\n  private _label: string = '';\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return [\n      'theme',\n      'disabled',\n      'active',\n      'closable',\n      'icon',\n      'label',\n      'panel',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.setupEventListeners();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          padding: 8px 12px;\n          background: var(--tab-bg, #f8f8f8);\n          border: 1px solid var(--tab-border, #ddd);\n          border-bottom: none;\n          cursor: pointer;\n          user-select: none;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          color: var(--tab-color, #333);\n          min-width: 0;\n          position: relative;\n          transition: background-color 0.2s ease, color 0.2s ease;\n        }\n\n        :host(:hover) {\n          background: var(--tab-bg-hover, #e8e8e8);\n        }\n\n        :host([active]) {\n          background: var(--tab-bg-active, #ffffff);\n          color: var(--tab-color-active, #000);\n          border-bottom: 1px solid var(--tab-bg-active, #ffffff);\n          z-index: 1;\n        }\n\n        :host(.theme-dark) {\n          background: var(--tab-bg-dark, #2d2d2d);\n          border-color: var(--tab-border-dark, #555);\n          color: var(--tab-color-dark, #ccc);\n        }\n\n        :host(.theme-dark:hover) {\n          background: var(--tab-bg-hover-dark, #3d3d3d);\n        }\n\n        :host(.theme-dark[active]) {\n          background: var(--tab-bg-active-dark, #1e1e1e);\n          color: var(--tab-color-active-dark, #fff);\n          border-bottom-color: var(--tab-bg-active-dark, #1e1e1e);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n\n        /* Tab position adjustments for container orientation */\n        :host-context(e2-tab-container[tab-position=\"bottom\"]) {\n          border-top: none;\n          border-bottom: 1px solid var(--tab-border, #ddd);\n        }\n\n        :host-context(e2-tab-container[tab-position=\"bottom\"][active]) {\n          border-top: 1px solid var(--tab-bg-active, #ffffff);\n          border-bottom-color: var(--tab-bg-active, #ffffff);\n        }\n\n        :host-context(e2-tab-container.theme-dark[tab-position=\"bottom\"]) {\n          border-bottom-color: var(--tab-border-dark, #555);\n        }\n\n        :host-context(e2-tab-container.theme-dark[tab-position=\"bottom\"][active]) {\n          border-top-color: var(--tab-bg-active-dark, #1e1e1e);\n          border-bottom-color: var(--tab-bg-active-dark, #1e1e1e);\n        }\n\n        :host-context(e2-tab-container[tab-position=\"left\"]),\n        :host-context(e2-tab-container[tab-position=\"right\"]) {\n          border-bottom: 1px solid var(--tab-border, #ddd);\n          border-right: none;\n          width: 100%;\n        }\n\n        :host-context(e2-tab-container[tab-position=\"left\"][active]) {\n          border-right: 1px solid var(--tab-bg-active, #ffffff);\n        }\n\n        :host-context(e2-tab-container[tab-position=\"right\"]) {\n          border-left: none;\n          border-right: 1px solid var(--tab-border, #ddd);\n        }\n\n        :host-context(e2-tab-container[tab-position=\"right\"][active]) {\n          border-left: 1px solid var(--tab-bg-active, #ffffff);\n          border-right-color: var(--tab-bg-active, #ffffff);\n        }\n\n        .tab-content {\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          min-width: 0;\n          flex: 1;\n        }\n\n        .tab-icon {\n          flex-shrink: 0;\n          font-size: 16px;\n          width: 16px;\n          height: 16px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .tab-label {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          flex: 1;\n          min-width: 0;\n        }\n\n        .close-button {\n          flex-shrink: 0;\n          width: 16px;\n          height: 16px;\n          border: none;\n          background: transparent;\n          cursor: pointer;\n          border-radius: 2px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-left: 4px;\n          font-size: 12px;\n          color: var(--tab-close-color, #666);\n          opacity: 0.7;\n          transition: opacity 0.2s ease, background-color 0.2s ease;\n        }\n\n        .close-button:hover {\n          opacity: 1;\n          background: var(--tab-close-bg-hover, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-dark) .close-button {\n          color: var(--tab-close-color-dark, #aaa);\n        }\n\n        :host(.theme-dark) .close-button:hover {\n          background: var(--tab-close-bg-hover-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(:not([closable])) .close-button {\n          display: none;\n        }\n      </style>\n\n      <div class=\"tab-content\">\n        <span class=\"tab-icon\"></span>\n        <span class=\"tab-label\"></span>\n        <button class=\"close-button\" type=\"button\">&times;</button>\n      </div>\n    `;\n  }\n\n  private setupEventListeners(): void {\n    this.addEventListener('click', this.handleClick.bind(this));\n\n    const closeButton = this.shadowRoot?.querySelector(\n      '.close-button'\n    ) as HTMLButtonElement;\n    closeButton?.addEventListener('click', this.handleCloseClick.bind(this));\n  }\n\n  private handleClick(event: MouseEvent): void {\n    if (this.disabled) return;\n\n    // Don't trigger tab click if close button was clicked\n    if ((event.target as HTMLElement).classList.contains('close-button')) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    dispatchCustomEvent(this, 'tab-click', {\n      tabId: this.id,\n      tab: this,\n      panelId: this.getAttribute('panel') || `${this.id}-panel`,\n    });\n  }\n\n  private handleCloseClick(event: MouseEvent): void {\n    if (this.disabled) return;\n\n    event.stopPropagation();\n\n    dispatchCustomEvent(this, 'tab-close', {\n      tabId: this.id,\n      tab: this,\n      panelId: this.getAttribute('panel') || `${this.id}-panel`,\n    });\n\n    // The parent container will handle the removal\n  }\n\n  private updateContent(): void {\n    const shadowRoot = this.shadowRoot!;\n    const iconElement = shadowRoot.querySelector('.tab-icon') as HTMLElement;\n    const labelElement = shadowRoot.querySelector('.tab-label') as HTMLElement;\n\n    // Update icon\n    if (this._icon) {\n      iconElement.textContent = this._icon;\n      iconElement.style.display = 'flex';\n    } else {\n      iconElement.style.display = 'none';\n    }\n\n    // Update label\n    labelElement.textContent = this._label || this.textContent || '';\n  }\n\n  // Public API\n  public click(): void {\n    if (!this.disabled) {\n      this.handleClick(new MouseEvent('click'));\n    }\n  }\n\n  public close(): void {\n    if (!this.disabled && this._closable) {\n      this.handleCloseClick(new MouseEvent('click'));\n    }\n  }\n\n  // Properties\n  public get theme(): Theme {\n    return this._theme;\n  }\n\n  public set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n    this.applyTheme(value);\n    // Notify child elements of theme change\n    notifyThemeChange(this, value);\n  }\n\n  public get active(): boolean {\n    return this._active;\n  }\n\n  public set active(value: boolean) {\n    this._active = value;\n    if (value) {\n      this.setAttribute('active', '');\n    } else {\n      this.removeAttribute('active');\n    }\n  }\n\n  public get closable(): boolean {\n    return this._closable;\n  }\n\n  public set closable(value: boolean) {\n    this._closable = value;\n    if (value) {\n      this.setAttribute('closable', '');\n    } else {\n      this.removeAttribute('closable');\n    }\n  }\n\n  public get icon(): string {\n    return this._icon;\n  }\n\n  public set icon(value: string) {\n    this._icon = value;\n    this.setAttribute('icon', value);\n    this.updateContent();\n  }\n\n  public get label(): string {\n    return this._label;\n  }\n\n  public set label(value: string) {\n    this._label = value;\n    this.setAttribute('label', value);\n    this.updateContent();\n  }\n\n  public get panel(): string | null {\n    return this.getAttribute('panel');\n  }\n\n  public set panel(value: string | null) {\n    if (value) {\n      this.setAttribute('panel', value);\n    } else {\n      this.removeAttribute('panel');\n    }\n  }\n\n  public get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  public set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  public applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // Clean up existing theme inheritance when explicit theme is set\n        if (this._themeCleanup) {\n          this._themeCleanup();\n          this._themeCleanup = undefined;\n        }\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'active':\n        this._active = newValue !== null;\n        break;\n      case 'closable':\n        this._closable = newValue !== null;\n        break;\n      case 'icon':\n        this._icon = newValue || '';\n        this.updateContent();\n        break;\n      case 'label':\n        this._label = newValue || '';\n        this.updateContent();\n        break;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('tab');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    this.updateContent();\n\n    // Handle pending setup from dynamic creation\n    if ((this as any)._pendingSetup) {\n      const setup = (this as any)._pendingSetup;\n\n      // Set attributes safely now that element is connected\n      if (setup.slot) {\n        this.setAttribute('slot', setup.slot);\n      }\n      if (setup.panel) {\n        this.setAttribute('panel', setup.panel);\n      }\n      if (setup.label) {\n        this.label = setup.label;\n      }\n      if (setup.closable) {\n        this.closable = setup.closable;\n      }\n      if (setup.theme) {\n        this.applyTheme(setup.theme);\n      }\n\n      // Clean up\n      delete (this as any)._pendingSetup;\n    }\n\n    // Update content when connected\n    this.updateContent();\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-tab')) {\n  customElements.define('e2-tab', Tab);\n}\n","/**\n * Tab Container Element\n * A container that manages tabs and their associated panels\n */\n\nimport {\n  EditorElementProperties,\n  TabCloseEvent,\n  TabContainerChangeEvent,\n  TabSelectEvent,\n  Theme,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getEffectiveTheme,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class TabContainer\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _activeTabId: string | null = null;\n  private _tabPosition: 'top' | 'bottom' | 'left' | 'right' = 'top';\n  private _closable: boolean = false;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'active-tab', 'tab-position', 'closable'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.setupEventListeners();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          background: var(--tab-container-bg, #ffffff);\n          border: 1px solid var(--tab-container-border, #ccc);\n          border-radius: var(--tab-container-border-radius, 4px);\n          overflow: hidden;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n        }\n\n        :host(.theme-dark) {\n          background: var(--tab-container-bg-dark, #1e1e1e);\n          border-color: var(--tab-container-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Tab position variations */\n        :host([tab-position=\"top\"]) {\n          flex-direction: column;\n        }\n\n        :host([tab-position=\"bottom\"]) {\n          flex-direction: column-reverse;\n        }\n\n        :host([tab-position=\"left\"]) {\n          flex-direction: row;\n        }\n\n        :host([tab-position=\"right\"]) {\n          flex-direction: row-reverse;\n        }\n\n        .tab-list {\n          display: flex;\n          background: var(--tab-list-bg, #f8f8f8);\n          border-bottom: 1px solid var(--tab-list-border, #ddd);\n          overflow-x: auto;\n          flex-shrink: 0;\n        }\n\n        :host(.theme-dark) .tab-list {\n          background: var(--tab-list-bg-dark, #2d2d2d);\n          border-bottom-color: var(--tab-list-border-dark, #555);\n        }\n\n        :host([tab-position=\"bottom\"]) .tab-list {\n          border-bottom: none;\n          border-top: 1px solid var(--tab-list-border, #ddd);\n        }\n\n        :host(.theme-dark[tab-position=\"bottom\"]) .tab-list {\n          border-top-color: var(--tab-list-border-dark, #555);\n        }\n\n        :host([tab-position=\"left\"]) .tab-list,\n        :host([tab-position=\"right\"]) .tab-list {\n          flex-direction: column;\n          border-bottom: none;\n          border-right: 1px solid var(--tab-list-border, #ddd);\n          overflow-x: visible;\n          overflow-y: auto;\n        }\n\n        :host([tab-position=\"right\"]) .tab-list {\n          border-right: none;\n          border-left: 1px solid var(--tab-list-border, #ddd);\n        }\n\n        :host(.theme-dark[tab-position=\"left\"]) .tab-list {\n          border-right-color: var(--tab-list-border-dark, #555);\n        }\n\n        :host(.theme-dark[tab-position=\"right\"]) .tab-list {\n          border-left-color: var(--tab-list-border-dark, #555);\n        }\n\n        .panel-container {\n          flex: 1;\n          overflow: hidden;\n          position: relative;\n        }\n\n        ::slotted(e2-tab) {\n          flex-shrink: 0;\n        }\n\n        ::slotted(e2-tab-panel) {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          overflow: auto;\n        }\n\n        ::slotted(e2-tab-panel[active]) {\n          display: flex !important;\n        }\n      </style>\n\n      <div class=\"tab-list\">\n        <slot name=\"tabs\"></slot>\n      </div>\n      <div class=\"panel-container\">\n        <slot name=\"panels\"></slot>\n      </div>\n    `;\n  }\n\n  private setupEventListeners(): void {\n    // Listen for tab clicks\n    this.addEventListener(\n      'tab-click',\n      this.handleTabClick.bind(this) as EventListener\n    );\n    this.addEventListener(\n      'tab-close',\n      this.handleTabClose.bind(this) as EventListener\n    );\n\n    // Listen for slotchange to manage initial state\n    const shadowRoot = this.shadowRoot!;\n    const tabSlot = shadowRoot.querySelector(\n      'slot[name=\"tabs\"]'\n    ) as HTMLSlotElement;\n    const panelSlot = shadowRoot.querySelector(\n      'slot[name=\"panels\"]'\n    ) as HTMLSlotElement;\n\n    tabSlot?.addEventListener('slotchange', () => {\n      this.updateTabsAndPanels();\n    });\n\n    panelSlot?.addEventListener('slotchange', () => {\n      this.updateTabsAndPanels();\n    });\n  }\n\n  private handleTabClick(event: Event): void {\n    event.stopPropagation();\n    const tabElement = event.target as HTMLElement;\n    const tabId = tabElement.id;\n    const panelId = tabElement.getAttribute('panel') || `${tabId}-panel`;\n\n    this.selectTab(tabId, panelId);\n  }\n\n  private handleTabClose(event: Event): void {\n    event.stopPropagation();\n\n    // Find the actual tab element (event might come from close button inside tab)\n    let tabElement = event.target as HTMLElement;\n\n    // If the event came from inside a tab, find the parent tab element\n    if (!tabElement.matches('e2-tab')) {\n      tabElement = tabElement.closest('e2-tab') as HTMLElement;\n    }\n\n    if (!tabElement) {\n      return;\n    }\n\n    const tabId = tabElement.id;\n    const panelId = tabElement.getAttribute('panel') || `${tabId}-panel`;\n\n    // Check if this tab is already being removed to prevent recursion\n    if (tabElement.hasAttribute('data-removing')) {\n      return;\n    }\n\n    // Mark as being removed to prevent recursive calls\n    tabElement.setAttribute('data-removing', 'true');\n\n    // Dispatch close event to external listeners (without bubbling to avoid recursion)\n    const closeEvent = dispatchCustomEvent<TabCloseEvent['detail']>(\n      this,\n      'tab-close',\n      {\n        tabId,\n        tab: tabElement,\n        panelId,\n        panel: this.querySelector(\n          `e2-tab-panel[id=\"${panelId}\"]`\n        ) as HTMLElement,\n        containerId: this.id,\n        container: this,\n      },\n      { bubbles: false } // Prevent bubbling to avoid recursion\n    );\n\n    // Defer the removal to break any potential event loops\n    if (closeEvent) {\n      setTimeout(() => {\n        this.removeTab(tabId);\n      }, 0);\n    }\n  }\n\n  private selectTab(tabId: string, panelId: string): void {\n    const tabElement = this.querySelector(\n      `e2-tab[id=\"${tabId}\"]`\n    ) as HTMLElement;\n    const panelElement = this.querySelector(\n      `e2-tab-panel[id=\"${panelId}\"]`\n    ) as HTMLElement;\n\n    if (!tabElement || !panelElement) {\n      return;\n    }\n\n    const previousTabId = this._activeTabId;\n    const effectiveTheme = this.hasAttribute('theme')\n      ? this._theme\n      : getEffectiveTheme(this);\n\n    // Deactivate all tabs and panels\n    this.querySelectorAll('e2-tab').forEach(tab => {\n      if ((tab as any).active !== undefined) {\n        (tab as any).active = false;\n      } else {\n        tab.removeAttribute('active');\n      }\n      // Preserve theme after state change\n      if ((tab as any).applyTheme && !tab.hasAttribute('theme')) {\n        (tab as any).applyTheme(effectiveTheme);\n      }\n    });\n    this.querySelectorAll('e2-tab-panel').forEach(panel => {\n      if ((panel as any).active !== undefined) {\n        (panel as any).active = false;\n      } else {\n        panel.removeAttribute('active');\n        (panel as HTMLElement).style.display = 'none';\n      }\n      // Preserve theme after state change\n      if ((panel as any).applyTheme && !panel.hasAttribute('theme')) {\n        (panel as any).applyTheme(effectiveTheme);\n      }\n    });\n\n    // Activate the selected tab and panel\n    if ((tabElement as any).active !== undefined) {\n      (tabElement as any).active = true;\n    } else {\n      tabElement.setAttribute('active', '');\n    }\n\n    if ((panelElement as any).active !== undefined) {\n      (panelElement as any).active = true;\n    } else {\n      panelElement.setAttribute('active', '');\n      panelElement.style.display = 'flex';\n    }\n\n    // Ensure theme is preserved on the newly active elements\n    if ((tabElement as any).applyTheme && !tabElement.hasAttribute('theme')) {\n      (tabElement as any).applyTheme(effectiveTheme);\n    }\n    if (\n      (panelElement as any).applyTheme &&\n      !panelElement.hasAttribute('theme')\n    ) {\n      (panelElement as any).applyTheme(effectiveTheme);\n    }\n\n    this._activeTabId = tabId;\n    this.setAttribute('active-tab', tabId);\n\n    // Dispatch select event\n    dispatchCustomEvent<TabSelectEvent['detail']>(this, 'tab-select', {\n      tabId,\n      tab: tabElement,\n      panelId,\n      panel: panelElement,\n      containerId: this.id,\n      container: this,\n      previousTabId: previousTabId || undefined,\n    });\n\n    // Dispatch container change event\n    dispatchCustomEvent<TabContainerChangeEvent['detail']>(\n      this,\n      'tab-container-change',\n      {\n        containerId: this.id,\n        container: this,\n        activeTabId: tabId,\n        activePanelId: panelId,\n      }\n    );\n  }\n\n  private removeTab(tabId: string): void {\n    const tabElement = this.querySelector(\n      `e2-tab[id=\"${tabId}\"]`\n    ) as HTMLElement;\n    const panelId = tabElement?.getAttribute('panel') || `${tabId}-panel`;\n    const panelElement = this.querySelector(\n      `e2-tab-panel[id=\"${panelId}\"]`\n    ) as HTMLElement;\n\n    // Remove elements\n    tabElement?.remove();\n    panelElement?.remove();\n\n    // If this was the active tab, select another\n    if (this._activeTabId === tabId) {\n      const remainingTabs = this.querySelectorAll('e2-tab');\n      if (remainingTabs.length > 0) {\n        const nextTab = remainingTabs[0] as HTMLElement;\n        const nextPanelId =\n          nextTab.getAttribute('panel') || `${nextTab.id}-panel`;\n        this.selectTab(nextTab.id, nextPanelId);\n      } else {\n        this._activeTabId = null;\n        this.removeAttribute('active-tab');\n      }\n    }\n\n    // Refresh theme inheritance after removing tab\n    this.refreshThemes();\n  }\n\n  private updateTabsAndPanels(): void {\n    // Auto-assign panels to tabs and vice versa\n    const tabs = this.querySelectorAll('e2-tab');\n    const panels = this.querySelectorAll('e2-tab-panel');\n\n    // Get the effective theme for proper inheritance\n    const effectiveTheme = this.hasAttribute('theme')\n      ? this._theme\n      : getEffectiveTheme(this);\n\n    tabs.forEach((tab, index) => {\n      const tabElement = tab as HTMLElement;\n\n      // Only set ID if it's not already set and the element doesn't have attributes being processed\n      if (!tabElement.id && !tabElement.hasAttribute('id')) {\n        try {\n          tabElement.id = generateId('tab');\n        } catch (e) {\n          // If setting ID fails, skip this tab for now\n          return;\n        }\n      }\n\n      // Set closable attribute if container is closable, but avoid if element is being processed\n      if (this._closable && !tabElement.hasAttribute('closable')) {\n        try {\n          tabElement.setAttribute('closable', '');\n        } catch (e) {\n          // If setting attribute fails, the element might still be initializing\n        }\n      }\n\n      // Apply effective theme only if tab doesn't have its own theme attribute\n      if ((tabElement as any).applyTheme && !tabElement.hasAttribute('theme')) {\n        try {\n          (tabElement as any).applyTheme(effectiveTheme);\n        } catch (e) {\n          // If applying theme fails, the element might still be initializing\n        }\n      }\n\n      // Link to panel\n      if (!tabElement.getAttribute('panel')) {\n        const correspondingPanel = panels[index] as HTMLElement;\n        if (correspondingPanel) {\n          if (\n            !correspondingPanel.id &&\n            !correspondingPanel.hasAttribute('id')\n          ) {\n            try {\n              correspondingPanel.id = `${tabElement.id}-panel`;\n            } catch (e) {\n              return;\n            }\n          }\n          try {\n            tabElement.setAttribute('panel', correspondingPanel.id);\n          } catch (e) {\n            // If linking tab to panel fails, the element might still be initializing\n          }\n        }\n      }\n    });\n\n    // Determine which tab should be active initially\n    let activeTabElement: HTMLElement | null = null;\n    let activePanelId: string | null = null;\n\n    // Priority 1: Check if container has active-tab attribute\n    if (this.hasAttribute('active-tab')) {\n      const activeTabId = this.getAttribute('active-tab');\n      activeTabElement = this.querySelector(\n        `e2-tab[id=\"${activeTabId}\"]`\n      ) as HTMLElement;\n    }\n\n    // Priority 2: Check if any tab has active attribute\n    if (!activeTabElement) {\n      activeTabElement = this.querySelector('e2-tab[active]') as HTMLElement;\n    }\n\n    // Priority 3: Use first tab as fallback\n    if (!activeTabElement && tabs.length > 0) {\n      activeTabElement = tabs[0] as HTMLElement;\n    }\n\n    // Set the active panel ID based on the determined active tab\n    if (activeTabElement) {\n      activePanelId =\n        activeTabElement.getAttribute('panel') ||\n        `${activeTabElement.id}-panel`;\n    }\n\n    panels.forEach(panel => {\n      const panelElement = panel as HTMLElement;\n\n      // Only set ID if it's not already set and the element is ready\n      if (!panelElement.id && !panelElement.hasAttribute('id')) {\n        try {\n          panelElement.id = generateId('tab-panel');\n        } catch (e) {\n          return;\n        }\n      }\n\n      // Apply effective theme only if panel doesn't have its own theme attribute\n      if (\n        (panelElement as any).applyTheme &&\n        !panelElement.hasAttribute('theme')\n      ) {\n        try {\n          (panelElement as any).applyTheme(effectiveTheme);\n        } catch (e) {\n          // If applying theme fails, the element might still be initializing\n        }\n      }\n\n      // Hide all panels except the one that should be active\n      if (panelElement.id === activePanelId) {\n        // This will be the initially active panel - ensure it's visible\n        if ((panelElement as any).active !== undefined) {\n          try {\n            (panelElement as any).active = true;\n          } catch (e) {\n            // If setting panel active property fails, the element might still be initializing\n          }\n        } else {\n          try {\n            panelElement.setAttribute('active', '');\n            panelElement.style.display = 'flex';\n          } catch (e) {\n            // If setting attribute fails, the element might still be initializing\n          }\n        }\n      } else {\n        if ((panelElement as any).active !== undefined) {\n          try {\n            (panelElement as any).active = false;\n          } catch (e) {\n            // If setting panel inactive property fails, the element might still be initializing\n          }\n        } else {\n          try {\n            panelElement.style.display = 'none';\n          } catch (e) {\n            // If setting attribute fails, the element might still be initializing\n          }\n        }\n      }\n    });\n\n    // Select the determined active tab if none is currently selected\n    if (!this._activeTabId && activeTabElement) {\n      const panelId =\n        activeTabElement.getAttribute('panel') ||\n        `${activeTabElement.id}-panel`;\n      setTimeout(() => {\n        if (activeTabElement) {\n          this.selectTab(activeTabElement.id, panelId);\n        }\n      }, 100);\n    }\n  }\n\n  // Public API\n  public selectTabById(tabId: string): void {\n    const tabElement = this.querySelector(\n      `e2-tab[id=\"${tabId}\"]`\n    ) as HTMLElement;\n    if (tabElement) {\n      const panelId = tabElement.getAttribute('panel') || `${tabId}-panel`;\n      this.selectTab(tabId, panelId);\n    }\n  }\n\n  /**\n   * Refresh theme inheritance for all child tabs and panels\n   * This can be called after dynamic operations to ensure theme is maintained\n   */\n  public refreshThemes(): void {\n    const effectiveTheme = this.hasAttribute('theme')\n      ? this._theme\n      : getEffectiveTheme(this);\n\n    this.querySelectorAll('e2-tab').forEach((tab: any) => {\n      if (tab.applyTheme && !tab.hasAttribute('theme')) {\n        tab.applyTheme(effectiveTheme);\n      }\n    });\n\n    this.querySelectorAll('e2-tab-panel').forEach((panel: any) => {\n      if (panel.applyTheme && !panel.hasAttribute('theme')) {\n        panel.applyTheme(effectiveTheme);\n      }\n    });\n  }\n\n  public addTab(\n    label: string,\n    content: string = '',\n    tabId?: string,\n    panelId?: string\n  ): { tabId: string; panelId: string } {\n    const finalTabId = tabId || generateId('tab');\n    const finalPanelId = panelId || `${finalTabId}-panel`;\n\n    // Create tab element using customElements workaround\n    const TabConstructor = window.customElements.get('e2-tab') as any;\n    const tab = new TabConstructor();\n    tab.id = finalTabId;\n\n    // Create panel element using customElements workaround\n    const TabPanelConstructor = window.customElements.get(\n      'e2-tab-panel'\n    ) as any;\n    const panel = new TabPanelConstructor();\n    panel.id = finalPanelId;\n\n    // Get effective theme for proper inheritance\n    const effectiveTheme = this.hasAttribute('theme')\n      ? this._theme\n      : getEffectiveTheme(this);\n\n    // Set up initial data that will be applied in connectedCallback\n    (tab as any)._pendingSetup = {\n      slot: 'tabs',\n      panel: finalPanelId,\n      label: label,\n      closable: this._closable,\n      theme: effectiveTheme,\n    };\n\n    (panel as any)._pendingSetup = {\n      slot: 'panels',\n      content: content,\n      theme: effectiveTheme,\n    };\n\n    // Add to DOM - this will trigger connectedCallback\n    this.appendChild(tab);\n    this.appendChild(panel);\n\n    return { tabId: finalTabId, panelId: finalPanelId };\n  }\n\n  public removeTabById(tabId: string): void {\n    this.removeTab(tabId);\n  }\n\n  public get activeTabId(): string | null {\n    return this._activeTabId;\n  }\n\n  public get tabs(): NodeListOf<HTMLElement> {\n    return this.querySelectorAll('e2-tab');\n  }\n\n  public get panels(): NodeListOf<HTMLElement> {\n    return this.querySelectorAll('e2-tab-panel');\n  }\n\n  // Attribute handling\n  public get theme(): Theme {\n    return this._theme;\n  }\n\n  public set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  public get tabPosition(): 'top' | 'bottom' | 'left' | 'right' {\n    return this._tabPosition;\n  }\n\n  public set tabPosition(value: 'top' | 'bottom' | 'left' | 'right') {\n    this._tabPosition = value;\n    this.setAttribute('tab-position', value);\n  }\n\n  public get closable(): boolean {\n    return this._closable;\n  }\n\n  public set closable(value: boolean) {\n    this._closable = value;\n    if (value) {\n      this.setAttribute('closable', '');\n    } else {\n      this.removeAttribute('closable');\n    }\n\n    // Update existing tabs\n    this.querySelectorAll('e2-tab').forEach(tab => {\n      if (value) {\n        tab.setAttribute('closable', '');\n      } else {\n        tab.removeAttribute('closable');\n      }\n    });\n  }\n\n  public get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  public set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  public applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n\n    // Also apply theme to all child tabs and panels that don't have explicit theme\n    this.querySelectorAll('e2-tab').forEach((tab: any) => {\n      if (tab.applyTheme && !tab.hasAttribute('theme')) {\n        tab.applyTheme(theme);\n      }\n    });\n\n    this.querySelectorAll('e2-tab-panel').forEach((panel: any) => {\n      if (panel.applyTheme && !panel.hasAttribute('theme')) {\n        panel.applyTheme(theme);\n      }\n    });\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this._theme = newValue as Theme;\n          // Clean up any existing theme inheritance\n          if (this._themeCleanup) {\n            this._themeCleanup();\n            this._themeCleanup = undefined;\n          }\n          this.applyTheme(this._theme);\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          this._theme = 'auto';\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'active-tab':\n        if (newValue && newValue !== this._activeTabId) {\n          this.selectTabById(newValue);\n        }\n        break;\n      case 'tab-position':\n        this._tabPosition = (newValue as any) || 'top';\n        break;\n      case 'closable':\n        this._closable = newValue !== null;\n        break;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('tab-container');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    this.updateTabsAndPanels();\n\n    // Defer initialization until the next frame to avoid conflicts with custom element initialization\n    // Use requestAnimationFrame instead of setTimeout for better timing\n    // requestAnimationFrame(() => {\n    //   // Wait one more frame to ensure all child custom elements are fully initialized\n    //   requestAnimationFrame(() => {\n    //     this.updateTabsAndPanels();\n\n    //     // If still no active tab after initialization, try once more\n    //     if (!this._activeTabId) {\n    //       requestAnimationFrame(() => {\n    //         this.updateTabsAndPanels();\n    //       });\n    //     }\n    //   });\n    // });\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-tab-container')) {\n  customElements.define('e2-tab-container', TabContainer);\n}\n","/**\n * Tab Panel Element\n * Container for tab content that shows/hides based on tab selection\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  generateId,\n  getShadowRoot,\n  notifyThemeChange,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class TabPanel extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _active: boolean = false;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'active'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: none;\n          flex-direction: column;\n          width: 100%;\n          height: 100%;\n          overflow: auto;\n          background: var(--tab-panel-bg, #ffffff);\n          padding: var(--tab-panel-padding, 16px);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          color: var(--tab-panel-color, #333);\n          box-sizing: border-box;\n        }\n\n        :host([active]) {\n          display: flex;\n        }\n\n        :host(.theme-dark) {\n          background: var(--tab-panel-bg-dark, #1e1e1e);\n          color: var(--tab-panel-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Scrollbar styling for dark theme */\n        :host(.theme-dark) {\n          scrollbar-width: thin;\n          scrollbar-color: var(--scrollbar-thumb-dark, #555) var(--scrollbar-track-dark, #2d2d2d);\n        }\n\n        :host(.theme-dark)::-webkit-scrollbar {\n          width: 8px;\n          height: 8px;\n        }\n\n        :host(.theme-dark)::-webkit-scrollbar-track {\n          background: var(--scrollbar-track-dark, #2d2d2d);\n        }\n\n        :host(.theme-dark)::-webkit-scrollbar-thumb {\n          background: var(--scrollbar-thumb-dark, #555);\n          border-radius: 4px;\n        }\n\n        :host(.theme-dark)::-webkit-scrollbar-thumb:hover {\n          background: var(--scrollbar-thumb-hover-dark, #666);\n        }\n\n        /* Light theme scrollbar */\n        :host(.theme-light) {\n          scrollbar-width: thin;\n          scrollbar-color: var(--scrollbar-thumb-light, #ccc) var(--scrollbar-track-light, #f0f0f0);\n        }\n\n        :host(.theme-light)::-webkit-scrollbar {\n          width: 8px;\n          height: 8px;\n        }\n\n        :host(.theme-light)::-webkit-scrollbar-track {\n          background: var(--scrollbar-track-light, #f0f0f0);\n        }\n\n        :host(.theme-light)::-webkit-scrollbar-thumb {\n          background: var(--scrollbar-thumb-light, #ccc);\n          border-radius: 4px;\n        }\n\n        :host(.theme-light)::-webkit-scrollbar-thumb:hover {\n          background: var(--scrollbar-thumb-hover-light, #bbb);\n        }\n\n        /* Content styling */\n        ::slotted(*) {\n          max-width: 100%;\n        }\n\n        ::slotted(h1),\n        ::slotted(h2),\n        ::slotted(h3),\n        ::slotted(h4),\n        ::slotted(h5),\n        ::slotted(h6) {\n          margin-top: 0;\n          color: inherit;\n        }\n\n        ::slotted(p) {\n          line-height: 1.5;\n          margin-bottom: 1em;\n        }\n\n        ::slotted(pre) {\n          background: var(--code-bg, #f5f5f5);\n          padding: 12px;\n          border-radius: 4px;\n          overflow-x: auto;\n          font-family: var(--font-family-mono, 'Consolas', 'Monaco', monospace);\n        }\n\n        :host(.theme-dark) ::slotted(pre) {\n          background: var(--code-bg-dark, #0d1117);\n        }\n\n        ::slotted(code) {\n          background: var(--code-bg, #f5f5f5);\n          padding: 2px 4px;\n          border-radius: 2px;\n          font-family: var(--font-family-mono, 'Consolas', 'Monaco', monospace);\n          font-size: 0.9em;\n        }\n\n        :host(.theme-dark) ::slotted(code) {\n          background: var(--code-bg-dark, #0d1117);\n        }\n\n        /* Loading state */\n        :host([loading]) {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        :host([loading])::before {\n          content: 'Loading...';\n          color: var(--tab-panel-loading-color, #666);\n        }\n\n        :host(.theme-dark[loading])::before {\n          color: var(--tab-panel-loading-color-dark, #aaa);\n        }\n\n        /* Empty state */\n        :host(:empty:not([loading])) {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        :host(:empty:not([loading]))::before {\n          content: attr(data-empty-message);\n          color: var(--tab-panel-empty-color, #999);\n          font-style: italic;\n        }\n\n        :host(.theme-dark:empty:not([loading]))::before {\n          color: var(--tab-panel-empty-color-dark, #666);\n        }\n      </style>\n\n      <slot></slot>\n    `;\n  }\n\n  // Public API\n  public show(): void {\n    this.active = true;\n  }\n\n  public hide(): void {\n    this.active = false;\n  }\n\n  public scrollToTop(): void {\n    this.scrollTop = 0;\n  }\n\n  public scrollToBottom(): void {\n    this.scrollTop = this.scrollHeight;\n  }\n\n  public scrollToElement(element: Element): void {\n    if (this.contains(element)) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  public clearContent(): void {\n    this.innerHTML = '';\n  }\n\n  public setContent(content: string): void {\n    // Clear existing content first to avoid conflicts\n    this.innerHTML = '';\n    this.innerHTML = content;\n  }\n\n  public appendContent(content: string): void {\n    this.insertAdjacentHTML('beforeend', content);\n  }\n\n  public prependContent(content: string): void {\n    this.insertAdjacentHTML('afterbegin', content);\n  }\n\n  // Properties\n  public get theme(): Theme {\n    return this._theme;\n  }\n\n  public set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n    this.applyTheme(value);\n    // Notify child elements of theme change\n    notifyThemeChange(this, value);\n  }\n\n  public get active(): boolean {\n    return this._active;\n  }\n\n  public set active(value: boolean) {\n    this._active = value;\n    if (value) {\n      this.setAttribute('active', '');\n      this.style.display = 'flex';\n    } else {\n      this.removeAttribute('active');\n      this.style.display = 'none';\n    }\n  }\n\n  public get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  public set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  public get loading(): boolean {\n    return this.hasAttribute('loading');\n  }\n\n  public set loading(value: boolean) {\n    if (value) {\n      this.setAttribute('loading', '');\n    } else {\n      this.removeAttribute('loading');\n    }\n  }\n\n  public get emptyMessage(): string {\n    return this.getAttribute('data-empty-message') || 'No content available';\n  }\n\n  public set emptyMessage(value: string) {\n    this.setAttribute('data-empty-message', value);\n  }\n\n  public applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // Clean up existing theme inheritance when explicit theme is set\n        if (this._themeCleanup) {\n          this._themeCleanup();\n          this._themeCleanup = undefined;\n        }\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'active':\n        this._active = newValue !== null;\n        if (this._active) {\n          this.style.display = 'flex';\n        } else {\n          this.style.display = 'none';\n        }\n        break;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('tab-panel');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Handle pending setup from dynamic creation\n    if ((this as any)._pendingSetup) {\n      const setup = (this as any)._pendingSetup;\n\n      // Set attributes safely now that element is connected\n      if (setup.slot) {\n        this.setAttribute('slot', setup.slot);\n      }\n      if (setup.content) {\n        // Only set innerHTML if the element doesn't already have content\n        // This prevents conflicts when the element is declared with existing content\n        if (this.children.length === 0 && this.textContent?.trim() === '') {\n          this.innerHTML = setup.content;\n        }\n      }\n      if (setup.theme) {\n        this.applyTheme(setup.theme);\n      }\n\n      // Clean up\n      delete (this as any)._pendingSetup;\n    }\n\n    // Set initial visibility based on active state\n    if (this._active) {\n      this.style.display = 'flex';\n    } else {\n      this.style.display = 'none';\n    }\n\n    // Set default empty message if not provided\n    if (!this.hasAttribute('data-empty-message')) {\n      this.emptyMessage = 'No content available';\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-tab-panel')) {\n  customElements.define('e2-tab-panel', TabPanel);\n}\n","/**\n * Toolbar Element\n * A horizontal container for toolbar buttons and other controls\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class Toolbar extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          padding: 4px;\n          background: var(--toolbar-bg, #f0f0f0);\n          border-bottom: 1px solid var(--toolbar-border, #ccc);\n          gap: 2px;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n        }\n\n        :host(.theme-dark) {\n          background: var(--toolbar-bg-dark, #2d2d2d);\n          border-bottom-color: var(--toolbar-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        ::slotted(*) {\n          flex-shrink: 0;\n        }\n      </style>\n      <slot></slot>\n    `;\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('toolbar');\n    }\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Close all toolbar menus except the specified one\n   * @param exceptMenu The menu to keep open (optional)\n   */\n  closeAllMenus(exceptMenu?: HTMLElement): void {\n    const toolbarMenus = this.querySelectorAll('e2-toolbar-menu');\n    toolbarMenus.forEach(menu => {\n      if (menu !== exceptMenu && typeof (menu as any).close === 'function') {\n        (menu as any).close();\n      }\n    });\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-toolbar')) {\n  customElements.define('e2-toolbar', Toolbar);\n}\n","/**\n * Toolbar Button Element\n * A button designed to be used within a toolbar\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ToolbarButton\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['label', 'icon', 'theme', 'disabled', 'active'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 4px;\n          padding: 6px 12px;\n          border: 1px solid transparent;\n          background: transparent;\n          color: var(--text-color, #333);\n          font-family: inherit;\n          font-size: inherit;\n          cursor: pointer;\n          border-radius: 3px;\n          min-height: 24px;\n          transition: all 0.15s ease;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n\n        button:hover {\n          background: var(--button-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        button:active,\n        button.active {\n          background: var(--button-active-bg, rgba(0, 0, 0, 0.2));\n        }\n\n        button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        :host(.theme-dark) button {\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host(.theme-dark) button:hover {\n          background: var(--button-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) button:active,\n        :host(.theme-dark) button.active {\n          background: var(--button-active-bg-dark, rgba(255, 255, 255, 0.2));\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          flex-shrink: 0;\n        }\n\n        .label {\n          white-space: nowrap;\n          margin-left: 4px;\n        }\n      </style>\n      <button>\n        <span class=\"icon\" style=\"display: none;\"></span>\n        <span class=\"label\"></span>\n      </button>\n    `;\n\n    const button = shadowRoot.querySelector('button')!;\n    button.addEventListener('click', this.handleClick.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('toolbar-button');\n    }\n    this.updateContent();\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'label':\n      case 'icon':\n        this.updateContent();\n        break;\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'disabled':\n        this.updateDisabled();\n        break;\n      case 'active':\n        this.updateActive();\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const shadowRoot = this.shadowRoot!;\n    const iconSpan = shadowRoot.querySelector('.icon') as HTMLSpanElement;\n    const labelSpan = shadowRoot.querySelector('.label') as HTMLSpanElement;\n\n    const icon = this.getAttribute('icon');\n    const label = this.getAttribute('label') || '';\n\n    if (icon) {\n      iconSpan.textContent = icon;\n      iconSpan.style.display = 'inline-block';\n    } else {\n      iconSpan.style.display = 'none';\n    }\n\n    labelSpan.textContent = label;\n  }\n\n  private updateDisabled(): void {\n    const button = this.shadowRoot!.querySelector('button')!;\n    button.disabled = this.hasAttribute('disabled');\n  }\n\n  private updateActive(): void {\n    const button = this.shadowRoot!.querySelector('button')!;\n    button.classList.toggle('active', this.hasAttribute('active'));\n  }\n\n  private handleClick(event: Event): void {\n    if (this.hasAttribute('disabled')) return;\n\n    const customEvent = new CustomEvent('toolbar-button-click', {\n      detail: {\n        buttonId: this.id,\n        button: this,\n      },\n      bubbles: true,\n      cancelable: true,\n    });\n\n    this.dispatchEvent(customEvent);\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    this.applyTheme(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  get label(): string {\n    return this.getAttribute('label') || '';\n  }\n\n  set label(value: string) {\n    this.setAttribute('label', value);\n  }\n\n  get icon(): string {\n    return this.getAttribute('icon') || '';\n  }\n\n  set icon(value: string) {\n    this.setAttribute('icon', value);\n  }\n\n  get active(): boolean {\n    return this.hasAttribute('active');\n  }\n\n  set active(value: boolean) {\n    if (value) {\n      this.setAttribute('active', '');\n    } else {\n      this.removeAttribute('active');\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-toolbar-button')) {\n  customElements.define('e2-toolbar-button', ToolbarButton);\n}\n","/**\n * Toolbar Menu Element\n * A dropdown menu button designed to be used within a toolbar\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ToolbarMenu\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _isOpen: boolean = false;\n  private _justOpened: boolean = false;\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['label', 'icon', 'theme', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.bindEvents();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          position: relative;\n        }\n\n        .button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 4px;\n          padding: 6px 12px;\n          border: 1px solid transparent;\n          background: transparent;\n          color: var(--text-color, #333);\n          font-family: inherit;\n          font-size: inherit;\n          cursor: pointer;\n          border-radius: 3px;\n          min-height: 24px;\n          transition: all 0.15s ease;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n\n        .button:hover {\n          background: var(--button-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        .button:active,\n        .button.open {\n          background: var(--button-active-bg, rgba(0, 0, 0, 0.2));\n        }\n\n        .button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        :host(.theme-light) .button {\n          color: var(--text-color-light, #333) !important;\n        }\n\n        :host(.theme-light) .button:hover {\n          background: var(--button-hover-bg-light, rgba(0, 0, 0, 0.1));\n          color: var(--text-color-light, #333) !important;\n        }\n\n        :host(.theme-light) .button:active,\n        :host(.theme-light) .button.open {\n          background: var(--button-active-bg-light, rgba(0, 0, 0, 0.2));\n          color: var(--text-color-light, #333) !important;\n        }\n\n        :host(.theme-dark) .button {\n          color: var(--text-color-dark, #fff) !important;\n        }\n\n        :host(.theme-dark) .button:hover {\n          background: var(--button-hover-bg-dark, rgba(255, 255, 255, 0.1));\n          color: var(--text-color-dark, #fff) !important;\n        }\n\n        :host(.theme-dark) .button:active,\n        :host(.theme-dark) .button.open {\n          background: var(--button-active-bg-dark, rgba(255, 255, 255, 0.2));\n          color: var(--text-color-dark, #fff) !important;\n        }\n\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .button {\n            color: var(--text-color-dark, #fff) !important;\n          }\n\n          :host(.theme-auto) .button:hover {\n            background: var(--button-hover-bg-dark, rgba(255, 255, 255, 0.1));\n            color: var(--text-color-dark, #fff) !important;\n          }\n\n          :host(.theme-auto) .button:active,\n          :host(.theme-auto) .button.open {\n            background: var(--button-active-bg-dark, rgba(255, 255, 255, 0.2));\n            color: var(--text-color-dark, #fff) !important;\n          }\n        }\n\n        @media (prefers-color-scheme: light) {\n          :host(.theme-auto) .button {\n            color: var(--text-color-light, #333) !important;\n          }\n\n          :host(.theme-auto) .button:hover {\n            background: var(--button-hover-bg-light, rgba(0, 0, 0, 0.1));\n            color: var(--text-color-light, #333) !important;\n          }\n\n          :host(.theme-auto) .button:active,\n          :host(.theme-auto) .button.open {\n            background: var(--button-active-bg-light, rgba(0, 0, 0, 0.2));\n            color: var(--text-color-light, #333) !important;\n          }\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          flex-shrink: 0;\n        }\n\n        .label {\n          white-space: nowrap;\n          margin-left: 4px;\n        }\n\n        .dropdown-arrow {\n          width: 0;\n          height: 0;\n          border-left: 4px solid transparent;\n          border-right: 4px solid transparent;\n          border-top: 4px solid currentColor;\n          margin-left: 4px;\n          flex-shrink: 0;\n        }\n\n        .dropdown {\n          position: absolute;\n          top: 100%;\n          left: 0;\n          z-index: 9999;\n          display: none;\n          min-width: 180px;\n          background: var(--context-menu-bg, #ffffff);\n          border: 1px solid var(--context-menu-border, #d0d0d0);\n          border-radius: 4px;\n          box-shadow: var(--context-menu-shadow, 0 2px 8px rgba(0, 0, 0, 0.15));\n          padding: 4px 0;\n          font-family: inherit;\n          font-size: 14px;\n          margin-top: 2px;\n        }\n\n        .dropdown.open {\n          display: block;\n        }\n\n        :host(.theme-light) .dropdown {\n          background: var(--context-menu-bg-light, #ffffff);\n          border-color: var(--context-menu-border-light, #d0d0d0);\n          box-shadow: var(--context-menu-shadow-light, 0 2px 8px rgba(0, 0, 0, 0.15));\n        }\n\n        :host(.theme-dark) .dropdown {\n          background: var(--context-menu-bg-dark, #2a2a2a);\n          border-color: var(--context-menu-border-dark, #444444);\n          box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n        }\n\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .dropdown {\n            background: var(--context-menu-bg-dark, #2a2a2a);\n            border-color: var(--context-menu-border-dark, #444444);\n            box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n          }\n        }\n\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n      <button class=\"button\">\n        <span class=\"icon\" style=\"display: none;\"></span>\n        <span class=\"label\"></span>\n        <div class=\"dropdown-arrow\"></div>\n      </button>\n      <div class=\"dropdown\">\n        <slot></slot>\n      </div>\n    `;\n\n    const button = shadowRoot.querySelector('.button')!;\n    button.addEventListener('click', this.handleButtonClick.bind(this));\n  }\n\n  private bindEvents(): void {\n    // Close menu when clicking outside\n    document.addEventListener('click', this.handleDocumentClick.bind(this));\n\n    // Close menu on escape key\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n    // Handle window resize\n    window.addEventListener('resize', this.handleWindowResize.bind(this));\n\n    // Listen for item clicks to close menu\n    this.addEventListener('click', this.handleItemClick.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('toolbar-menu');\n    }\n    this.updateContent();\n\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n\n    // Ensure initial theme is applied to child items\n    setTimeout(() => {\n      const currentTheme = this.getCurrentTheme();\n      this.applyTheme(currentTheme);\n    }, 0);\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'label':\n      case 'icon':\n        this.updateContent();\n        break;\n      case 'theme':\n        // If theme attribute is being set, use explicit theme\n        // If theme attribute is being removed, switch to inheritance\n        if (newValue) {\n          this.theme = newValue as Theme;\n        } else if (this.isConnected) {\n          // Attribute was removed, switch to inheritance\n          applyEffectiveTheme(this);\n          this._themeCleanup = setupThemeInheritance(this);\n        }\n        break;\n      case 'disabled':\n        this.updateDisabled();\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const shadowRoot = this.shadowRoot!;\n    const iconSpan = shadowRoot.querySelector('.icon') as HTMLSpanElement;\n    const labelSpan = shadowRoot.querySelector('.label') as HTMLSpanElement;\n\n    const icon = this.getAttribute('icon');\n    const label = this.getAttribute('label') || '';\n\n    if (icon) {\n      iconSpan.textContent = icon;\n      iconSpan.style.display = 'inline-block';\n    } else {\n      iconSpan.style.display = 'none';\n    }\n\n    labelSpan.textContent = label;\n  }\n\n  private updateDisabled(): void {\n    const button = this.shadowRoot!.querySelector(\n      '.button'\n    )! as HTMLButtonElement;\n    button.disabled = this.hasAttribute('disabled');\n\n    if (this.hasAttribute('disabled') && this._isOpen) {\n      this.close();\n    }\n  }\n\n  private handleButtonClick(event: Event): void {\n    if (this.hasAttribute('disabled')) return;\n\n    event.stopPropagation();\n\n    if (this._isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private handleDocumentClick(event: MouseEvent): void {\n    if (!this._isOpen) return;\n\n    // Ignore the click that just opened the menu\n    if (this._justOpened) {\n      this._justOpened = false;\n      return;\n    }\n\n    const target = event.target as Node;\n    if (!this.contains(target) && !this.shadowRoot?.contains(target)) {\n      this.close();\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (!this._isOpen) return;\n\n    switch (event.key) {\n      case 'Escape':\n        event.preventDefault();\n        this.close();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextItem();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousItem();\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.activateFocusedItem();\n        break;\n    }\n  }\n\n  private handleWindowResize(): void {\n    if (this._isOpen) {\n      this.close();\n    }\n  }\n\n  private handleItemClick(event: Event): void {\n    // Close menu when any item is clicked\n    const target = event.target as HTMLElement;\n    if (\n      target.tagName === 'E2-CONTEXT-MENU-ITEM' ||\n      target.closest('e2-context-menu-item')\n    ) {\n      // Small delay to allow the item click event to be processed first\n      setTimeout(() => this.close(), 0);\n    }\n  }\n\n  private focusNextItem(): void {\n    const items = this.querySelectorAll('e2-context-menu-item:not([disabled])');\n    const currentIndex = Array.from(items).findIndex(\n      item => item === document.activeElement || item.shadowRoot?.activeElement\n    );\n\n    const nextIndex = currentIndex < items.length - 1 ? currentIndex + 1 : 0;\n    (items[nextIndex] as HTMLElement).focus();\n  }\n\n  private focusPreviousItem(): void {\n    const items = this.querySelectorAll('e2-context-menu-item:not([disabled])');\n    const currentIndex = Array.from(items).findIndex(\n      item => item === document.activeElement || item.shadowRoot?.activeElement\n    );\n\n    const prevIndex = currentIndex > 0 ? currentIndex - 1 : items.length - 1;\n    (items[prevIndex] as HTMLElement).focus();\n  }\n\n  private activateFocusedItem(): void {\n    const focused = document.activeElement;\n    if (focused && focused.tagName === 'E2-CONTEXT-MENU-ITEM') {\n      (focused as any).click();\n    }\n  }\n\n  private adjustPosition(): void {\n    const dropdown = this.shadowRoot!.querySelector('.dropdown') as HTMLElement;\n    const rect = this.getBoundingClientRect();\n    const dropdownRect = dropdown.getBoundingClientRect();\n\n    // Check if dropdown would go off the right edge of the viewport\n    if (rect.left + dropdownRect.width > window.innerWidth) {\n      dropdown.style.left = 'auto';\n      dropdown.style.right = '0';\n    } else {\n      dropdown.style.left = '0';\n      dropdown.style.right = 'auto';\n    }\n\n    // Check if dropdown would go off the bottom edge of the viewport\n    if (rect.bottom + dropdownRect.height > window.innerHeight) {\n      dropdown.style.top = 'auto';\n      dropdown.style.bottom = '100%';\n      dropdown.style.marginTop = '0';\n      dropdown.style.marginBottom = '2px';\n    } else {\n      dropdown.style.top = '100%';\n      dropdown.style.bottom = 'auto';\n      dropdown.style.marginTop = '2px';\n      dropdown.style.marginBottom = '0';\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n\n    // Clean up any existing theme inheritance\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n\n    // Apply the theme and update _theme since this is an explicit assignment\n    applyTheme(this, value);\n\n    // Apply to children\n    this.applyThemeToChildren(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    // Only update _theme if this is an explicit theme change (via setter)\n    // Don't update it during inheritance-based theme application\n    applyTheme(this, theme);\n\n    // Apply theme to all child context menu items and separators\n    this.applyThemeToChildren(theme);\n  }\n\n  private applyThemeToChildren(theme: Theme): void {\n    const childItems = this.querySelectorAll(\n      'e2-context-menu, e2-context-menu-item, e2-context-menu-separator, e2-context-menu-menu'\n    );\n\n    childItems.forEach(child => {\n      // Set the theme attribute so the component can inherit properly\n      child.setAttribute('theme', theme);\n\n      // Also call applyTheme if available for immediate application\n      if (typeof (child as any).applyTheme === 'function') {\n        (child as any).applyTheme(theme);\n      }\n    });\n  }\n\n  private getCurrentTheme(): Theme {\n    // If element has explicit theme, use it\n    if (this.hasAttribute('theme')) {\n      const explicitTheme = this.getAttribute('theme') as Theme;\n      return explicitTheme;\n    }\n\n    // Look up the DOM tree for any element with theme classes\n    const inheritedTheme = this.findInheritedTheme();\n    return inheritedTheme;\n  }\n\n  private findInheritedTheme(): Theme {\n    let current = this.parentElement;\n    while (current) {\n      // Check for explicit theme attribute first\n      const themeAttr = current.getAttribute('theme');\n      if (themeAttr && ['light', 'dark', 'auto'].includes(themeAttr)) {\n        return themeAttr as Theme;\n      }\n\n      // Check for theme classes\n      if (current.classList.contains('theme-light')) {\n        return 'light';\n      }\n      if (current.classList.contains('theme-dark')) {\n        return 'dark';\n      }\n      if (current.classList.contains('theme-auto')) {\n        return 'auto';\n      }\n\n      current = current.parentElement;\n    }\n\n    // Fallback to auto if no theme found\n    return 'auto';\n  }\n\n  get label(): string {\n    return this.getAttribute('label') || '';\n  }\n\n  set label(value: string) {\n    this.setAttribute('label', value);\n  }\n\n  get icon(): string {\n    return this.getAttribute('icon') || '';\n  }\n\n  set icon(value: string) {\n    this.setAttribute('icon', value);\n  }\n\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  open(): void {\n    if (this.hasAttribute('disabled') || this._isOpen) return;\n\n    // Close other toolbar menus in the same toolbar\n    const parentToolbar = this.closest('e2-toolbar');\n    if (\n      parentToolbar &&\n      typeof (parentToolbar as any).closeAllMenus === 'function'\n    ) {\n      (parentToolbar as any).closeAllMenus(this);\n    }\n\n    this._isOpen = true;\n    const button = this.shadowRoot!.querySelector('.button')!;\n    const dropdown = this.shadowRoot!.querySelector('.dropdown')!;\n\n    button.classList.add('open');\n    dropdown.classList.add('open');\n\n    // Adjust position to stay within viewport\n    this.adjustPosition();\n\n    // Set the flag to prevent immediate closing\n    this._justOpened = true;\n\n    // Ensure all child items have the correct theme\n    const currentTheme = this.getCurrentTheme();\n    this.applyTheme(currentTheme);\n\n    // Dispatch show event\n    const showEvent = new CustomEvent('toolbar-menu-show', {\n      detail: {\n        menuId: this.id,\n        menu: this,\n      },\n      bubbles: true,\n      cancelable: true,\n    });\n\n    this.dispatchEvent(showEvent);\n  }\n\n  close(): void {\n    if (!this._isOpen) return;\n\n    this._isOpen = false;\n    const button = this.shadowRoot!.querySelector('.button')!;\n    const dropdown = this.shadowRoot!.querySelector('.dropdown')!;\n\n    button.classList.remove('open');\n    dropdown.classList.remove('open');\n\n    // Dispatch hide event\n    const hideEvent = new CustomEvent('toolbar-menu-hide', {\n      detail: {\n        menuId: this.id,\n        menu: this,\n      },\n      bubbles: true,\n      cancelable: true,\n    });\n\n    this.dispatchEvent(hideEvent);\n  }\n\n  toggle(): void {\n    if (this._isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-toolbar-menu')) {\n  customElements.define('e2-toolbar-menu', ToolbarMenu);\n}\n","/**\n * Toolbar Separator Element\n * A visual separator for toolbar items\n */\n\nimport { Theme } from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  getShadowRoot,\n  notifyThemeChange,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class ToolbarSeparator extends HTMLElement {\n  private _theme: Theme = 'auto';\n  private _themeCleanup?: () => void;\n\n  static get observedAttributes(): string[] {\n    return ['theme'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          width: 1px;\n          height: 24px;\n          background: var(--separator-color, #ccc);\n          margin: 0 4px;\n          flex-shrink: 0;\n        }\n\n        :host(.theme-dark) {\n          background: var(--separator-color-dark, #555);\n        }\n      </style>\n    `;\n  }\n\n  connectedCallback(): void {\n    // Set up theme inheritance if no explicit theme is set\n    if (!this.hasAttribute('theme')) {\n      applyEffectiveTheme(this);\n      this._themeCleanup = setupThemeInheritance(this);\n    } else {\n      this.applyTheme(this._theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme inheritance listener\n    if (this._themeCleanup) {\n      this._themeCleanup();\n      this._themeCleanup = undefined;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        // Clean up existing theme inheritance when explicit theme is set\n        if (this._themeCleanup) {\n          this._themeCleanup();\n          this._themeCleanup = undefined;\n        }\n        this.theme = newValue as Theme;\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n    // Notify child elements of theme change\n    notifyThemeChange(this, value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-toolbar-separator')) {\n  customElements.define('e2-toolbar-separator', ToolbarSeparator);\n}\n","/**\n * TreeView Element\n * A hierarchical tree component supporting expand/collapse, selection, and multi-select\n */\n\nimport {\n  EditorElementProperties,\n  Theme,\n  TreeViewCollapseEvent,\n  TreeViewContext,\n  TreeViewExpandEvent,\n  TreeViewItem,\n  TreeViewItemClickEvent,\n  TreeViewItemDoubleClickEvent,\n  TreeViewSelectionChangeEvent,\n} from '../../types';\nimport {\n  applyEffectiveTheme,\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n  setupThemeInheritance,\n} from '../../utils';\n\nexport class TreeView extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _themeCleanup?: () => void;\n  private _items: TreeViewItem[] = [];\n  private _multiSelect: boolean = false;\n  private _selectedItems: Set<string> = new Set();\n  private _expandedItems: Set<string> = new Set();\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'multi-select'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          border: 1px solid var(--treeview-border, #ccc);\n          background: var(--treeview-bg, #fff);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          overflow: auto;\n          min-height: 100px;\n          box-sizing: border-box;\n        }\n\n        :host *,\n        :host *::before,\n        :host *::after {\n          box-sizing: border-box;\n        }\n\n        :host(.theme-dark) {\n          background: var(--treeview-bg-dark, #1e1e1e);\n          border-color: var(--treeview-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .treeview-container {\n          width: 100%;\n          height: 100%;\n          padding: 2px;\n        }\n\n        .tree-item {\n          display: block;\n          user-select: none;\n        }\n\n        .tree-item-content {\n          display: flex;\n          align-items: center;\n          padding: 2px 4px;\n          cursor: pointer;\n          border-radius: 3px;\n          min-height: 22px;\n          max-width: 100%;\n        }\n\n        .tree-item-content:hover {\n          background: var(--treeview-item-hover-bg, #f0f0f0);\n        }\n\n        :host(.theme-dark) .tree-item-content:hover {\n          background: var(--treeview-item-hover-bg-dark, #2d2d2d);\n        }\n\n        .tree-item-content.selected {\n          background: var(--treeview-item-selected-bg, #0078d4);\n          color: var(--treeview-item-selected-text, #fff);\n        }\n\n        :host(.theme-dark) .tree-item-content.selected {\n          background: var(--treeview-item-selected-bg-dark, #0078d4);\n          color: var(--treeview-item-selected-text-dark, #fff);\n        }\n\n        .tree-item-content.disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n\n        .tree-item-expand {\n          width: 16px;\n          height: 16px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-right: 4px;\n          cursor: pointer;\n          font-size: 12px;\n          border-radius: 2px;\n          flex-shrink: 0;\n        }\n\n        .tree-item-expand:hover {\n          background: var(--treeview-expand-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-dark) .tree-item-expand:hover {\n          background: var(--treeview-expand-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        .tree-item-expand.has-children::before {\n          content: '▶';\n          transition: transform 0.2s ease;\n        }\n\n        .tree-item-expand.expanded::before {\n          transform: rotate(90deg);\n        }\n\n        .tree-item-icon {\n          width: 16px;\n          height: 16px;\n          margin-right: 6px;\n          flex-shrink: 0;\n          font-size: 14px;\n          text-align: center;\n          line-height: 16px;\n        }\n\n        .tree-item-label {\n          flex: 1;\n          min-width: 0;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow: hidden;\n        }\n\n        .tree-item-children {\n          margin-left: 16px;\n          border-left: 1px dotted var(--treeview-guide-color, #ccc);\n          position: relative;\n          max-width: calc(100% - 16px);\n        }\n\n        :host(.theme-dark) .tree-item-children {\n          border-left-color: var(--treeview-guide-color-dark, #555);\n        }\n\n        .tree-item-children.collapsed {\n          display: none;\n        }\n\n        .tree-item-children::before {\n          content: '';\n          position: absolute;\n          left: -1px;\n          top: 0;\n          bottom: 0;\n          width: 1px;\n          background: var(--treeview-guide-color, #ccc);\n        }\n\n        :host(.theme-dark) .tree-item-children::before {\n          background: var(--treeview-guide-color-dark, #555);\n        }\n\n        .empty-message {\n          padding: 20px;\n          text-align: center;\n          color: var(--treeview-empty-text, #666);\n          font-style: italic;\n        }\n\n        :host(.theme-dark) .empty-message {\n          color: var(--treeview-empty-text-dark, #999);\n        }\n      </style>\n      <div class=\"treeview-container\">\n        <div class=\"tree-content\"></div>\n      </div>\n    `;\n\n    this.setupEventListeners();\n    this.setupTheme();\n  }\n\n  private setupEventListeners(): void {\n    const container = this.shadowRoot!.querySelector(\n      '.tree-content'\n    ) as HTMLElement;\n\n    container.addEventListener('click', e => {\n      this.handleClick(e);\n    });\n\n    container.addEventListener('dblclick', e => {\n      this.handleDoubleClick(e);\n    });\n\n    container.addEventListener('contextmenu', e => {\n      this.handleContextMenu(e);\n    });\n  }\n\n  private setupTheme(): void {\n    this._themeCleanup = setupThemeInheritance(this, theme => {\n      this._theme = theme;\n      applyTheme(this, theme);\n    });\n  }\n\n  private handleClick(e: Event): void {\n    const target = e.target as HTMLElement;\n\n    // Handle expand/collapse click\n    if (target.classList.contains('tree-item-expand')) {\n      e.stopPropagation();\n      const itemElement = target.closest('.tree-item') as HTMLElement;\n      const itemId = itemElement.dataset.itemId;\n      if (itemId) {\n        this.toggleExpanded(itemId);\n      }\n      return;\n    }\n\n    // Handle item selection click\n    const itemContent = target.closest('.tree-item-content') as HTMLElement;\n    if (itemContent) {\n      const itemElement = itemContent.closest('.tree-item') as HTMLElement;\n      const itemId = itemElement.dataset.itemId;\n      if (itemId) {\n        const item = this.findItemById(itemId);\n        if (item && !item.disabled) {\n          this.handleItemClick(itemId, e as MouseEvent);\n        }\n      }\n    }\n  }\n\n  private handleDoubleClick(e: Event): void {\n    const target = e.target as HTMLElement;\n    const itemContent = target.closest('.tree-item-content') as HTMLElement;\n\n    if (itemContent) {\n      const itemElement = itemContent.closest('.tree-item') as HTMLElement;\n      const itemId = itemElement.dataset.itemId;\n      if (itemId) {\n        const item = this.findItemById(itemId);\n        if (item && !item.disabled) {\n          this.dispatchItemDoubleClick(item, itemId);\n        }\n      }\n    }\n  }\n\n  private handleContextMenu(e: Event): void {\n    const mouseEvent = e as MouseEvent;\n    const target = mouseEvent.target as HTMLElement;\n\n    // Find the clicked tree item (if any)\n    const itemContent = target.closest('.tree-item-content') as HTMLElement;\n    let item: TreeViewItem | null = null;\n    let itemId: string | null = null;\n\n    if (itemContent) {\n      const itemElement = itemContent.closest('.tree-item') as HTMLElement;\n      itemId = itemElement?.dataset.itemId || null;\n      if (itemId) {\n        item = this.findItemById(itemId);\n      }\n    }\n\n    // Add component context to the event\n    const componentContext: TreeViewContext = {\n      componentType: 'tree-view',\n      componentId: this.id || generateId(),\n      component: this,\n      item,\n      itemId,\n    };\n\n    // Add the context to the event\n    (mouseEvent as any).componentContext = componentContext;\n  }\n\n  private handleItemClick(itemId: string, event: MouseEvent): void {\n    const item = this.findItemById(itemId);\n    if (!item) return;\n\n    const wasSelected = this._selectedItems.has(itemId);\n    const addedItems: TreeViewItem[] = [];\n    const removedItems: TreeViewItem[] = [];\n\n    if (this._multiSelect && (event.ctrlKey || event.metaKey)) {\n      // Toggle selection with Ctrl/Cmd\n      if (wasSelected) {\n        this._selectedItems.delete(itemId);\n        removedItems.push(item);\n      } else {\n        this._selectedItems.add(itemId);\n        addedItems.push(item);\n      }\n    } else {\n      // Single selection or clear and select\n      const previouslySelected = Array.from(this._selectedItems);\n      this._selectedItems.clear();\n\n      // Add previously selected items to removed list\n      previouslySelected.forEach(id => {\n        const prevItem = this.findItemById(id);\n        if (prevItem) removedItems.push(prevItem);\n      });\n\n      if (!wasSelected || previouslySelected.length > 1) {\n        this._selectedItems.add(itemId);\n        addedItems.push(item);\n      }\n    }\n\n    this.updateSelection();\n\n    // Dispatch events\n    this.dispatchSelectionChange(addedItems, removedItems);\n    this.dispatchItemClick(item, itemId, event);\n  }\n\n  private toggleExpanded(itemId: string): void {\n    const item = this.findItemById(itemId);\n    if (!item || !item.children || item.children.length === 0) return;\n\n    const wasExpanded = this._expandedItems.has(itemId);\n\n    if (wasExpanded) {\n      this._expandedItems.delete(itemId);\n      this.dispatchCollapseEvent(item, itemId);\n    } else {\n      this._expandedItems.add(itemId);\n      this.dispatchExpandEvent(item, itemId);\n    }\n\n    this.render();\n  }\n\n  private findItemById(\n    id: string,\n    items: TreeViewItem[] = this._items\n  ): TreeViewItem | null {\n    for (const item of items) {\n      if (item.id === id) return item;\n      if (item.children) {\n        const found = this.findItemById(id, item.children);\n        if (found) return found;\n      }\n    }\n    return null;\n  }\n\n  private updateSelection(): void {\n    const allItems = this.shadowRoot!.querySelectorAll('.tree-item-content');\n    allItems.forEach(element => {\n      const itemElement = element.closest('.tree-item') as HTMLElement;\n      const itemId = itemElement.dataset.itemId;\n      if (itemId) {\n        element.classList.toggle('selected', this._selectedItems.has(itemId));\n      }\n    });\n  }\n\n  private render(): void {\n    const container = this.shadowRoot!.querySelector(\n      '.tree-content'\n    ) as HTMLElement;\n\n    if (this._items.length === 0) {\n      container.innerHTML =\n        '<div class=\"empty-message\">No items to display</div>';\n      return;\n    }\n\n    container.innerHTML = this.renderItems(this._items);\n  }\n\n  private renderItems(items: TreeViewItem[], level: number = 0): string {\n    return items.map(item => this.renderItem(item, level)).join('');\n  }\n\n  private renderItem(item: TreeViewItem, level: number): string {\n    const hasChildren = item.children && item.children.length > 0;\n    const isExpanded = this._expandedItems.has(item.id);\n    const isSelected = this._selectedItems.has(item.id);\n    const isDisabled = item.disabled;\n\n    let html = `\n      <div class=\"tree-item\" data-item-id=\"${item.id}\">\n        <div class=\"tree-item-content ${isSelected ? 'selected' : ''} ${\n      isDisabled ? 'disabled' : ''\n    }\">\n          <div class=\"tree-item-expand ${hasChildren ? 'has-children' : ''} ${\n      isExpanded ? 'expanded' : ''\n    }\"></div>\n    `;\n\n    if (item.icon) {\n      html += `<div class=\"tree-item-icon\">${item.icon}</div>`;\n    }\n\n    html += `\n          <div class=\"tree-item-label\">${this.escapeHtml(item.label)}</div>\n        </div>\n    `;\n\n    if (hasChildren) {\n      html += `\n        <div class=\"tree-item-children ${isExpanded ? '' : 'collapsed'}\">\n          ${this.renderItems(item.children!, level + 1)}\n        </div>\n      `;\n    }\n\n    html += '</div>';\n    return html;\n  }\n\n  private escapeHtml(text: string): string {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  // Event dispatchers\n  private dispatchExpandEvent(item: TreeViewItem, itemId: string): void {\n    dispatchCustomEvent<TreeViewExpandEvent['detail']>(this, 'tree-expand', {\n      treeViewId: this.id || generateId(),\n      treeView: this,\n      item,\n      itemId,\n    });\n  }\n\n  private dispatchCollapseEvent(item: TreeViewItem, itemId: string): void {\n    dispatchCustomEvent<TreeViewCollapseEvent['detail']>(\n      this,\n      'tree-collapse',\n      {\n        treeViewId: this.id || generateId(),\n        treeView: this,\n        item,\n        itemId,\n      }\n    );\n  }\n\n  private dispatchSelectionChange(\n    addedItems: TreeViewItem[],\n    removedItems: TreeViewItem[]\n  ): void {\n    const selectedItems = Array.from(this._selectedItems)\n      .map(id => this.findItemById(id)!)\n      .filter(Boolean);\n\n    dispatchCustomEvent<TreeViewSelectionChangeEvent['detail']>(\n      this,\n      'tree-selection-change',\n      {\n        treeViewId: this.id || generateId(),\n        treeView: this,\n        selectedItems,\n        selectedIds: Array.from(this._selectedItems),\n        addedItems,\n        removedItems,\n      }\n    );\n  }\n\n  private dispatchItemClick(\n    item: TreeViewItem,\n    itemId: string,\n    event: MouseEvent\n  ): void {\n    dispatchCustomEvent<TreeViewItemClickEvent['detail']>(\n      this,\n      'tree-item-click',\n      {\n        treeViewId: this.id || generateId(),\n        treeView: this,\n        item,\n        itemId,\n        ctrlKey: event.ctrlKey,\n        shiftKey: event.shiftKey,\n        altKey: event.altKey,\n      }\n    );\n  }\n\n  private dispatchItemDoubleClick(item: TreeViewItem, itemId: string): void {\n    dispatchCustomEvent<TreeViewItemDoubleClickEvent['detail']>(\n      this,\n      'tree-item-dblclick',\n      {\n        treeViewId: this.id || generateId(),\n        treeView: this,\n        item,\n        itemId,\n      }\n    );\n  }\n\n  // Attribute change handler\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        applyEffectiveTheme(this);\n        break;\n      case 'disabled':\n        // Handled via CSS\n        break;\n      case 'multi-select':\n        this._multiSelect = newValue !== null;\n        if (!this._multiSelect) {\n          // Clear multiple selections if multi-select is disabled\n          const selected = Array.from(this._selectedItems);\n          if (selected.length > 1) {\n            const firstSelected = selected[0];\n            this._selectedItems.clear();\n            this._selectedItems.add(firstSelected);\n            this.updateSelection();\n          }\n        }\n        break;\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  get multiSelect(): boolean {\n    return this._multiSelect;\n  }\n\n  set multiSelect(value: boolean) {\n    if (value) {\n      this.setAttribute('multi-select', '');\n    } else {\n      this.removeAttribute('multi-select');\n    }\n  }\n\n  get items(): TreeViewItem[] {\n    return [...this._items];\n  }\n\n  set items(value: TreeViewItem[]) {\n    this._items = value || [];\n    this._selectedItems.clear();\n    this._expandedItems.clear();\n\n    // Restore expanded and selected states from item data\n    this.restoreItemStates(this._items);\n\n    this.render();\n  }\n\n  private restoreItemStates(items: TreeViewItem[]): void {\n    for (const item of items) {\n      if (item.expanded) {\n        this._expandedItems.add(item.id);\n      }\n      if (item.selected) {\n        this._selectedItems.add(item.id);\n      }\n      if (item.children) {\n        this.restoreItemStates(item.children);\n      }\n    }\n  }\n\n  get selectedItems(): TreeViewItem[] {\n    return Array.from(this._selectedItems)\n      .map(id => this.findItemById(id)!)\n      .filter(Boolean);\n  }\n\n  get selectedIds(): string[] {\n    return Array.from(this._selectedItems);\n  }\n\n  // Methods\n  selectItem(itemId: string): void {\n    if (!this._multiSelect) {\n      this._selectedItems.clear();\n    }\n    this._selectedItems.add(itemId);\n    this.updateSelection();\n  }\n\n  deselectItem(itemId: string): void {\n    this._selectedItems.delete(itemId);\n    this.updateSelection();\n  }\n\n  clearSelection(): void {\n    this._selectedItems.clear();\n    this.updateSelection();\n  }\n\n  expandItem(itemId: string): void {\n    const item = this.findItemById(itemId);\n    if (item && item.children && item.children.length > 0) {\n      this._expandedItems.add(itemId);\n      this.render();\n    }\n  }\n\n  collapseItem(itemId: string): void {\n    this._expandedItems.delete(itemId);\n    this.render();\n  }\n\n  expandAll(): void {\n    const addAllIds = (items: TreeViewItem[]) => {\n      for (const item of items) {\n        if (item.children && item.children.length > 0) {\n          this._expandedItems.add(item.id);\n          addAllIds(item.children);\n        }\n      }\n    };\n    addAllIds(this._items);\n    this.render();\n  }\n\n  collapseAll(): void {\n    this._expandedItems.clear();\n    this.render();\n  }\n\n  disconnectedCallback(): void {\n    if (this._themeCleanup) {\n      this._themeCleanup();\n    }\n  }\n}\n\n// Register the custom element\ncustomElements.define('e2-tree-view', TreeView);\n","/**\n * E2 - A collection of custom HTML elements for building editors\n *\n * This library provides a set of reusable UI components designed specifically\n * for creating level editors, sprite editors, and similar desktop-like web applications.\n */\n\n// Import and register all custom elements\nimport './elements/app/app';\nimport './elements/contextmenu/context-menu';\nimport './elements/contextmenu/context-menu-item';\nimport './elements/contextmenu/context-menu-menu';\nimport './elements/contextmenu/context-menu-separator';\nimport './elements/dialog/alert';\nimport './elements/dialog/confirm';\nimport './elements/dialog/dialog';\nimport './elements/dialog/prompt';\nimport './elements/keyvalue/keyvalue-editor';\nimport './elements/listview/list-view';\nimport './elements/notification/notification';\nimport './elements/notification/notification-container';\nimport './elements/panel/collapsible-panel';\nimport './elements/panel/split-panel';\nimport './elements/panel/split-panel-container';\nimport './elements/statusbar/status-bar';\nimport './elements/statusbar/status-item';\nimport './elements/statusbar/status-section';\nimport './elements/tabs/tab';\nimport './elements/tabs/tab-container';\nimport './elements/tabs/tab-panel';\nimport './elements/toolbar/toolbar';\nimport './elements/toolbar/toolbar-button';\nimport './elements/toolbar/toolbar-menu';\nimport './elements/toolbar/toolbar-separator';\nimport './elements/treeview/tree-view';\n\n// Export types and interfaces for TypeScript users\nexport * from './types';\n\n// Export utility functions if any\nexport * from './utils';\n\n// Version information\nexport const VERSION = '1.0.0';\n\n// Auto-registration message for development\nif (typeof window !== 'undefined' && process.env.NODE_ENV === 'development') {\n  console.log(\n    `E2 v${VERSION} loaded - Custom elements registered automatically`\n  );\n}\n"],"names":["root","factory","exports","module","define","amd","this","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","options","ctx","callback","schema","throwError","throwAll","res","validateSchema","valid","Function","getEnumerableProperty","object","key","Object","hasOwnProperty","call","getPrototypeOf","propertyIsEnumerable","testAdditionalProperty","property","result","types","properties","undefined","additionalProperties","addError","name","argument","message","JSON","stringify","preValidateProperty","makeChild","importErrors","type","Array","isArray","some","testType","bind","list","map","v","id","$id","anyOf","inner","i","title","nestedErrors","join","allOf","self","forEach","msg","length","errors","oneOf","count","filter","if","isSchema","Error","ifValid","then","else","propertyNames","subschema","prop","patternProperties","test","pattern","regexp","RegExp","_e","minProperties","keys","maxProperties","items","array","every","value","additionalItems","contains","minimum","number","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","Math","max","multiplier","pow","round","testArrays","a","j","len","deepCompareStrict","multipleOf","divisibleBy","required","n","string","match","toString","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","String","not","disallow","notTypes","schemaId","Validator","scanSchema","ValidatorResultError","SchemaContext","customFormats","create","prototype","schemas","unresolvedRefs","attributes","shouldResolve","ref","$ref","addSchema","base","scan","ourUri","uri","push","addSubSchemaArray","baseuri","addSubSchema","addSubSchemaObject","p","setSchemas","getSchema","urn","validate","resolveUrl","found","sch","schemaobj","schemaTraverser","deepMerge","superResolve","switchSchema","resolved","resolve","subctx","path","skipAttributes","ignoreProperties","indexOf","validatorErr","validator","allowUnknownAttributes","rewrite","s","fragment","URL","hash","document","substr","objectGetPath","isFinite","integer","boolean","date","Date","any","ValidationError","reduce","sum","item","makeSuffix","stack","throwFirst","stringizer","captureStackTrace","detail","err","validatorType","concat","defineProperty","get","constructor","enumerable","target","propertyName","FORMAT_REGEXPS","input","parseFloat","parseInt","isNaN","e","regex","ipv4","deepMerger","dst","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","replace","b","aKeys","bKeys","o","k","parts","split","slice","shift","decodeURIComponent","encodePath","decimalPlaces","Number","decimalParts","val","from","to","resolvedUrl","protocol","pathname","search","SchemaScanResult","resolvedUri","resolvedBase","ourBase","substring","scanArray","extends","scanObject","definitions","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","obj","r","Symbol","toStringTag","generateId","prefix","random","dispatchCustomEvent","element","eventName","event","CustomEvent","bubbles","cancelable","dispatchEvent","addGlobalCSS","css","getElementById","style","createElement","textContent","head","appendChild","createTemplate","html","template","innerHTML","trim","getShadowRoot","mode","shadowRoot","attachShadow","debounce","func","wait","timeout","args","clearTimeout","window","setTimeout","isElementVisible","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","findParentApp","current","parentElement","tagName","toLowerCase","getEffectiveTheme","explicitTheme","getAttribute","includes","parentApp","parentTheme","applyTheme","theme","classList","remove","add","applyEffectiveTheme","setupThemeInheritance","onThemeChange","handleAppThemeChange","hasAttribute","newTheme","addEventListener","removeEventListener","notifyThemeChange","appElement","initializeThemeInheritance","currentTheme","handleThemeChange","themeCleanupRef","isConnected","createToast","notification","container","dismissible","persistent","querySelector","body","existingContainer","defaultContainer","position","show","parentNode","removeChild","Toast","info","success","warning","error","E2App","HTMLElement","observedAttributes","super","_theme","_stylesInitialized","setupElement","styleElement","connectedCallback","setupAutoTheme","disconnectedCallback","mediaQueryList","matchMedia","attributeChangedCallback","oldValue","newValue","oldTheme","setCSSVariable","setProperty","getCSSVariable","getComputedStyle","getPropertyValue","customElements","ContextMenu","_visible","_justShown","boundContextMenuHandler","handleContextMenu","bindEvents","handleDocumentClick","handleKeyDown","handleWindowResize","applyEffectiveThemeFromTarget","_themeCleanup","setupTargetListeners","removeTargetListeners","hide","targetSelector","querySelectorAll","disabled","mouseEvent","preventDefault","stopPropagation","trigger","currentTarget","componentContext","clientX","clientY","clickInsideMenu","allSubMenus","subMenu","subMenuElement","focusNextItem","focusPreviousItem","activateFocusedItem","currentIndex","findIndex","activeElement","focus","focused","click","setAttribute","removeAttribute","visible","x","y","adjustPosition","requestAnimationFrame","firstItem","eventDetail","menuId","menu","resetSubMenuState","viewportWidth","viewportHeight","width","height","targets","firstTarget","targetTheme","child","ContextMenuItem","button","handleClick","tabIndex","handleFocus","updateContent","updateDisabledState","iconElement","labelElement","shortcutElement","icon","display","label","shortcut","contextMenu","closest","itemId","Event","ContextMenuMenu","_subMenuVisible","handleMouseEnter","handleMouseLeave","submenu","handleSubMenuMouseEnter","handleSubMenuMouseLeave","_subMenu","_hoverTimeout","_hideTimeout","hideSubMenu","showSubMenu","closeSiblingSubMenus","positionSubMenu","parentMenu","subMenuId","rootContextMenu","wasVisible","nestedSubMenu","itemRect","originalDisplay","visibility","submenuRect","subMenuVisible","ContextMenuSeparator","_value","AlertDialogElement","_nativeDialog","_resolvePromise","_rejectPromise","handleClose","handleCancel","close","titleElement","messageElement","buttonElement","getDefaultTitle","className","getIconForType","dialogId","dialog","buttonText","open","Promise","reject","showModal","ConfirmDialogElement","confirmButton","cancelButton","confirm","cancel","confirmed","confirmText","cancelText","danger","DialogElement","closeButton","updateTitle","updateClosable","updateSize","closable","returnValue","modal","PromptDialogElement","handleInput","handleKeydown","inputElement","multiline","currentType","textarea","replaceChild","setupInputElement","placeholder","defaultValue","HTMLInputElement","validateInput","shiftKey","isValid","toggle","select","KeyValueEditorElement","_valueProxy","_schema","_readonly","_compact","_headerTitle","_validationErrors","_validator","setupValueProxy","Proxy","set","dispatchChangeEvent","updateInputValue","validateField","deleteProperty","render","setupEventListeners","content","fieldRow","fieldType","startsWith","forAttr","componentType","componentId","component","header","headerText","renderFields","fields","entries","fieldSchema","renderField","renderNestedField","formatLabel","description","fullPath","find","inputType","getInputType","inputId","renderInput","nestedPath","renderNestedFields","errorClass","pathString","min","step","rangeMin","rangeMax","rangeStep","emailPattern","telPattern","enum","option","formatEnumOption","maxLengthAttr","str","toUpperCase","isInteger","validateFieldByPath","pathPart","validateValue","updateFieldErrorDisplayByPath","updateInputValueByPath","fieldId","checked","Boolean","range","rangeValue","nextElementSibling","stringValue","updateFieldErrorDisplay","fieldInputContainer","existingError","errorElement","tempObject","tempSchema","formatValidationError","expectedType","updateValue","updateValueByPath","finalKey","getValue","setValue","setSchema","validationResult","focusField","focusFieldByPath","readonly","compact","headerTitle","ListView","_items","_columns","_viewMode","_multiSelect","_selectedItems","Set","_lastSelectedIndex","setupEventHandlers","handleItemClick","handleItemDoubleClick","itemElement","dataset","ctrlKey","altKey","handleItemSelection","listViewId","listView","itemIndex","previousSelection","start","end","clear","has","delete","updateItemElements","dispatchSelectionChange","selectedItems","addedItems","removedItems","selectedIds","renderHeader","renderContent","headerRow","column","cell","columnId","flex","itemsContainer","emptyState","createItemElement","data","renderer","viewMode","multiSelect","columns","selectItem","deselectItem","selectAll","deselectAll","toggleItemSelection","setSelectedItems","itemIds","scrollToItem","scrollIntoView","behavior","block","getItem","addItem","removeItem","index","splice","updateItem","updates","assign","refresh","NotificationElement","_timeoutId","handleCloseClick","handleNotificationClick","dismiss","notificationId","startTimeout","progressBar","transitionDuration","NotificationContainerElement","_observer","setupMutationObserver","MutationObserver","mutations","mutation","manageNotifications","updateNotificationPositions","observe","childList","subtree","notifications","maxNotifications","excess","containerId","zIndex","disconnect","stackDirection","spacing","addNotification","removeNotification","notificationElement","getNotificationCount","CollapsiblePanel","_collapsed","_orientation","_resizeLeft","_resizeRight","_resizeTop","_resizeBottom","_minWidth","_maxWidth","_minHeight","_maxHeight","_resizing","_resizeEdge","_startPosition","_startSize","_storedSize","handleToggle","handleMouseDown","handleMouseMove","handleMouseUp","wasCollapsed","handleCollapsedChange","collapsed","panelId","panel","orientation","offsetWidth","offsetHeight","resizeEdge","getResizeEdge","cursor","getCursorForEdge","handleDocumentMouseMove","handleDocumentMouseUp","startWidth","startHeight","edge","endResize","deltaX","deltaY","newWidth","newHeight","finalWidth","finalHeight","expand","collapse","resizeLeft","toggleAttribute","resizeRight","resizeTop","resizeBottom","minWidth","maxWidth","minHeight","maxHeight","SplitPanel","_size","_minSize","_maxSize","_resizable","handleResize","size","minSize","maxSize","resizable","getCurrentSize","containerHeight","containerWidth","SplitPanelContainer","_activePanel","_nextPanelStartSize","_updatingPanelSizes","debouncedResize","updateHandles","updatePanelSizes","panels","getPanels","containerRect","handleSize","totalHandleSpace","availableSpace","totalSetSize","unsetPanels","remainingPercentage","defaultSize","actualSize","flexBasis","panelIndex","currentPanel","nextPanel","relativeX","relativeY","onBorder","borderStart","borderEnd","startSize","delta","deltaPercentage","newCurrentSize","newNextSize","updateHoverCursor","overHandle","finalSize","resizePanel","getPanelSizes","sizes","resetPanelSizes","equalSize","StatusBar","_temporaryMessageTimeout","showMessage","duration","messageEl","textEl","temporary","hideMessage","getItemsInSection","section","slot","children","clearSection","StatusItem","_type","_label","_clickable","updateDisplay","itemType","iconEl","labelEl","valueEl","progressContainer","progressFill","progressText","updateProgressDisplay","fill","text","numValue","percentage","clickable","setProgress","progress","setIcon","StatusSection","_position","priority","firstChild","getItems","getItemsByPriority","Tab","_active","_closable","_icon","tabId","tab","MouseEvent","active","_pendingSetup","setup","TabContainer","_activeTabId","_tabPosition","handleTabClick","handleTabClose","tabSlot","panelSlot","updateTabsAndPanels","tabElement","selectTab","matches","removeTab","panelElement","previousTabId","effectiveTheme","activeTabId","activePanelId","remainingTabs","nextTab","nextPanelId","refreshThemes","tabs","correspondingPanel","activeTabElement","selectTabById","addTab","finalTabId","finalPanelId","removeTabById","tabPosition","TabPanel","scrollToTop","scrollTop","scrollToBottom","scrollHeight","scrollToElement","clearContent","setContent","appendContent","insertAdjacentHTML","prependContent","loading","emptyMessage","Toolbar","closeAllMenus","exceptMenu","ToolbarButton","updateDisabled","updateActive","iconSpan","labelSpan","customEvent","buttonId","ToolbarMenu","_isOpen","_justOpened","handleButtonClick","getCurrentTheme","dropdown","dropdownRect","marginTop","marginBottom","applyThemeToChildren","findInheritedTheme","themeAttr","isOpen","parentToolbar","showEvent","hideEvent","ToolbarSeparator","TreeView","_expandedItems","setupTheme","handleDoubleClick","toggleExpanded","itemContent","findItemById","dispatchItemDoubleClick","wasSelected","metaKey","previouslySelected","prevItem","updateSelection","dispatchItemClick","dispatchCollapseEvent","dispatchExpandEvent","renderItems","level","renderItem","hasChildren","isExpanded","isSelected","isDisabled","escapeHtml","div","treeViewId","treeView","selected","firstSelected","restoreItemStates","expanded","clearSelection","expandItem","collapseItem","expandAll","addAllIds","collapseAll","VERSION"],"sourceRoot":""}