{"version":3,"file":"e2.min.js","mappings":"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","sources":["webpack://E2/webpack/universalModuleDefinition","webpack://E2/webpack/bootstrap","webpack://E2/webpack/runtime/define property getters","webpack://E2/webpack/runtime/hasOwnProperty shorthand","webpack://E2/webpack/runtime/make namespace object","webpack://E2/./src/utils.ts","webpack://E2/./src/elements/app/app.ts","webpack://E2/./src/elements/contextmenu/context-menu.ts","webpack://E2/./src/elements/contextmenu/context-menu-item.ts","webpack://E2/./src/elements/contextmenu/context-menu-separator.ts","webpack://E2/./src/elements/dialog/alert.ts","webpack://E2/./src/elements/dialog/confirm.ts","webpack://E2/./src/elements/dialog/dialog.ts","webpack://E2/./src/elements/dialog/prompt.ts","webpack://E2/./src/elements/notification/notification.ts","webpack://E2/./src/elements/notification/notification-container.ts","webpack://E2/./src/elements/panel/collapsible-panel.ts","webpack://E2/./src/elements/panel/split-panel.ts","webpack://E2/./src/elements/panel/split-panel-container.ts","webpack://E2/./src/elements/statusbar/status-bar.ts","webpack://E2/./src/elements/statusbar/status-item.ts","webpack://E2/./src/elements/statusbar/status-section.ts","webpack://E2/./src/elements/tabs/tab.ts","webpack://E2/./src/elements/tabs/tab-container.ts","webpack://E2/./src/elements/tabs/tab-panel.ts","webpack://E2/./src/elements/toolbar/toolbar.ts","webpack://E2/./src/elements/toolbar/toolbar-button.ts","webpack://E2/./src/elements/toolbar/toolbar-menu.ts","webpack://E2/./src/elements/toolbar/toolbar-separator.ts","webpack://E2/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"E2\"] = factory();\n\telse\n\t\troot[\"E2\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Utility functions for editor elements\n */\n\n/**\n * Generate a unique ID for elements\n */\nexport function generateId(prefix = 'element'): string {\n  return `${prefix}-${Math.random().toString(36).substring(2, 9)}`;\n}\n\n/**\n * Dispatch a custom event from an element\n */\nexport function dispatchCustomEvent<T = any>(\n  element: HTMLElement,\n  eventName: string,\n  detail?: T,\n  options: CustomEventInit = {}\n): boolean {\n  const event = new CustomEvent(eventName, {\n    detail,\n    bubbles: true,\n    cancelable: true,\n    ...options,\n  });\n\n  return element.dispatchEvent(event);\n}\n\n/**\n * Add CSS to the document head if it doesn't already exist\n */\nexport function addGlobalCSS(css: string, id?: string): void {\n  if (id && document.getElementById(id)) {\n    return; // CSS already added\n  }\n\n  const style = document.createElement('style');\n  if (id) {\n    style.id = id;\n  }\n  style.textContent = css;\n  document.head.appendChild(style);\n}\n\n/**\n * Create a template element with the given HTML\n */\nexport function createTemplate(html: string): HTMLTemplateElement {\n  const template = document.createElement('template');\n  template.innerHTML = html.trim();\n  return template;\n}\n\n/**\n * Get or create a shadow root for an element\n */\nexport function getShadowRoot(\n  element: HTMLElement,\n  options: ShadowRootInit = { mode: 'open' }\n): ShadowRoot {\n  return element.shadowRoot || element.attachShadow(options);\n}\n\n/**\n * Debounce function to limit how often a function can be called\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: number;\n\n  return function executedFunction(...args: Parameters<T>) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n\n    clearTimeout(timeout);\n    timeout = window.setTimeout(later, wait);\n  };\n}\n\n/**\n * Check if an element is visible in the viewport\n */\nexport function isElementVisible(element: HTMLElement): boolean {\n  const rect = element.getBoundingClientRect();\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <=\n      (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n}\n\n/**\n * Apply theme class to an element\n */\nexport function applyTheme(\n  element: HTMLElement,\n  theme: 'light' | 'dark' | 'auto'\n): void {\n  element.classList.remove('theme-light', 'theme-dark', 'theme-auto');\n  element.classList.add(`theme-${theme}`);\n}\n\n/**\n * Create and show a toast notification programmatically\n */\nexport interface CreateToastOptions {\n  title?: string;\n  timeout?: number;\n  dismissible?: boolean;\n  persistent?: boolean;\n  container?: HTMLElement | string;\n}\n\nexport function createToast(\n  type: 'info' | 'success' | 'warning' | 'error',\n  message: string,\n  options: CreateToastOptions = {}\n): Promise<void> {\n  // Create the notification element\n  const notification = document.createElement('e2-notification') as any;\n  notification.type = type;\n  notification.message = message;\n\n  if (options.title) {\n    notification.title = options.title;\n  }\n\n  if (options.timeout !== undefined) {\n    notification.timeout = options.timeout;\n  }\n\n  if (options.dismissible !== undefined) {\n    notification.dismissible = options.dismissible;\n  }\n\n  if (options.persistent !== undefined) {\n    notification.persistent = options.persistent;\n  }\n\n  // Find or create container\n  let container: HTMLElement;\n\n  if (options.container) {\n    if (typeof options.container === 'string') {\n      const found = document.querySelector(options.container);\n      if (found) {\n        container = found as HTMLElement;\n      } else {\n        container = document.body;\n      }\n    } else {\n      container = options.container;\n    }\n  } else {\n    // Look for existing notification container\n    const existingContainer = document.querySelector(\n      'e2-notification-container'\n    );\n    if (existingContainer) {\n      container = existingContainer as HTMLElement;\n    } else {\n      // Create default container\n      const defaultContainer = document.createElement(\n        'e2-notification-container'\n      ) as any;\n      defaultContainer.position = 'top-right';\n      document.body.appendChild(defaultContainer);\n      container = defaultContainer;\n    }\n  }\n\n  // Add notification to container\n  container.appendChild(notification);\n\n  // Show the notification and clean up when done\n  return notification.show().then(() => {\n    // Remove from DOM after hiding animation completes\n    if (notification.parentNode) {\n      notification.parentNode.removeChild(notification);\n    }\n  });\n}\n\n/**\n * Toast API for convenient toast creation\n */\nexport const Toast = {\n  /**\n   * Show an info toast\n   */\n  info: (message: string, options?: CreateToastOptions): Promise<void> =>\n    createToast('info', message, options),\n\n  /**\n   * Show a success toast\n   */\n  success: (message: string, options?: CreateToastOptions): Promise<void> =>\n    createToast('success', message, options),\n\n  /**\n   * Show a warning toast\n   */\n  warning: (message: string, options?: CreateToastOptions): Promise<void> =>\n    createToast('warning', message, options),\n\n  /**\n   * Show an error toast\n   */\n  error: (message: string, options?: CreateToastOptions): Promise<void> =>\n    createToast('error', message, options),\n};\n","/**\n * E2 App Element\n * A wrapper element that provides global CSS styles and theming for E2 applications\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport { applyTheme, generateId } from '../../utils';\n\nexport class E2App extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _stylesInitialized: boolean = false;\n\n  static get observedAttributes(): string[] {\n    return ['theme'];\n  }\n\n  constructor() {\n    super();\n    // Don't set up DOM in constructor - defer to connectedCallback\n  }\n\n  private setupElement(): void {\n    // Apply styles directly to the document head (not to the element itself)\n    // This allows global styles to cascade to child elements without interfering with DOM structure\n\n    // Check if styles are already added to avoid conflicts\n    if (!this._stylesInitialized && !document.getElementById('e2-app-styles')) {\n      const styleElement = document.createElement('style');\n      styleElement.id = 'e2-app-styles';\n      styleElement.textContent = `\n        /* CSS Reset and Base Styles */\n        e2-app, e2-app * {\n          box-sizing: border-box;\n        }\n\n        e2-app {\n          /* Layout */\n          --app-width: 100%;\n          --app-height: 100vh;\n          --app-padding: 0;\n          --app-margin: 0;\n\n          /* Typography */\n          --font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;\n          --font-size: 14px;\n          --line-height: 1.4;\n          --font-weight: 400;\n\n          /* Colors - Light Theme */\n          --bg-primary: #ffffff;\n          --bg-secondary: #f8f9fa;\n          --bg-tertiary: #e9ecef;\n          --text-primary: #212529;\n          --text-secondary: #6c757d;\n          --text-muted: #adb5bd;\n          --border-color: #dee2e6;\n          --border-color-hover: #adb5bd;\n          --accent-color: #0d6efd;\n          --accent-color-hover: #0b5ed7;\n          --success-color: #198754;\n          --warning-color: #ffc107;\n          --danger-color: #dc3545;\n\n          /* Form Controls */\n          --input-bg: #ffffff;\n          --input-border: #ced4da;\n          --input-border-focus: #86b7fe;\n          --input-text: #212529;\n          --input-placeholder: #6c757d;\n          --input-padding: 6px 12px;\n          --input-border-radius: 4px;\n          --input-font-size: 14px;\n\n          /* Buttons */\n          --button-bg: #f8f9fa;\n          --button-bg-hover: #e9ecef;\n          --button-border: #ced4da;\n          --button-text: #212529;\n          --button-padding: 6px 12px;\n          --button-border-radius: 4px;\n\n          /* Shadows */\n          --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);\n          --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n          --shadow-lg: 0 4px 6px rgba(0, 0, 0, 0.1);\n\n          /* Transitions */\n          --transition-fast: 0.15s ease-in-out;\n          --transition-normal: 0.3s ease-in-out;\n\n          /* Apply base layout */\n          display: block;\n          width: var(--app-width);\n          height: var(--app-height);\n          padding: var(--app-padding);\n          margin: var(--app-margin);\n          font-family: var(--font-family);\n          font-size: var(--font-size);\n          line-height: var(--line-height);\n          font-weight: var(--font-weight);\n          color: var(--text-primary);\n          background-color: var(--bg-primary);\n          overflow: hidden;\n        }\n\n        /* Dark Theme */\n        e2-app.theme-dark {\n          --bg-primary: #1a1a1a;\n          --bg-secondary: #2d2d2d;\n          --bg-tertiary: #404040;\n          --text-primary: #ffffff;\n          --text-secondary: #cccccc;\n          --text-muted: #999999;\n          --border-color: #404040;\n          --border-color-hover: #666666;\n          --accent-color: #4dabf7;\n          --accent-color-hover: #339af0;\n          --success-color: #51cf66;\n          --warning-color: #ffd43b;\n          --danger-color: #ff6b6b;\n\n          --input-bg: #2d2d2d;\n          --input-border: #404040;\n          --input-border-focus: #4dabf7;\n          --input-text: #ffffff;\n          --input-placeholder: #999999;\n\n          --button-bg: #2d2d2d;\n          --button-bg-hover: #404040;\n          --button-border: #404040;\n          --button-text: #ffffff;\n\n          --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.25);\n          --shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n          --shadow-lg: 0 4px 6px rgba(0, 0, 0, 0.3);\n        }\n\n        /* Auto Theme - uses system preference */\n        e2-app.theme-auto {\n          color-scheme: light dark;\n        }\n\n        @media (prefers-color-scheme: dark) {\n          e2-app.theme-auto {\n            --bg-primary: #1a1a1a;\n            --bg-secondary: #2d2d2d;\n            --bg-tertiary: #404040;\n            --text-primary: #ffffff;\n            --text-secondary: #cccccc;\n            --text-muted: #999999;\n            --border-color: #404040;\n            --border-color-hover: #666666;\n            --accent-color: #4dabf7;\n            --accent-color-hover: #339af0;\n            --success-color: #51cf66;\n            --warning-color: #ffd43b;\n            --danger-color: #ff6b6b;\n\n            --input-bg: #2d2d2d;\n            --input-border: #404040;\n            --input-border-focus: #4dabf7;\n            --input-text: #ffffff;\n            --input-placeholder: #999999;\n\n            --button-bg: #2d2d2d;\n            --button-bg-hover: #404040;\n            --button-border: #404040;\n            --button-text: #ffffff;\n\n            --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.25);\n            --shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n            --shadow-lg: 0 4px 6px rgba(0, 0, 0, 0.3);\n          }\n        }\n\n        /* Typography Styles */\n        e2-app h1, e2-app h2, e2-app h3, e2-app h4, e2-app h5, e2-app h6 {\n          margin: 0 0 0.5em 0;\n          font-weight: 600;\n          line-height: 1.2;\n          color: var(--text-primary);\n        }\n\n        e2-app h1 { font-size: 2rem; }\n        e2-app h2 { font-size: 1.5rem; }\n        e2-app h3 { font-size: 1.25rem; }\n        e2-app h4 { font-size: 1.1rem; }\n        e2-app h5 { font-size: 1rem; }\n        e2-app h6 { font-size: 0.9rem; }\n\n        e2-app p {\n          margin: 0 0 1em 0;\n          color: var(--text-primary);\n        }\n\n        e2-app small {\n          font-size: 0.875em;\n          color: var(--text-secondary);\n        }\n\n        e2-app strong {\n          font-weight: 600;\n        }\n\n        e2-app a {\n          color: var(--accent-color);\n          text-decoration: none;\n          transition: color var(--transition-fast);\n        }\n\n        e2-app a:hover {\n          color: var(--accent-color-hover);\n          text-decoration: underline;\n        }\n\n        /* Form Control Styles */\n        e2-app input[type=\"text\"],\n        e2-app input[type=\"email\"],\n        e2-app input[type=\"password\"],\n        e2-app input[type=\"number\"],\n        e2-app input[type=\"search\"],\n        e2-app input[type=\"url\"],\n        e2-app input[type=\"tel\"],\n        e2-app input[type=\"date\"],\n        e2-app input[type=\"time\"],\n        e2-app input[type=\"datetime-local\"],\n        e2-app textarea,\n        e2-app select {\n          display: block;\n          width: 100%;\n          padding: var(--input-padding);\n          font-size: var(--input-font-size);\n          font-family: var(--font-family);\n          line-height: var(--line-height);\n          color: var(--input-text);\n          background-color: var(--input-bg);\n          background-clip: padding-box;\n          border: 1px solid var(--input-border);\n          border-radius: var(--input-border-radius);\n          transition: border-color var(--transition-fast), box-shadow var(--transition-fast);\n        }\n\n        e2-app input[type=\"text\"]:focus,\n        e2-app input[type=\"email\"]:focus,\n        e2-app input[type=\"password\"]:focus,\n        e2-app input[type=\"number\"]:focus,\n        e2-app input[type=\"search\"]:focus,\n        e2-app input[type=\"url\"]:focus,\n        e2-app input[type=\"tel\"]:focus,\n        e2-app input[type=\"date\"]:focus,\n        e2-app input[type=\"time\"]:focus,\n        e2-app input[type=\"datetime-local\"]:focus,\n        e2-app textarea:focus,\n        e2-app select:focus {\n          outline: 0;\n          border-color: var(--input-border-focus);\n          box-shadow: 0 0 0 2px rgba(13, 110, 253, 0.25);\n        }\n\n        e2-app input::placeholder,\n        e2-app textarea::placeholder {\n          color: var(--input-placeholder);\n          opacity: 1;\n        }\n\n        e2-app input:disabled,\n        e2-app textarea:disabled,\n        e2-app select:disabled {\n          background-color: var(--bg-tertiary);\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        /* Textarea specific */\n        e2-app textarea {\n          resize: vertical;\n          min-height: 80px;\n        }\n\n        /* Select specific */\n        e2-app select {\n          cursor: pointer;\n        }\n\n        /* Checkbox and Radio Styles */\n        e2-app input[type=\"checkbox\"],\n        e2-app input[type=\"radio\"] {\n          width: 16px;\n          height: 16px;\n          margin: 0 8px 0 0;\n          vertical-align: middle;\n          cursor: pointer;\n          accent-color: var(--accent-color);\n        }\n\n        e2-app input[type=\"checkbox\"]:disabled,\n        e2-app input[type=\"radio\"]:disabled {\n          cursor: not-allowed;\n          opacity: 0.6;\n        }\n\n        /* Range Input */\n        e2-app input[type=\"range\"] {\n          width: 100%;\n          height: 6px;\n          background: var(--bg-tertiary);\n          border-radius: 3px;\n          outline: none;\n          cursor: pointer;\n          accent-color: var(--accent-color);\n        }\n\n        /* File Input */\n        e2-app input[type=\"file\"] {\n          display: block;\n          width: 100%;\n          padding: var(--input-padding);\n          font-size: var(--input-font-size);\n          font-family: var(--font-family);\n          color: var(--input-text);\n          background-color: var(--input-bg);\n          border: 1px solid var(--input-border);\n          border-radius: var(--input-border-radius);\n          cursor: pointer;\n        }\n\n        /* Button Styles */\n        e2-app button,\n        e2-app input[type=\"button\"],\n        e2-app input[type=\"submit\"],\n        e2-app input[type=\"reset\"] {\n          display: inline-block;\n          padding: var(--button-padding);\n          font-size: var(--input-font-size);\n          font-family: var(--font-family);\n          font-weight: 500;\n          line-height: var(--line-height);\n          color: var(--button-text);\n          text-align: center;\n          text-decoration: none;\n          vertical-align: middle;\n          cursor: pointer;\n          background-color: var(--button-bg);\n          border: 1px solid var(--button-border);\n          border-radius: var(--button-border-radius);\n          transition: all var(--transition-fast);\n          user-select: none;\n        }\n\n        e2-app button:hover,\n        e2-app input[type=\"button\"]:hover,\n        e2-app input[type=\"submit\"]:hover,\n        e2-app input[type=\"reset\"]:hover {\n          background-color: var(--button-bg-hover);\n          border-color: var(--border-color-hover);\n        }\n\n        e2-app button:focus,\n        e2-app input[type=\"button\"]:focus,\n        e2-app input[type=\"submit\"]:focus,\n        e2-app input[type=\"reset\"]:focus {\n          outline: 0;\n          box-shadow: 0 0 0 2px rgba(13, 110, 253, 0.25);\n        }\n\n        e2-app button:disabled,\n        e2-app input[type=\"button\"]:disabled,\n        e2-app input[type=\"submit\"]:disabled,\n        e2-app input[type=\"reset\"]:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n\n        /* Primary Button Variant */\n        e2-app button.primary,\n        e2-app input[type=\"submit\"] {\n          color: white;\n          background-color: var(--accent-color);\n          border-color: var(--accent-color);\n        }\n\n        e2-app button.primary:hover,\n        e2-app input[type=\"submit\"]:hover {\n          background-color: var(--accent-color-hover);\n          border-color: var(--accent-color-hover);\n        }\n\n        /* Label Styles */\n        e2-app label {\n          display: inline-block;\n          margin-bottom: 4px;\n          font-weight: 500;\n          color: var(--text-primary);\n          cursor: pointer;\n        }\n\n        /* Fieldset and Legend */\n        e2-app fieldset {\n          padding: 16px;\n          margin: 0 0 16px 0;\n          border: 1px solid var(--border-color);\n          border-radius: var(--input-border-radius);\n        }\n\n        e2-app legend {\n          padding: 0 8px;\n          font-weight: 600;\n          color: var(--text-primary);\n        }\n\n        /* Form Groups */\n        e2-app .form-group {\n          margin-bottom: 16px;\n        }\n\n        e2-app .form-group label {\n          display: block;\n          margin-bottom: 4px;\n        }\n\n        /* Utility Classes */\n        e2-app .text-muted {\n          color: var(--text-muted) !important;\n        }\n\n        e2-app .text-primary {\n          color: var(--text-primary) !important;\n        }\n\n        e2-app .text-secondary {\n          color: var(--text-secondary) !important;\n        }\n\n        e2-app .bg-primary {\n          background-color: var(--bg-primary) !important;\n        }\n\n        e2-app .bg-secondary {\n          background-color: var(--bg-secondary) !important;\n        }\n\n        e2-app .border {\n          border: 1px solid var(--border-color) !important;\n        }\n\n        e2-app .rounded {\n          border-radius: var(--input-border-radius) !important;\n        }\n\n        e2-app .shadow {\n          box-shadow: var(--shadow) !important;\n        }\n\n        e2-app .shadow-sm {\n          box-shadow: var(--shadow-sm) !important;\n        }\n\n        e2-app .shadow-lg {\n          box-shadow: var(--shadow-lg) !important;\n        }\n      `;\n\n      // Add style element to document head instead of modifying the App element's DOM\n      // This prevents interference with child custom element initialization\n      document.head.appendChild(styleElement);\n      this._stylesInitialized = true;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('e2-app');\n    }\n\n    // Set up element after it's connected to DOM\n    this.setupElement();\n\n    this.applyTheme(this._theme);\n\n    // Set up system theme detection for auto mode\n    if (this._theme === 'auto') {\n      this.setupAutoTheme();\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Clean up theme listeners if any\n    if (this.mediaQueryList) {\n      this.mediaQueryList.removeEventListener('change', this.handleThemeChange);\n    }\n  }\n\n  private mediaQueryList?: MediaQueryList;\n  private handleThemeChange = () => {\n    if (this._theme === 'auto') {\n      this.applyTheme('auto');\n    }\n  };\n\n  private setupAutoTheme(): void {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.mediaQueryList = window.matchMedia('(prefers-color-scheme: dark)');\n      this.mediaQueryList.addEventListener('change', this.handleThemeChange);\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n\n    if (value === 'auto') {\n      this.setupAutoTheme();\n    } else if (this.mediaQueryList) {\n      this.mediaQueryList.removeEventListener('change', this.handleThemeChange);\n      this.mediaQueryList = undefined;\n    }\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Set a custom CSS property value\n   */\n  setCSSVariable(property: string, value: string): void {\n    this.style.setProperty(`--${property}`, value);\n  }\n\n  /**\n   * Get a custom CSS property value\n   */\n  getCSSVariable(property: string): string {\n    return getComputedStyle(this).getPropertyValue(`--${property}`).trim();\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-app')) {\n  customElements.define('e2-app', E2App);\n}\n","/**\n * Context Menu Element\n * A popup menu that appears on right-click or programmatic trigger\n */\n\nimport {\n  ContextMenuHideEvent,\n  ContextMenuShowEvent,\n  EditorElementProperties,\n  Theme,\n} from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class ContextMenu\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _visible: boolean = false;\n  private _justShown: boolean = false;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'target'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.bindEvents();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          position: fixed;\n          z-index: 9999;\n          display: none;\n          min-width: 180px;\n          background: var(--context-menu-bg, #ffffff);\n          border: 1px solid var(--context-menu-border, #d0d0d0);\n          border-radius: 4px;\n          box-shadow: var(--context-menu-shadow, 0 2px 8px rgba(0, 0, 0, 0.15));\n          padding: 4px 0;\n          font-family: inherit;\n          font-size: 14px;\n        }\n\n        :host([visible]) {\n          display: block;\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Light theme */\n        :host(.theme-light) {\n          background: var(--context-menu-bg-light, #ffffff);\n          border-color: var(--context-menu-border-light, #d0d0d0);\n          box-shadow: var(--context-menu-shadow-light, 0 2px 8px rgba(0, 0, 0, 0.15));\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) {\n          background: var(--context-menu-bg-dark, #2a2a2a);\n          border-color: var(--context-menu-border-dark, #444444);\n          box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) {\n            background: var(--context-menu-bg-dark, #2a2a2a);\n            border-color: var(--context-menu-border-dark, #444444);\n            box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n          }\n        }\n\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n      <slot></slot>\n    `;\n  }\n\n  private bindEvents(): void {\n    // Close menu when clicking outside\n    document.addEventListener('click', this.handleDocumentClick.bind(this));\n\n    // Close menu on escape key\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n    // Handle window resize\n    window.addEventListener('resize', this.handleWindowResize.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('context-menu');\n    }\n    this.applyTheme(this._theme);\n    this.setupTargetListeners();\n  }\n\n  disconnectedCallback(): void {\n    this.removeTargetListeners();\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'target':\n        this.removeTargetListeners();\n        this.setupTargetListeners();\n        break;\n      case 'disabled':\n        if (newValue !== null && this._visible) {\n          this.hide();\n        }\n        break;\n    }\n  }\n\n  private boundContextMenuHandler = this.handleContextMenu.bind(this);\n\n  private setupTargetListeners(): void {\n    const targetSelector = this.getAttribute('target');\n    if (!targetSelector) return;\n\n    const targets = document.querySelectorAll(targetSelector);\n    targets.forEach(target => {\n      target.addEventListener('contextmenu', this.boundContextMenuHandler);\n    });\n  }\n\n  private removeTargetListeners(): void {\n    const targetSelector = this.getAttribute('target');\n    if (!targetSelector) return;\n\n    const targets = document.querySelectorAll(targetSelector);\n    targets.forEach(target => {\n      target.removeEventListener('contextmenu', this.boundContextMenuHandler);\n    });\n  }\n\n  private handleContextMenu(event: Event): void {\n    if (this.disabled) return;\n\n    const mouseEvent = event as MouseEvent;\n    mouseEvent.preventDefault();\n    mouseEvent.stopPropagation();\n\n    const trigger = mouseEvent.currentTarget as HTMLElement;\n    this.show(mouseEvent.clientX, mouseEvent.clientY, trigger);\n  }\n\n  private handleDocumentClick(event: MouseEvent): void {\n    if (!this._visible) return;\n\n    // Ignore the click that just triggered the menu to show\n    if (this._justShown) {\n      this._justShown = false;\n      return;\n    }\n\n    const target = event.target as Node;\n    if (!this.contains(target) && !this.shadowRoot?.contains(target)) {\n      this.hide();\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (!this._visible) return;\n\n    switch (event.key) {\n      case 'Escape':\n        event.preventDefault();\n        this.hide();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextItem();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousItem();\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.activateFocusedItem();\n        break;\n    }\n  }\n\n  private handleWindowResize(): void {\n    if (this._visible) {\n      this.hide();\n    }\n  }\n\n  private focusNextItem(): void {\n    const items = this.querySelectorAll('e2-context-menu-item:not([disabled])');\n    const currentIndex = Array.from(items).findIndex(\n      item => item === document.activeElement || item.shadowRoot?.activeElement\n    );\n\n    const nextIndex = currentIndex < items.length - 1 ? currentIndex + 1 : 0;\n    (items[nextIndex] as HTMLElement).focus();\n  }\n\n  private focusPreviousItem(): void {\n    const items = this.querySelectorAll('e2-context-menu-item:not([disabled])');\n    const currentIndex = Array.from(items).findIndex(\n      item => item === document.activeElement || item.shadowRoot?.activeElement\n    );\n\n    const prevIndex = currentIndex > 0 ? currentIndex - 1 : items.length - 1;\n    (items[prevIndex] as HTMLElement).focus();\n  }\n\n  private activateFocusedItem(): void {\n    const focused = document.activeElement;\n    if (focused && focused.tagName === 'e2-context-menu-ITEM') {\n      (focused as any).click();\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get target(): string | null {\n    return this.getAttribute('target');\n  }\n\n  set target(value: string | null) {\n    if (value) {\n      this.setAttribute('target', value);\n    } else {\n      this.removeAttribute('target');\n    }\n  }\n\n  show(x: number, y: number, trigger?: HTMLElement): void {\n    if (this.disabled) return;\n\n    this._visible = true;\n    this.setAttribute('visible', '');\n\n    // Position the menu\n    this.style.left = `${x}px`;\n    this.style.top = `${y}px`;\n\n    // Ensure menu stays within viewport\n    this.adjustPosition();\n\n    // Set the flag to prevent immediate hiding, reset it after a short delay\n    this._justShown = true;\n    setTimeout(() => {\n      this._justShown = false;\n    }, 50);\n\n    // Ensure all child items have the correct theme\n    this.applyTheme(this._theme);\n\n    // Focus first item\n    requestAnimationFrame(() => {\n      const firstItem = this.querySelector(\n        'e2-context-menu-item:not([disabled])'\n      ) as HTMLElement;\n      if (firstItem) {\n        firstItem.focus();\n      }\n    });\n\n    // Dispatch show event\n    dispatchCustomEvent<ContextMenuShowEvent['detail']>(\n      this,\n      'context-menu-show',\n      {\n        menuId: this.id,\n        menu: this,\n        x,\n        y,\n        trigger: trigger || this,\n      }\n    );\n  }\n\n  hide(): void {\n    if (!this._visible) return;\n\n    this._visible = false;\n    this.removeAttribute('visible');\n\n    // Dispatch hide event\n    dispatchCustomEvent<ContextMenuHideEvent['detail']>(\n      this,\n      'context-menu-hide',\n      {\n        menuId: this.id,\n        menu: this,\n      }\n    );\n  }\n\n  private adjustPosition(): void {\n    const rect = this.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    let left = parseInt(this.style.left);\n    let top = parseInt(this.style.top);\n\n    // Adjust horizontal position\n    if (left + rect.width > viewportWidth) {\n      left = viewportWidth - rect.width - 10;\n    }\n    if (left < 10) {\n      left = 10;\n    }\n\n    // Adjust vertical position\n    if (top + rect.height > viewportHeight) {\n      top = viewportHeight - rect.height - 10;\n    }\n    if (top < 10) {\n      top = 10;\n    }\n\n    this.style.left = `${left}px`;\n    this.style.top = `${top}px`;\n  }\n\n  applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n\n    // Apply theme to all child context menu items and separators\n    const childItems = this.querySelectorAll(\n      'e2-context-menu-item, e2-context-menu-separator'\n    );\n    childItems.forEach(child => {\n      if (typeof (child as any).applyTheme === 'function') {\n        (child as any).applyTheme(theme);\n      }\n    });\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-context-menu')) {\n  customElements.define('e2-context-menu', ContextMenu);\n}\n","/**\n * Context Menu Item Element\n * A clickable item within a context menu\n */\n\nimport {\n  ContextMenuItemClickEvent,\n  EditorElementProperties,\n  Theme,\n} from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class ContextMenuItem\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n\n  static get observedAttributes(): string[] {\n    return ['label', 'icon', 'theme', 'disabled', 'value', 'shortcut'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n        }\n\n        .item {\n          display: flex;\n          align-items: center;\n          padding: 8px 16px;\n          cursor: pointer;\n          color: var(--context-menu-item-color, #333);\n          background: transparent;\n          border: none;\n          width: 100%;\n          text-align: left;\n          font-family: inherit;\n          font-size: inherit;\n          line-height: 1.4;\n          transition: background-color 0.15s ease;\n          outline: none;\n        }\n\n        .item:hover,\n        .item:focus {\n          background: var(--context-menu-item-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        .item:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .item:disabled:hover {\n          background: transparent;\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          margin-right: 8px;\n          flex-shrink: 0;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .icon:empty {\n          margin-right: 0;\n          width: 0;\n        }\n\n        .content {\n          flex: 1;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          min-width: 0;\n        }\n\n        .label {\n          flex: 1;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        .shortcut {\n          color: var(--context-menu-item-shortcut-color, #666);\n          font-size: 0.85em;\n          margin-left: 12px;\n          flex-shrink: 0;\n        }\n\n        /* Light theme */\n        :host(.theme-light) .item {\n          color: var(--context-menu-item-color-light, #333);\n        }\n\n        :host(.theme-light) .item:hover,\n        :host(.theme-light) .item:focus {\n          background: var(--context-menu-item-hover-bg-light, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-light) .shortcut {\n          color: var(--context-menu-item-shortcut-color-light, #666);\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) .item {\n          color: var(--context-menu-item-color-dark, #fff);\n        }\n\n        :host(.theme-dark) .item:hover,\n        :host(.theme-dark) .item:focus {\n          background: var(--context-menu-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) .shortcut {\n          color: var(--context-menu-item-shortcut-color-dark, #aaa);\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .item {\n            color: var(--context-menu-item-color-dark, #fff);\n          }\n\n          :host(.theme-auto) .item:hover,\n          :host(.theme-auto) .item:focus {\n            background: var(--context-menu-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n          }\n\n          :host(.theme-auto) .shortcut {\n            color: var(--context-menu-item-shortcut-color-dark, #aaa);\n          }\n        }\n      </style>\n      <button class=\"item\" type=\"button\">\n        <span class=\"icon\"></span>\n        <div class=\"content\">\n          <span class=\"label\"></span>\n          <span class=\"shortcut\"></span>\n        </div>\n      </button>\n    `;\n\n    const button = shadowRoot.querySelector('.item')!;\n    button.addEventListener('click', this.handleClick.bind(this));\n    button.addEventListener('keydown', (event: Event) =>\n      this.handleKeyDown(event as KeyboardEvent)\n    );\n\n    // Make the element focusable\n    this.tabIndex = 0;\n    this.addEventListener('focus', this.handleFocus.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('context-menu-item');\n    }\n    this.applyTheme(this._theme);\n    this.updateContent();\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'label':\n      case 'icon':\n      case 'shortcut':\n        this.updateContent();\n        break;\n      case 'disabled':\n        this.updateDisabledState();\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    if (!this.shadowRoot) return;\n\n    const iconElement = this.shadowRoot.querySelector('.icon') as HTMLElement;\n    const labelElement = this.shadowRoot.querySelector('.label') as HTMLElement;\n    const shortcutElement = this.shadowRoot.querySelector(\n      '.shortcut'\n    ) as HTMLElement;\n\n    // Update icon\n    const icon = this.getAttribute('icon');\n    if (icon) {\n      iconElement.textContent = icon;\n      iconElement.style.display = 'flex';\n    } else {\n      iconElement.textContent = '';\n      iconElement.style.display = 'none';\n    }\n\n    // Update label\n    const label = this.getAttribute('label') || this.textContent?.trim() || '';\n    labelElement.textContent = label;\n\n    // Update shortcut\n    const shortcut = this.getAttribute('shortcut');\n    if (shortcut) {\n      shortcutElement.textContent = shortcut;\n      shortcutElement.style.display = 'block';\n    } else {\n      shortcutElement.textContent = '';\n      shortcutElement.style.display = 'none';\n    }\n  }\n\n  private updateDisabledState(): void {\n    if (!this.shadowRoot) return;\n\n    const button = this.shadowRoot.querySelector('.item') as HTMLButtonElement;\n    button.disabled = this.disabled;\n  }\n\n  private handleClick(event: Event): void {\n    if (this.disabled) return;\n\n    event.stopPropagation();\n\n    // Find the parent context menu\n    const contextMenu = this.closest('e2-context-menu');\n\n    // Dispatch item click event\n    dispatchCustomEvent<ContextMenuItemClickEvent['detail']>(\n      this,\n      'context-menu-item-click',\n      {\n        itemId: this.id,\n        item: this,\n        menuId: contextMenu?.id || '',\n        menu: contextMenu as HTMLElement,\n        value: this.value,\n      }\n    );\n\n    // Hide the context menu\n    if (contextMenu && typeof (contextMenu as any).hide === 'function') {\n      (contextMenu as any).hide();\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (this.disabled) return;\n\n    // Let the parent context menu handle navigation keys\n    if (['ArrowDown', 'ArrowUp', 'Escape'].includes(event.key)) {\n      return;\n    }\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  }\n\n  private handleFocus(): void {\n    if (!this.shadowRoot) return;\n\n    const button = this.shadowRoot.querySelector('.item') as HTMLButtonElement;\n    button.focus();\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  get label(): string {\n    return this.getAttribute('label') || '';\n  }\n\n  set label(value: string) {\n    this.setAttribute('label', value);\n  }\n\n  get icon(): string {\n    return this.getAttribute('icon') || '';\n  }\n\n  set icon(value: string) {\n    if (value) {\n      this.setAttribute('icon', value);\n    } else {\n      this.removeAttribute('icon');\n    }\n  }\n\n  get value(): string {\n    return this.getAttribute('value') || this.label;\n  }\n\n  set value(value: string) {\n    this.setAttribute('value', value);\n  }\n\n  get shortcut(): string {\n    return this.getAttribute('shortcut') || '';\n  }\n\n  set shortcut(value: string) {\n    if (value) {\n      this.setAttribute('shortcut', value);\n    } else {\n      this.removeAttribute('shortcut');\n    }\n  }\n\n  click(): void {\n    if (!this.disabled) {\n      this.handleClick(new Event('click'));\n    }\n  }\n\n  focus(): void {\n    super.focus();\n    this.handleFocus();\n  }\n\n  applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-context-menu-item')) {\n  customElements.define('e2-context-menu-item', ContextMenuItem);\n}\n","/**\n * Context Menu Separator Element\n * A visual separator line between context menu items\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport { applyTheme, getShadowRoot } from '../../utils';\n\nexport class ContextMenuSeparator\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n\n  static get observedAttributes(): string[] {\n    return ['theme'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          margin: 4px 0;\n        }\n\n        .separator {\n          height: 1px;\n          background: var(--context-menu-separator-color, #e0e0e0);\n          margin: 0 8px;\n        }\n\n        /* Light theme */\n        :host(.theme-light) .separator {\n          background: var(--context-menu-separator-color-light, #e0e0e0);\n        }\n\n        /* Dark theme */\n        :host(.theme-dark) .separator {\n          background: var(--context-menu-separator-color-dark, #555);\n        }\n\n        /* Auto theme - follows system preference */\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .separator {\n            background: var(--context-menu-separator-color-dark, #555);\n          }\n        }\n      </style>\n      <div class=\"separator\"></div>\n    `;\n  }\n\n  connectedCallback(): void {\n    this.applyTheme(this._theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n  }\n\n  get disabled(): boolean {\n    return false; // Separators cannot be disabled\n  }\n\n  set disabled(_value: boolean) {\n    // Separators cannot be disabled\n  }\n\n  applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-context-menu-separator')) {\n  customElements.define('e2-context-menu-separator', ContextMenuSeparator);\n}\n","/**\n * Alert Dialog Element\n * A specialized dialog for displaying messages and notifications\n */\n\nimport { AlertType, EditorElementProperties, Theme } from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class AlertDialogElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _nativeDialog: HTMLDialogElement | null = null;\n  private _resolvePromise: ((value: void) => void) | null = null;\n  private _rejectPromise: ((reason?: any) => void) | null = null;\n\n  static get observedAttributes(): string[] {\n    return ['title', 'message', 'button-text', 'theme', 'type'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --button-bg: #007bff;\n          --button-hover: #0056b3;\n          --button-active: #004085;\n          --icon-info: #17a2b8;\n          --icon-success: #28a745;\n          --icon-warning: #ffc107;\n          --icon-error: #dc3545;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --button-bg: #0d6efd;\n          --button-hover: #0b5ed7;\n          --button-active: #0a58ca;\n          --icon-info: #0dcaf0;\n          --icon-success: #198754;\n          --icon-warning: #fd7e14;\n          --icon-error: #dc3545;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 320px;\n          max-width: 500px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-header {\n          display: flex;\n          align-items: flex-start;\n          gap: 12px;\n          margin-bottom: 16px;\n        }\n\n        .dialog-icon {\n          flex-shrink: 0;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 20px;\n          margin-top: 2px;\n        }\n\n        .dialog-icon.type-info {\n          color: var(--icon-info);\n        }\n\n        .dialog-icon.type-success {\n          color: var(--icon-success);\n        }\n\n        .dialog-icon.type-warning {\n          color: var(--icon-warning);\n        }\n\n        .dialog-icon.type-error {\n          color: var(--icon-error);\n        }\n\n        .dialog-text {\n          flex: 1;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 8px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0;\n          white-space: pre-wrap;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: center;\n          margin-top: 24px;\n        }\n\n        .dialog-button {\n          padding: 10px 24px;\n          border: none;\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: white;\n          font-family: inherit;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 100px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--button-bg);\n          outline-offset: 2px;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part=\"dialog\">\n        <div class=\"dialog-content\" part=\"content\">\n          <div class=\"dialog-header\" part=\"header\">\n            <div class=\"dialog-icon type-info\" part=\"icon\">ℹ️</div>\n            <div class=\"dialog-text\" part=\"text\">\n              <h3 class=\"dialog-title\" part=\"title\">Information</h3>\n              <p class=\"dialog-message\" part=\"message\">This is an alert message.</p>\n            </div>\n          </div>\n\n          <div class=\"dialog-buttons\" part=\"buttons\">\n            <button class=\"dialog-button\" part=\"button\" type=\"button\">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    `;\n\n    this._nativeDialog = shadowRoot.querySelector('dialog');\n    const button = shadowRoot.querySelector('.dialog-button');\n\n    // Set up event listeners\n    if (this._nativeDialog) {\n      this._nativeDialog.addEventListener('close', this.handleClose.bind(this));\n      this._nativeDialog.addEventListener(\n        'cancel',\n        this.handleCancel.bind(this)\n      );\n    }\n\n    if (button) {\n      button.addEventListener('click', () => this.close());\n    }\n\n    // Apply initial theme\n    this.applyTheme(this._theme);\n    this.updateContent();\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('alert-dialog');\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'title':\n      case 'message':\n      case 'button-text':\n      case 'type':\n        this.updateContent();\n        break;\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const titleElement = this.shadowRoot?.querySelector('.dialog-title');\n    const messageElement = this.shadowRoot?.querySelector('.dialog-message');\n    const buttonElement = this.shadowRoot?.querySelector('.dialog-button');\n    const iconElement = this.shadowRoot?.querySelector('.dialog-icon');\n\n    if (titleElement) {\n      titleElement.textContent =\n        this.getAttribute('title') || this.getDefaultTitle();\n    }\n\n    if (messageElement) {\n      messageElement.textContent =\n        this.getAttribute('message') || 'This is an alert message.';\n    }\n\n    if (buttonElement) {\n      buttonElement.textContent = this.getAttribute('button-text') || 'OK';\n    }\n\n    if (iconElement) {\n      const type = this.getAttribute('type') || 'info';\n      iconElement.className = `dialog-icon type-${type}`;\n      iconElement.textContent = this.getIconForType(type);\n    }\n  }\n\n  private getDefaultTitle(): string {\n    const type = this.getAttribute('type') || 'info';\n    switch (type) {\n      case 'success':\n        return 'Success';\n      case 'warning':\n        return 'Warning';\n      case 'error':\n        return 'Error';\n      default:\n        return 'Information';\n    }\n  }\n\n  private getIconForType(type: string): string {\n    switch (type) {\n      case 'success':\n        return '✅';\n      case 'warning':\n        return '⚠️';\n      case 'error':\n        return '❌';\n      default:\n        return 'ℹ️';\n    }\n  }\n\n  private handleClose(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise();\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'alert-dialog-close', {\n      dialogId: this.id,\n      dialog: this,\n    });\n  }\n\n  private handleCancel(event: Event): void {\n    const cancelable = dispatchCustomEvent(this, 'alert-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    if (!cancelable) {\n      event.preventDefault();\n    } else {\n      this.close();\n    }\n  }\n\n  private close(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise();\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'alert-dialog-dismiss', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    this._nativeDialog?.close();\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || this.getDefaultTitle();\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get message(): string {\n    return this.getAttribute('message') || 'This is an alert message.';\n  }\n\n  set message(value: string) {\n    this.setAttribute('message', value);\n  }\n\n  get buttonText(): string {\n    return this.getAttribute('button-text') || 'OK';\n  }\n\n  set buttonText(value: string) {\n    this.setAttribute('button-text', value);\n  }\n\n  get type(): AlertType {\n    return (this.getAttribute('type') || 'info') as AlertType;\n  }\n\n  set type(value: AlertType) {\n    this.setAttribute('type', value);\n  }\n\n  get open(): boolean {\n    return this._nativeDialog?.open || false;\n  }\n\n  /**\n   * Show the alert dialog and return a promise that resolves when dismissed\n   */\n  public show(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this._resolvePromise) {\n        // Already showing, reject the previous promise\n        this._rejectPromise?.(\n          new Error('Dialog was replaced by another show() call')\n        );\n      }\n\n      this._resolvePromise = resolve;\n      this._rejectPromise = reject;\n\n      dispatchCustomEvent(this, 'alert-dialog-show', {\n        dialogId: this.id,\n        dialog: this,\n      });\n\n      this._nativeDialog?.showModal();\n    });\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-alert')) {\n  customElements.define('e2-alert', AlertDialogElement);\n}\n","/**\n * Confirm Dialog Element\n * A specialized dialog for yes/no confirmations with promise-based API\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class ConfirmDialogElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _nativeDialog: HTMLDialogElement | null = null;\n  private _resolvePromise: ((value: boolean) => void) | null = null;\n  private _rejectPromise: ((reason?: any) => void) | null = null;\n\n  static get observedAttributes(): string[] {\n    return [\n      'title',\n      'message',\n      'confirm-text',\n      'cancel-text',\n      'theme',\n      'danger',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --button-bg: #f8f9fa;\n          --button-border: #e0e0e0;\n          --button-hover: #e9ecef;\n          --button-active: #dee2e6;\n          --confirm-bg: #007bff;\n          --confirm-hover: #0056b3;\n          --confirm-active: #004085;\n          --danger-bg: #dc3545;\n          --danger-hover: #c82333;\n          --danger-active: #bd2130;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --button-bg: #404040;\n          --button-border: #555555;\n          --button-hover: #4a4a4a;\n          --button-active: #555555;\n          --confirm-bg: #0d6efd;\n          --confirm-hover: #0b5ed7;\n          --confirm-active: #0a58ca;\n          --danger-bg: #dc3545;\n          --danger-hover: #bb2d3b;\n          --danger-active: #b02a37;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 320px;\n          max-width: 500px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 16px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0 0 24px 0;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-button {\n          padding: 8px 16px;\n          border: 1px solid var(--button-border);\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 80px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--confirm-bg);\n          outline-offset: 2px;\n        }\n\n        .confirm-button {\n          background: var(--confirm-bg);\n          color: white;\n          border-color: var(--confirm-bg);\n        }\n\n        .confirm-button:hover {\n          background: var(--confirm-hover);\n          border-color: var(--confirm-hover);\n        }\n\n        .confirm-button:active {\n          background: var(--confirm-active);\n          border-color: var(--confirm-active);\n        }\n\n        :host([danger]) .confirm-button {\n          background: var(--danger-bg);\n          border-color: var(--danger-bg);\n        }\n\n        :host([danger]) .confirm-button:hover {\n          background: var(--danger-hover);\n          border-color: var(--danger-hover);\n        }\n\n        :host([danger]) .confirm-button:active {\n          background: var(--danger-active);\n          border-color: var(--danger-active);\n        }\n\n        :host([danger]) .confirm-button:focus {\n          outline-color: var(--danger-bg);\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part=\"dialog\">\n        <div class=\"dialog-content\" part=\"content\">\n          <h3 class=\"dialog-title\" part=\"title\">Confirm</h3>\n          <p class=\"dialog-message\" part=\"message\">Are you sure?</p>\n\n          <div class=\"dialog-buttons\" part=\"buttons\">\n            <button class=\"dialog-button cancel-button\" part=\"cancel-button\" type=\"button\">\n              Cancel\n            </button>\n            <button class=\"dialog-button confirm-button\" part=\"confirm-button\" type=\"button\">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    `;\n\n    this._nativeDialog = shadowRoot.querySelector('dialog');\n    const confirmButton = shadowRoot.querySelector('.confirm-button');\n    const cancelButton = shadowRoot.querySelector('.cancel-button');\n\n    // Set up event listeners\n    if (this._nativeDialog) {\n      this._nativeDialog.addEventListener('close', this.handleClose.bind(this));\n      this._nativeDialog.addEventListener(\n        'cancel',\n        this.handleCancel.bind(this)\n      );\n    }\n\n    if (confirmButton) {\n      confirmButton.addEventListener('click', () => this.confirm());\n    }\n\n    if (cancelButton) {\n      cancelButton.addEventListener('click', () => this.cancel());\n    }\n\n    // Apply initial theme\n    this.applyTheme(this._theme);\n    this.updateContent();\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('confirm-dialog');\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'title':\n      case 'message':\n      case 'confirm-text':\n      case 'cancel-text':\n        this.updateContent();\n        break;\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'danger':\n        // Styling handled by CSS attribute selector\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const titleElement = this.shadowRoot?.querySelector('.dialog-title');\n    const messageElement = this.shadowRoot?.querySelector('.dialog-message');\n    const confirmButton = this.shadowRoot?.querySelector('.confirm-button');\n    const cancelButton = this.shadowRoot?.querySelector('.cancel-button');\n\n    if (titleElement) {\n      titleElement.textContent = this.getAttribute('title') || 'Confirm';\n    }\n\n    if (messageElement) {\n      messageElement.textContent =\n        this.getAttribute('message') || 'Are you sure?';\n    }\n\n    if (confirmButton) {\n      confirmButton.textContent = this.getAttribute('confirm-text') || 'OK';\n    }\n\n    if (cancelButton) {\n      cancelButton.textContent = this.getAttribute('cancel-text') || 'Cancel';\n    }\n  }\n\n  private handleClose(): void {\n    // If dialog was closed without explicit confirm/cancel, treat as cancel\n    if (this._resolvePromise) {\n      this._resolvePromise(false);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'confirm-dialog-close', {\n      dialogId: this.id,\n      dialog: this,\n      confirmed: false,\n    });\n  }\n\n  private handleCancel(event: Event): void {\n    const cancelable = dispatchCustomEvent(this, 'confirm-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    if (!cancelable) {\n      event.preventDefault();\n    } else {\n      this.cancel();\n    }\n  }\n\n  private confirm(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise(true);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'confirm-dialog-confirm', {\n      dialogId: this.id,\n      dialog: this,\n      confirmed: true,\n    });\n\n    this._nativeDialog?.close('confirmed');\n  }\n\n  private cancel(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise(false);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'confirm-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n      confirmed: false,\n    });\n\n    this._nativeDialog?.close('cancelled');\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || 'Confirm';\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get message(): string {\n    return this.getAttribute('message') || 'Are you sure?';\n  }\n\n  set message(value: string) {\n    this.setAttribute('message', value);\n  }\n\n  get confirmText(): string {\n    return this.getAttribute('confirm-text') || 'OK';\n  }\n\n  set confirmText(value: string) {\n    this.setAttribute('confirm-text', value);\n  }\n\n  get cancelText(): string {\n    return this.getAttribute('cancel-text') || 'Cancel';\n  }\n\n  set cancelText(value: string) {\n    this.setAttribute('cancel-text', value);\n  }\n\n  get danger(): boolean {\n    return this.hasAttribute('danger');\n  }\n\n  set danger(value: boolean) {\n    if (value) {\n      this.setAttribute('danger', '');\n    } else {\n      this.removeAttribute('danger');\n    }\n  }\n\n  get open(): boolean {\n    return this._nativeDialog?.open || false;\n  }\n\n  /**\n   * Show the confirmation dialog and return a promise that resolves to true/false\n   */\n  public show(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this._resolvePromise) {\n        // Already showing, reject the previous promise\n        this._rejectPromise?.(\n          new Error('Dialog was replaced by another show() call')\n        );\n      }\n\n      this._resolvePromise = resolve;\n      this._rejectPromise = reject;\n\n      dispatchCustomEvent(this, 'confirm-dialog-show', {\n        dialogId: this.id,\n        dialog: this,\n      });\n\n      this._nativeDialog?.showModal();\n    });\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-confirm')) {\n  customElements.define('e2-confirm', ConfirmDialogElement);\n}\n","/**\n * Dialog Element\n * A wrapper around the native <dialog> element with theming and enhanced functionality\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class DialogElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _nativeDialog: HTMLDialogElement | null = null;\n\n  static get observedAttributes(): string[] {\n    return ['title', 'theme', 'modal', 'closable', 'width', 'height'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --dialog-header-bg: #f8f9fa;\n          --dialog-header-border: #e0e0e0;\n          --text-color: #333333;\n          --close-button-hover: #f0f0f0;\n          --close-button-active: #e0e0e0;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --dialog-header-bg: #404040;\n          --dialog-header-border: #555555;\n          --text-color: #ffffff;\n          --close-button-hover: #404040;\n          --close-button-active: #555555;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 300px;\n          max-width: calc(100vw - 32px);\n          max-height: calc(100vh - 32px);\n          overflow: hidden;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 16px 20px;\n          background: var(--dialog-header-bg);\n          border-bottom: 1px solid var(--dialog-header-border);\n          min-height: 24px;\n        }\n\n        .dialog-title {\n          font-weight: 600;\n          font-size: 16px;\n          margin: 0;\n        }\n\n        .close-button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 28px;\n          height: 28px;\n          border: none;\n          background: transparent;\n          border-radius: 4px;\n          cursor: pointer;\n          color: var(--text-color);\n          font-size: 18px;\n          transition: background-color 0.15s ease;\n        }\n\n        .close-button:hover {\n          background: var(--close-button-hover);\n        }\n\n        .close-button:active {\n          background: var(--close-button-active);\n        }\n\n        .close-button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .dialog-content {\n          padding: 20px;\n          overflow-y: auto;\n        }\n\n        .dialog-footer {\n          padding: 16px 20px;\n          border-top: 1px solid var(--dialog-header-border);\n          background: var(--dialog-header-bg);\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-footer:empty {\n          display: none;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part=\"dialog\">\n        <div class=\"dialog-header\" part=\"header\">\n          <h3 class=\"dialog-title\" part=\"title\"></h3>\n          <button class=\"close-button\" part=\"close-button\" type=\"button\" aria-label=\"Close dialog\">\n            ×\n          </button>\n        </div>\n\n        <div class=\"dialog-content\" part=\"content\">\n          <slot></slot>\n        </div>\n\n        <div class=\"dialog-footer\" part=\"footer\">\n          <slot name=\"footer\"></slot>\n        </div>\n      </dialog>\n    `;\n\n    this._nativeDialog = shadowRoot.querySelector('dialog');\n    const closeButton = shadowRoot.querySelector('.close-button');\n\n    // Set up event listeners\n    if (this._nativeDialog) {\n      this._nativeDialog.addEventListener('close', this.handleClose.bind(this));\n      this._nativeDialog.addEventListener(\n        'cancel',\n        this.handleCancel.bind(this)\n      );\n    }\n\n    if (closeButton) {\n      closeButton.addEventListener('click', () => this.close());\n    }\n\n    // Apply initial theme\n    this.applyTheme(this._theme);\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('dialog');\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'title':\n        this.updateTitle();\n        break;\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'modal':\n        // Modal state affects how dialog opens\n        break;\n      case 'closable':\n        this.updateClosable();\n        break;\n      case 'width':\n        this.updateSize();\n        break;\n      case 'height':\n        this.updateSize();\n        break;\n    }\n  }\n\n  private updateTitle(): void {\n    const titleElement = this.shadowRoot?.querySelector('.dialog-title');\n    if (titleElement) {\n      titleElement.textContent = this.getAttribute('title') || '';\n    }\n  }\n\n  private updateClosable(): void {\n    const closeButton = this.shadowRoot?.querySelector(\n      '.close-button'\n    ) as HTMLButtonElement;\n    if (closeButton) {\n      const closable = this.getAttribute('closable') !== 'false';\n      closeButton.disabled = !closable;\n      closeButton.style.display = closable ? 'flex' : 'none';\n    }\n  }\n\n  private updateSize(): void {\n    if (this._nativeDialog) {\n      const width = this.getAttribute('width');\n      const height = this.getAttribute('height');\n\n      if (width) {\n        this._nativeDialog.style.width =\n          width.includes('px') || width.includes('%') || width.includes('em')\n            ? width\n            : `${width}px`;\n      }\n\n      if (height) {\n        this._nativeDialog.style.height =\n          height.includes('px') || height.includes('%') || height.includes('em')\n            ? height\n            : `${height}px`;\n      }\n    }\n  }\n\n  private handleClose(): void {\n    dispatchCustomEvent(this, 'dialog-close', {\n      dialogId: this.id,\n      dialog: this,\n      returnValue: this._nativeDialog?.returnValue,\n    });\n  }\n\n  private handleCancel(event: Event): void {\n    const cancelable = dispatchCustomEvent(this, 'dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    if (!cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || '';\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get modal(): boolean {\n    return this.hasAttribute('modal');\n  }\n\n  set modal(value: boolean) {\n    if (value) {\n      this.setAttribute('modal', '');\n    } else {\n      this.removeAttribute('modal');\n    }\n  }\n\n  get closable(): boolean {\n    return this.getAttribute('closable') !== 'false';\n  }\n\n  set closable(value: boolean) {\n    this.setAttribute('closable', value.toString());\n  }\n\n  get open(): boolean {\n    return this._nativeDialog?.open || false;\n  }\n\n  get returnValue(): string {\n    return this._nativeDialog?.returnValue || '';\n  }\n\n  set returnValue(value: string) {\n    if (this._nativeDialog) {\n      this._nativeDialog.returnValue = value;\n    }\n  }\n\n  public show(): void {\n    if (!this._nativeDialog) return;\n\n    dispatchCustomEvent(this, 'dialog-show', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    this._nativeDialog.show();\n  }\n\n  public showModal(): void {\n    if (!this._nativeDialog) return;\n\n    dispatchCustomEvent(this, 'dialog-show', {\n      dialogId: this.id,\n      dialog: this,\n      modal: true,\n    });\n\n    this._nativeDialog.showModal();\n  }\n\n  public close(returnValue?: string): void {\n    if (!this._nativeDialog) return;\n\n    if (returnValue !== undefined) {\n      this._nativeDialog.returnValue = returnValue;\n    }\n\n    this._nativeDialog.close();\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-dialog')) {\n  customElements.define('e2-dialog', DialogElement);\n}\n","/**\n * Prompt Dialog Element\n * A specialized dialog for text input with validation\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class PromptDialogElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _nativeDialog: HTMLDialogElement | null = null;\n  private _resolvePromise: ((value: string | null) => void) | null = null;\n  private _rejectPromise: ((reason?: any) => void) | null = null;\n\n  static get observedAttributes(): string[] {\n    return [\n      'title',\n      'message',\n      'placeholder',\n      'default-value',\n      'confirm-text',\n      'cancel-text',\n      'theme',\n      'required',\n      'multiline',\n      'pattern',\n      'min-length',\n      'max-length',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --dialog-bg: #ffffff;\n          --dialog-border: #e0e0e0;\n          --dialog-shadow: rgba(0, 0, 0, 0.25);\n          --dialog-backdrop: rgba(0, 0, 0, 0.5);\n          --text-color: #333333;\n          --text-secondary: #666666;\n          --input-bg: #ffffff;\n          --input-border: #d0d7de;\n          --input-border-focus: #0969da;\n          --input-border-error: #d1242f;\n          --button-bg: #f8f9fa;\n          --button-border: #e0e0e0;\n          --button-hover: #e9ecef;\n          --button-active: #dee2e6;\n          --confirm-bg: #007bff;\n          --confirm-hover: #0056b3;\n          --confirm-active: #004085;\n          --error-color: #d1242f;\n\n          display: block;\n        }\n\n        :host(.theme-dark) {\n          --dialog-bg: #2d2d2d;\n          --dialog-border: #555555;\n          --dialog-shadow: rgba(0, 0, 0, 0.5);\n          --dialog-backdrop: rgba(0, 0, 0, 0.7);\n          --text-color: #ffffff;\n          --text-secondary: #cccccc;\n          --input-bg: #21262d;\n          --input-border: #30363d;\n          --input-border-focus: #0969da;\n          --input-border-error: #f85149;\n          --button-bg: #404040;\n          --button-border: #555555;\n          --button-hover: #4a4a4a;\n          --button-active: #555555;\n          --confirm-bg: #0d6efd;\n          --confirm-hover: #0b5ed7;\n          --confirm-active: #0a58ca;\n          --error-color: #f85149;\n        }\n\n        dialog {\n          border: 1px solid var(--dialog-border);\n          border-radius: 8px;\n          padding: 0;\n          background: var(--dialog-bg);\n          color: var(--text-color);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          box-shadow: 0 8px 24px var(--dialog-shadow);\n          min-width: 400px;\n          max-width: 600px;\n          animation: dialog-fade-in 0.2s ease-out;\n        }\n\n        dialog::backdrop {\n          background: var(--dialog-backdrop);\n          animation: backdrop-fade-in 0.2s ease-out;\n        }\n\n        @keyframes dialog-fade-in {\n          from {\n            opacity: 0;\n            transform: scale(0.9) translateY(-20px);\n          }\n          to {\n            opacity: 1;\n            transform: scale(1) translateY(0);\n          }\n        }\n\n        @keyframes backdrop-fade-in {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        .dialog-content {\n          padding: 24px;\n        }\n\n        .dialog-title {\n          font-size: 18px;\n          font-weight: 600;\n          margin: 0 0 8px 0;\n          color: var(--text-color);\n        }\n\n        .dialog-message {\n          color: var(--text-secondary);\n          line-height: 1.5;\n          margin: 0 0 16px 0;\n        }\n\n        .dialog-message:empty {\n          display: none;\n        }\n\n        .input-group {\n          margin-bottom: 20px;\n        }\n\n        .dialog-input {\n          width: 100%;\n          padding: 8px 12px;\n          border: 1px solid var(--input-border);\n          border-radius: 4px;\n          background: var(--input-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          transition: border-color 0.15s ease;\n          box-sizing: border-box;\n        }\n\n        .dialog-input:focus {\n          outline: none;\n          border-color: var(--input-border-focus);\n          box-shadow: 0 0 0 2px rgba(9, 105, 218, 0.3);\n        }\n\n        .dialog-input.error {\n          border-color: var(--input-border-error);\n        }\n\n        .dialog-input.error:focus {\n          box-shadow: 0 0 0 2px rgba(209, 36, 47, 0.3);\n        }\n\n        .dialog-textarea {\n          min-height: 80px;\n          resize: vertical;\n          font-family: inherit;\n        }\n\n        .error-message {\n          color: var(--error-color);\n          font-size: 12px;\n          margin-top: 4px;\n          display: none;\n        }\n\n        .error-message.visible {\n          display: block;\n        }\n\n        .dialog-buttons {\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n        }\n\n        .dialog-button {\n          padding: 8px 16px;\n          border: 1px solid var(--button-border);\n          border-radius: 4px;\n          background: var(--button-bg);\n          color: var(--text-color);\n          font-family: inherit;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.15s ease;\n          min-width: 80px;\n        }\n\n        .dialog-button:hover {\n          background: var(--button-hover);\n        }\n\n        .dialog-button:active {\n          background: var(--button-active);\n        }\n\n        .dialog-button:focus {\n          outline: 2px solid var(--confirm-bg);\n          outline-offset: 2px;\n        }\n\n        .dialog-button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .confirm-button {\n          background: var(--confirm-bg);\n          color: white;\n          border-color: var(--confirm-bg);\n        }\n\n        .confirm-button:hover:not(:disabled) {\n          background: var(--confirm-hover);\n          border-color: var(--confirm-hover);\n        }\n\n        .confirm-button:active:not(:disabled) {\n          background: var(--confirm-active);\n          border-color: var(--confirm-active);\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n\n      <dialog part=\"dialog\">\n        <div class=\"dialog-content\" part=\"content\">\n          <h3 class=\"dialog-title\" part=\"title\">Input Required</h3>\n          <p class=\"dialog-message\" part=\"message\"></p>\n\n          <div class=\"input-group\" part=\"input-group\">\n            <input class=\"dialog-input\" part=\"input\" type=\"text\" />\n            <div class=\"error-message\" part=\"error-message\"></div>\n          </div>\n\n          <div class=\"dialog-buttons\" part=\"buttons\">\n            <button class=\"dialog-button cancel-button\" part=\"cancel-button\" type=\"button\">\n              Cancel\n            </button>\n            <button class=\"dialog-button confirm-button\" part=\"confirm-button\" type=\"button\">\n              OK\n            </button>\n          </div>\n        </div>\n      </dialog>\n    `;\n\n    this._nativeDialog = shadowRoot.querySelector('dialog');\n    const confirmButton = shadowRoot.querySelector('.confirm-button');\n    const cancelButton = shadowRoot.querySelector('.cancel-button');\n    const input = shadowRoot.querySelector('.dialog-input') as HTMLInputElement;\n\n    // Set up event listeners\n    if (this._nativeDialog) {\n      this._nativeDialog.addEventListener('close', this.handleClose.bind(this));\n      this._nativeDialog.addEventListener(\n        'cancel',\n        this.handleCancel.bind(this)\n      );\n    }\n\n    if (confirmButton) {\n      confirmButton.addEventListener('click', () => this.confirm());\n    }\n\n    if (cancelButton) {\n      cancelButton.addEventListener('click', () => this.cancel());\n    }\n\n    if (input) {\n      input.addEventListener('input', this.handleInput.bind(this));\n      input.addEventListener('keydown', this.handleKeydown.bind(this));\n    }\n\n    // Apply initial theme\n    this.applyTheme(this._theme);\n    this.updateContent();\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('prompt-dialog');\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'title':\n      case 'message':\n      case 'placeholder':\n      case 'default-value':\n      case 'confirm-text':\n      case 'cancel-text':\n      case 'required':\n      case 'multiline':\n      case 'pattern':\n      case 'min-length':\n      case 'max-length':\n        this.updateContent();\n        break;\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const titleElement = this.shadowRoot?.querySelector('.dialog-title');\n    const messageElement = this.shadowRoot?.querySelector('.dialog-message');\n    const confirmButton = this.shadowRoot?.querySelector('.confirm-button');\n    const cancelButton = this.shadowRoot?.querySelector('.cancel-button');\n    const inputElement = this.shadowRoot?.querySelector(\n      '.dialog-input'\n    ) as HTMLInputElement;\n\n    if (titleElement) {\n      titleElement.textContent = this.getAttribute('title') || 'Input Required';\n    }\n\n    if (messageElement) {\n      const message = this.getAttribute('message') || '';\n      messageElement.textContent = message;\n    }\n\n    if (confirmButton) {\n      confirmButton.textContent = this.getAttribute('confirm-text') || 'OK';\n    }\n\n    if (cancelButton) {\n      cancelButton.textContent = this.getAttribute('cancel-text') || 'Cancel';\n    }\n\n    if (inputElement) {\n      // Handle multiline\n      const multiline = this.hasAttribute('multiline');\n      const currentType = inputElement.tagName.toLowerCase();\n\n      if (multiline && currentType === 'input') {\n        // Replace input with textarea\n        const textarea = document.createElement('textarea');\n        textarea.className = 'dialog-input dialog-textarea';\n        textarea.setAttribute('part', 'input');\n        inputElement.parentNode?.replaceChild(textarea, inputElement);\n        this.setupInputElement(textarea);\n      } else if (!multiline && currentType === 'textarea') {\n        // Replace textarea with input\n        const input = document.createElement('input');\n        input.className = 'dialog-input';\n        input.setAttribute('part', 'input');\n        input.type = 'text';\n        inputElement.parentNode?.replaceChild(input, inputElement);\n        this.setupInputElement(input);\n      } else {\n        this.setupInputElement(inputElement);\n      }\n    }\n  }\n\n  private setupInputElement(\n    element: HTMLInputElement | HTMLTextAreaElement\n  ): void {\n    const placeholder = this.getAttribute('placeholder') || '';\n    const defaultValue = this.getAttribute('default-value') || '';\n    const pattern = this.getAttribute('pattern');\n    const minLength = this.getAttribute('min-length');\n    const maxLength = this.getAttribute('max-length');\n\n    element.placeholder = placeholder;\n    element.value = defaultValue;\n\n    if (pattern && element instanceof HTMLInputElement) {\n      element.pattern = pattern;\n    }\n\n    if (minLength) {\n      element.minLength = parseInt(minLength, 10);\n    }\n\n    if (maxLength) {\n      element.maxLength = parseInt(maxLength, 10);\n    }\n\n    // Re-attach event listeners\n    element.addEventListener('input', this.handleInput.bind(this));\n    element.addEventListener('keydown', (event: Event) =>\n      this.handleKeydown(event as KeyboardEvent)\n    );\n  }\n\n  private handleInput(): void {\n    this.validateInput();\n  }\n\n  private handleKeydown(event: KeyboardEvent): void {\n    if (\n      event.key === 'Enter' &&\n      !event.shiftKey &&\n      !this.hasAttribute('multiline')\n    ) {\n      event.preventDefault();\n      this.confirm();\n    } else if (event.key === 'Escape') {\n      event.preventDefault();\n      this.cancel();\n    }\n  }\n\n  private validateInput(): boolean {\n    const input = this.shadowRoot?.querySelector('.dialog-input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n    const errorMessage = this.shadowRoot?.querySelector('.error-message');\n    const confirmButton = this.shadowRoot?.querySelector(\n      '.confirm-button'\n    ) as HTMLButtonElement;\n\n    if (!input || !errorMessage || !confirmButton) return false;\n\n    let isValid = true;\n    let error = '';\n\n    const value = input.value;\n    const required = this.hasAttribute('required');\n    const pattern = this.getAttribute('pattern');\n    const minLength = this.getAttribute('min-length');\n    const maxLength = this.getAttribute('max-length');\n\n    // Required validation\n    if (required && !value.trim()) {\n      isValid = false;\n      error = 'This field is required';\n    }\n\n    // Pattern validation\n    if (isValid && pattern && value && !new RegExp(pattern).test(value)) {\n      isValid = false;\n      error = 'Invalid format';\n    }\n\n    // Length validation\n    if (isValid && minLength && value.length < parseInt(minLength, 10)) {\n      isValid = false;\n      error = `Minimum length is ${minLength} characters`;\n    }\n\n    if (isValid && maxLength && value.length > parseInt(maxLength, 10)) {\n      isValid = false;\n      error = `Maximum length is ${maxLength} characters`;\n    }\n\n    // Update UI\n    input.classList.toggle('error', !isValid);\n    errorMessage.textContent = error;\n    errorMessage.classList.toggle('visible', !isValid);\n    confirmButton.disabled = !isValid;\n\n    return isValid;\n  }\n\n  private handleClose(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise(null);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'prompt-dialog-close', {\n      dialogId: this.id,\n      dialog: this,\n      value: null,\n    });\n  }\n\n  private handleCancel(event: Event): void {\n    const cancelable = dispatchCustomEvent(this, 'prompt-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n    });\n\n    if (!cancelable) {\n      event.preventDefault();\n    } else {\n      this.cancel();\n    }\n  }\n\n  private confirm(): void {\n    if (!this.validateInput()) return;\n\n    const input = this.shadowRoot?.querySelector('.dialog-input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n    const value = input?.value || '';\n\n    if (this._resolvePromise) {\n      this._resolvePromise(value);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'prompt-dialog-confirm', {\n      dialogId: this.id,\n      dialog: this,\n      value,\n    });\n\n    this._nativeDialog?.close(value);\n  }\n\n  private cancel(): void {\n    if (this._resolvePromise) {\n      this._resolvePromise(null);\n      this._resolvePromise = null;\n      this._rejectPromise = null;\n    }\n\n    dispatchCustomEvent(this, 'prompt-dialog-cancel', {\n      dialogId: this.id,\n      dialog: this,\n      value: null,\n    });\n\n    this._nativeDialog?.close();\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || 'Input Required';\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get message(): string {\n    return this.getAttribute('message') || '';\n  }\n\n  set message(value: string) {\n    this.setAttribute('message', value);\n  }\n\n  get placeholder(): string {\n    return this.getAttribute('placeholder') || '';\n  }\n\n  set placeholder(value: string) {\n    this.setAttribute('placeholder', value);\n  }\n\n  get defaultValue(): string {\n    return this.getAttribute('default-value') || '';\n  }\n\n  set defaultValue(value: string) {\n    this.setAttribute('default-value', value);\n  }\n\n  get confirmText(): string {\n    return this.getAttribute('confirm-text') || 'OK';\n  }\n\n  set confirmText(value: string) {\n    this.setAttribute('confirm-text', value);\n  }\n\n  get cancelText(): string {\n    return this.getAttribute('cancel-text') || 'Cancel';\n  }\n\n  set cancelText(value: string) {\n    this.setAttribute('cancel-text', value);\n  }\n\n  get required(): boolean {\n    return this.hasAttribute('required');\n  }\n\n  set required(value: boolean) {\n    if (value) {\n      this.setAttribute('required', '');\n    } else {\n      this.removeAttribute('required');\n    }\n  }\n\n  get multiline(): boolean {\n    return this.hasAttribute('multiline');\n  }\n\n  set multiline(value: boolean) {\n    if (value) {\n      this.setAttribute('multiline', '');\n    } else {\n      this.removeAttribute('multiline');\n    }\n  }\n\n  get value(): string {\n    const input = this.shadowRoot?.querySelector('.dialog-input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n    return input?.value || '';\n  }\n\n  set value(value: string) {\n    const input = this.shadowRoot?.querySelector('.dialog-input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n    if (input) {\n      input.value = value;\n      this.validateInput();\n    }\n  }\n\n  get open(): boolean {\n    return this._nativeDialog?.open || false;\n  }\n\n  /**\n   * Show the prompt dialog and return a promise that resolves to the input value or null if cancelled\n   */\n  public show(): Promise<string | null> {\n    return new Promise((resolve, reject) => {\n      if (this._resolvePromise) {\n        // Already showing, reject the previous promise\n        this._rejectPromise?.(\n          new Error('Dialog was replaced by another show() call')\n        );\n      }\n\n      this._resolvePromise = resolve;\n      this._rejectPromise = reject;\n\n      dispatchCustomEvent(this, 'prompt-dialog-show', {\n        dialogId: this.id,\n        dialog: this,\n      });\n\n      this._nativeDialog?.showModal();\n\n      // Focus the input after showing\n      setTimeout(() => {\n        const input = this.shadowRoot?.querySelector('.dialog-input') as\n          | HTMLInputElement\n          | HTMLTextAreaElement;\n        input?.focus();\n        input?.select();\n      }, 100);\n    });\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-prompt')) {\n  customElements.define('e2-prompt', PromptDialogElement);\n}\n","/**\n * Notification Element\n * A toast notification component with theming and animation support\n */\n\nimport { EditorElementProperties, NotificationType, Theme } from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class NotificationElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _timeoutId: number | null = null;\n  private _visible: boolean = false;\n  private _resolvePromise: (() => void) | null = null;\n  private _rejectPromise: ((reason?: any) => void) | null = null;\n\n  static get observedAttributes(): string[] {\n    return [\n      'type',\n      'title',\n      'message',\n      'timeout',\n      'dismissible',\n      'persistent',\n      'theme',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --notification-bg: #ffffff;\n          --notification-border: #e0e0e0;\n          --notification-shadow: rgba(0, 0, 0, 0.1);\n          --notification-text: #333333;\n          --notification-title: #1a1a1a;\n          --notification-close-hover: #f0f0f0;\n          --notification-close-active: #e0e0e0;\n          --notification-icon-info: #3b82f6;\n          --notification-icon-success: #10b981;\n          --notification-icon-warning: #f59e0b;\n          --notification-icon-error: #ef4444;\n\n          display: block;\n          position: fixed;\n          z-index: 10000;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n\n          /* Default positioning - can be overridden by container */\n          top: 20px;\n          right: 20px;\n\n          /* Animation states */\n          opacity: 0;\n          transform: translateX(100%);\n          transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n          pointer-events: none;\n        }\n\n        :host(.visible) {\n          opacity: 1;\n          transform: translateX(0);\n          pointer-events: auto;\n        }\n\n        :host(.theme-dark) {\n          --notification-bg: #374151;\n          --notification-border: #4b5563;\n          --notification-text: #e5e7eb;\n          --notification-title: #f9fafb;\n          --notification-close-hover: #4b5563;\n          --notification-close-active: #6b7280;\n        }\n\n        .notification {\n          background: var(--notification-bg);\n          border: 1px solid var(--notification-border);\n          border-radius: 8px;\n          box-shadow: 0 4px 12px var(--notification-shadow);\n          padding: 16px;\n          min-width: 320px;\n          max-width: 480px;\n          display: flex;\n          align-items: flex-start;\n          gap: 12px;\n          position: relative;\n        }\n\n        .notification-icon {\n          flex-shrink: 0;\n          width: 20px;\n          height: 20px;\n          margin-top: 2px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 16px;\n        }\n\n        .notification-icon.type-info {\n          color: var(--notification-icon-info);\n        }\n\n        .notification-icon.type-success {\n          color: var(--notification-icon-success);\n        }\n\n        .notification-icon.type-warning {\n          color: var(--notification-icon-warning);\n        }\n\n        .notification-icon.type-error {\n          color: var(--notification-icon-error);\n        }\n\n        .notification-content {\n          flex: 1;\n          min-width: 0;\n        }\n\n        .notification-title {\n          color: var(--notification-title);\n          font-weight: 600;\n          margin: 0 0 4px 0;\n          font-size: 14px;\n          line-height: 1.4;\n        }\n\n        .notification-message {\n          color: var(--notification-text);\n          margin: 0;\n          font-size: 14px;\n          line-height: 1.4;\n          word-wrap: break-word;\n        }\n\n        .notification-close {\n          flex-shrink: 0;\n          background: none;\n          border: none;\n          color: var(--notification-text);\n          cursor: pointer;\n          padding: 4px;\n          border-radius: 4px;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 16px;\n          line-height: 1;\n          margin-top: -2px;\n          margin-right: -2px;\n        }\n\n        .notification-close:hover {\n          background: var(--notification-close-hover);\n        }\n\n        .notification-close:active {\n          background: var(--notification-close-active);\n        }\n\n        .notification-close:focus {\n          outline: 2px solid var(--notification-icon-info);\n          outline-offset: 1px;\n        }\n\n        :host([dismissible=\"false\"]) .notification-close {\n          display: none;\n        }\n\n        /* Progress bar for timed notifications */\n        .notification-progress {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          height: 3px;\n          background: var(--notification-icon-info);\n          border-radius: 0 0 8px 8px;\n          transition: width linear;\n          opacity: 0.6;\n        }\n\n        :host([type=\"success\"]) .notification-progress {\n          background: var(--notification-icon-success);\n        }\n\n        :host([type=\"warning\"]) .notification-progress {\n          background: var(--notification-icon-warning);\n        }\n\n        :host([type=\"error\"]) .notification-progress {\n          background: var(--notification-icon-error);\n        }\n\n        :host([timeout=\"0\"]) .notification-progress,\n        :host([persistent]) .notification-progress {\n          display: none;\n        }\n      </style>\n\n      <div class=\"notification\" part=\"notification\">\n        <div class=\"notification-icon\" part=\"icon\"></div>\n        <div class=\"notification-content\" part=\"content\">\n          <div class=\"notification-title\" part=\"title\"></div>\n          <div class=\"notification-message\" part=\"message\"></div>\n        </div>\n        <button class=\"notification-close\" part=\"close-button\" type=\"button\" aria-label=\"Close notification\">\n          ×\n        </button>\n        <div class=\"notification-progress\" part=\"progress\"></div>\n      </div>\n    `;\n\n    this.setupEventListeners();\n    this.updateContent();\n  }\n\n  private setupEventListeners(): void {\n    const closeButton = this.shadowRoot?.querySelector('.notification-close');\n    const notification = this.shadowRoot?.querySelector('.notification');\n\n    if (closeButton) {\n      closeButton.addEventListener('click', this.handleCloseClick.bind(this));\n    }\n\n    if (notification) {\n      notification.addEventListener(\n        'click',\n        this.handleNotificationClick.bind(this)\n      );\n    }\n  }\n\n  private handleCloseClick(event: Event): void {\n    event.stopPropagation();\n    this.dismiss();\n  }\n\n  private handleNotificationClick(): void {\n    dispatchCustomEvent(this, 'notification-click', {\n      notificationId: this.id,\n      notification: this,\n      type: this.type,\n    });\n  }\n\n  private updateContent(): void {\n    const shadowRoot = this.shadowRoot;\n    if (!shadowRoot) return;\n\n    const iconElement = shadowRoot.querySelector('.notification-icon');\n    const titleElement = shadowRoot.querySelector('.notification-title');\n    const messageElement = shadowRoot.querySelector('.notification-message');\n\n    if (iconElement) {\n      iconElement.className = `notification-icon type-${this.type}`;\n      iconElement.textContent = this.getIconForType(this.type);\n    }\n\n    if (titleElement) {\n      const title = this.title;\n      if (title) {\n        titleElement.textContent = title;\n        (titleElement as HTMLElement).style.display = 'block';\n      } else {\n        (titleElement as HTMLElement).style.display = 'none';\n      }\n    }\n\n    if (messageElement) {\n      messageElement.textContent = this.message;\n    }\n  }\n\n  private getIconForType(type: NotificationType): string {\n    switch (type) {\n      case 'success':\n        return '✓';\n      case 'warning':\n        return '⚠';\n      case 'error':\n        return '✕';\n      case 'info':\n      default:\n        return 'ℹ';\n    }\n  }\n\n  private startTimeout(): void {\n    this.clearTimeout();\n\n    const timeout = this.timeout;\n    if (timeout <= 0 || this.persistent) return;\n\n    const progressBar = this.shadowRoot?.querySelector(\n      '.notification-progress'\n    ) as HTMLElement;\n    if (progressBar) {\n      progressBar.style.width = '100%';\n      progressBar.style.transitionDuration = `${timeout}ms`;\n\n      // Animate progress bar\n      requestAnimationFrame(() => {\n        progressBar.style.width = '0%';\n      });\n    }\n\n    this._timeoutId = window.setTimeout(() => {\n      this.hide();\n    }, timeout);\n  }\n\n  private clearTimeout(): void {\n    if (this._timeoutId !== null) {\n      window.clearTimeout(this._timeoutId);\n      this._timeoutId = null;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('notification');\n    }\n    this.applyTheme(this._theme);\n  }\n\n  disconnectedCallback(): void {\n    this.clearTimeout();\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'type':\n      case 'title':\n      case 'message':\n        this.updateContent();\n        break;\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'timeout':\n      case 'persistent':\n        if (this._visible) {\n          this.startTimeout();\n        }\n        break;\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get type(): NotificationType {\n    return (this.getAttribute('type') as NotificationType) || 'info';\n  }\n\n  set type(value: NotificationType) {\n    this.setAttribute('type', value);\n  }\n\n  get title(): string {\n    return this.getAttribute('title') || '';\n  }\n\n  set title(value: string) {\n    this.setAttribute('title', value);\n  }\n\n  get message(): string {\n    return this.getAttribute('message') || 'This is a notification message.';\n  }\n\n  set message(value: string) {\n    this.setAttribute('message', value);\n  }\n\n  get timeout(): number {\n    return parseInt(this.getAttribute('timeout') || '5000', 10);\n  }\n\n  set timeout(value: number) {\n    this.setAttribute('timeout', value.toString());\n  }\n\n  get dismissible(): boolean {\n    return this.getAttribute('dismissible') !== 'false';\n  }\n\n  set dismissible(value: boolean) {\n    this.setAttribute('dismissible', value.toString());\n  }\n\n  get persistent(): boolean {\n    return this.hasAttribute('persistent');\n  }\n\n  set persistent(value: boolean) {\n    if (value) {\n      this.setAttribute('persistent', '');\n    } else {\n      this.removeAttribute('persistent');\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  /**\n   * Show the notification and return a promise that resolves when hidden\n   */\n  public show(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this._resolvePromise) {\n        // Already showing, reject the previous promise\n        this._rejectPromise?.(\n          new Error('Notification was replaced by another show() call')\n        );\n      }\n\n      this._resolvePromise = resolve;\n      this._rejectPromise = reject;\n\n      this._visible = true;\n      this.classList.add('visible');\n\n      dispatchCustomEvent(this, 'notification-show', {\n        notificationId: this.id,\n        notification: this,\n        type: this.type,\n      });\n\n      this.startTimeout();\n    });\n  }\n\n  /**\n   * Hide the notification with animation\n   */\n  public hide(): void {\n    if (!this._visible) return;\n\n    this._visible = false;\n    this.classList.remove('visible');\n    this.clearTimeout();\n\n    dispatchCustomEvent(this, 'notification-hide', {\n      notificationId: this.id,\n      notification: this,\n      type: this.type,\n    });\n\n    // Resolve the promise after animation completes\n    setTimeout(() => {\n      if (this._resolvePromise) {\n        this._resolvePromise();\n        this._resolvePromise = null;\n        this._rejectPromise = null;\n      }\n    }, 300); // Match CSS transition duration\n  }\n\n  /**\n   * Dismiss the notification (hide and remove from DOM if appropriate)\n   */\n  public dismiss(): void {\n    dispatchCustomEvent(this, 'notification-dismiss', {\n      notificationId: this.id,\n      notification: this,\n      type: this.type,\n    });\n\n    this.hide();\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-notification')) {\n  customElements.define('e2-notification', NotificationElement);\n}\n","/**\n * Notification Container Element\n * A container that manages positioning and lifecycle of notification toasts\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport type NotificationPosition =\n  | 'top-left'\n  | 'top-right'\n  | 'top-center'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'bottom-center';\n\nexport type StackDirection = 'up' | 'down';\n\nexport class NotificationContainerElement\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _observer: MutationObserver | null = null;\n\n  static get observedAttributes(): string[] {\n    return [\n      'position',\n      'max-notifications',\n      'stack-direction',\n      'spacing',\n      'theme',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          --container-spacing: 16px;\n          --notification-gap: 8px;\n\n          position: fixed;\n          z-index: 10000;\n          pointer-events: none;\n          display: flex;\n          flex-direction: column;\n          gap: var(--notification-gap);\n          max-width: calc(100vw - 40px);\n          max-height: calc(100vh - 40px);\n          overflow: hidden;\n        }\n\n        /* Position variants */\n        :host([position=\"top-left\"]) {\n          top: var(--container-spacing);\n          left: var(--container-spacing);\n          align-items: flex-start;\n        }\n\n        :host([position=\"top-right\"]) {\n          top: var(--container-spacing);\n          right: var(--container-spacing);\n          align-items: flex-end;\n        }\n\n        :host([position=\"top-center\"]) {\n          top: var(--container-spacing);\n          left: 50%;\n          transform: translateX(-50%);\n          align-items: center;\n        }\n\n        :host([position=\"bottom-left\"]) {\n          bottom: var(--container-spacing);\n          left: var(--container-spacing);\n          align-items: flex-start;\n          flex-direction: column-reverse;\n        }\n\n        :host([position=\"bottom-right\"]) {\n          bottom: var(--container-spacing);\n          right: var(--container-spacing);\n          align-items: flex-end;\n          flex-direction: column-reverse;\n        }\n\n        :host([position=\"bottom-center\"]) {\n          bottom: var(--container-spacing);\n          left: 50%;\n          transform: translateX(-50%);\n          align-items: center;\n          flex-direction: column-reverse;\n        }\n\n        /* Stack direction overrides */\n        :host([stack-direction=\"up\"]) {\n          flex-direction: column-reverse;\n        }\n\n        :host([stack-direction=\"down\"]) {\n          flex-direction: column;\n        }\n\n        /* Spacing control */\n        :host([spacing=\"small\"]) {\n          --notification-gap: 4px;\n        }\n\n        :host([spacing=\"medium\"]) {\n          --notification-gap: 8px;\n        }\n\n        :host([spacing=\"large\"]) {\n          --notification-gap: 16px;\n        }\n\n        ::slotted(e2-notification) {\n          pointer-events: auto;\n          position: static !important;\n          transform: none !important;\n          margin: 0;\n        }\n\n        /* Animation for notifications */\n        ::slotted(e2-notification:not(.visible)) {\n          opacity: 0;\n          transform: scale(0.9);\n          transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n        }\n\n        ::slotted(e2-notification.visible) {\n          opacity: 1;\n          transform: scale(1);\n        }\n\n        /* Stacking animations for top positions */\n        :host([position^=\"top\"]) ::slotted(e2-notification) {\n          animation: slideInFromTop 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n        }\n\n        /* Stacking animations for bottom positions */\n        :host([position^=\"bottom\"]) ::slotted(e2-notification) {\n          animation: slideInFromBottom 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n        }\n\n        @keyframes slideInFromTop {\n          from {\n            opacity: 0;\n            transform: translateY(-20px) scale(0.9);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0) scale(1);\n          }\n        }\n\n        @keyframes slideInFromBottom {\n          from {\n            opacity: 0;\n            transform: translateY(20px) scale(0.9);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0) scale(1);\n          }\n        }\n\n        /* Responsive adjustments */\n        @media (max-width: 640px) {\n          :host {\n            --container-spacing: 12px;\n            max-width: calc(100vw - 24px);\n          }\n\n          ::slotted(e2-notification) {\n            min-width: 280px;\n            max-width: calc(100vw - 24px);\n          }\n        }\n      </style>\n\n      <slot></slot>\n    `;\n\n    this.setupMutationObserver();\n  }\n\n  private setupMutationObserver(): void {\n    this._observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.type === 'childList') {\n          this.manageNotifications();\n          this.updateNotificationPositions();\n        }\n      });\n    });\n\n    this._observer.observe(this, {\n      childList: true,\n      subtree: false,\n    });\n  }\n\n  private manageNotifications(): void {\n    const notifications = this.querySelectorAll('e2-notification');\n    const maxNotifications = this.maxNotifications;\n\n    if (maxNotifications > 0 && notifications.length > maxNotifications) {\n      // Remove oldest notifications that exceed the limit\n      const excess = notifications.length - maxNotifications;\n      for (let i = 0; i < excess; i++) {\n        const notification = notifications[i] as any;\n        if (typeof notification.dismiss === 'function') {\n          notification.dismiss();\n        } else {\n          notification.remove();\n        }\n      }\n    }\n\n    // Dispatch container update event\n    dispatchCustomEvent(this, 'notification-container-update', {\n      containerId: this.id,\n      container: this,\n      position: this.position,\n      count: notifications.length,\n    });\n  }\n\n  private updateNotificationPositions(): void {\n    const notifications = this.querySelectorAll('e2-notification');\n\n    notifications.forEach((notification, index) => {\n      // Apply theme to notification if it matches container theme\n      if (\n        this._theme !== 'auto' &&\n        typeof (notification as any).applyTheme === 'function'\n      ) {\n        (notification as any).theme = this._theme;\n      }\n\n      // Apply z-index to ensure proper stacking\n      (notification as HTMLElement).style.zIndex = (\n        10000 +\n        notifications.length -\n        index\n      ).toString();\n    });\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('notification-container');\n    }\n    this.applyTheme(this._theme);\n    this.updateNotificationPositions();\n  }\n\n  disconnectedCallback(): void {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._observer = null;\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'position':\n      case 'stack-direction':\n      case 'spacing':\n        // Handled by CSS attribute selectors\n        break;\n      case 'max-notifications':\n        this.manageNotifications();\n        break;\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        this.updateNotificationPositions();\n        break;\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get position(): NotificationPosition {\n    return (\n      (this.getAttribute('position') as NotificationPosition) || 'top-right'\n    );\n  }\n\n  set position(value: NotificationPosition) {\n    this.setAttribute('position', value);\n  }\n\n  get maxNotifications(): number {\n    return parseInt(this.getAttribute('max-notifications') || '5', 10);\n  }\n\n  set maxNotifications(value: number) {\n    this.setAttribute('max-notifications', value.toString());\n  }\n\n  get stackDirection(): StackDirection {\n    return (this.getAttribute('stack-direction') as StackDirection) || 'down';\n  }\n\n  set stackDirection(value: StackDirection) {\n    this.setAttribute('stack-direction', value);\n  }\n\n  get spacing(): 'small' | 'medium' | 'large' {\n    return (\n      (this.getAttribute('spacing') as 'small' | 'medium' | 'large') || 'medium'\n    );\n  }\n\n  set spacing(value: 'small' | 'medium' | 'large') {\n    this.setAttribute('spacing', value);\n  }\n\n  /**\n   * Add a notification to this container\n   */\n  public addNotification(notification: HTMLElement): void {\n    this.appendChild(notification);\n  }\n\n  /**\n   * Remove a notification from this container\n   */\n  public removeNotification(notification: HTMLElement): void {\n    if (this.contains(notification)) {\n      this.removeChild(notification);\n    }\n  }\n\n  /**\n   * Clear all notifications from this container\n   */\n  public clear(): void {\n    const notifications = this.querySelectorAll('e2-notification');\n    notifications.forEach(notification => {\n      const notificationElement = notification as any;\n      if (typeof notificationElement.dismiss === 'function') {\n        notificationElement.dismiss();\n      } else {\n        notification.remove();\n      }\n    });\n  }\n\n  /**\n   * Get count of visible notifications\n   */\n  public getNotificationCount(): number {\n    return this.querySelectorAll('e2-notification').length;\n  }\n\n  public applyTheme(theme: Theme): void {\n    this._theme = theme;\n    applyTheme(this, theme);\n    this.updateNotificationPositions();\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-notification-container')) {\n  customElements.define(\n    'e2-notification-container',\n    NotificationContainerElement\n  );\n}\n","/**\n * Collapsible Panel Element\n * A panel that can be collapsed to a thin bar with an expand button\n * or expanded to show its full content\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport type PanelOrientation = 'horizontal' | 'vertical';\n\nexport class CollapsiblePanel\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _collapsed: boolean = false;\n  private _orientation: PanelOrientation = 'vertical';\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'collapsed', 'orientation'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          background: var(--panel-bg, #ffffff);\n          border: 1px solid var(--panel-border, #ccc);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          transition: all 0.3s ease;\n        }\n\n        :host(.theme-dark) {\n          background: var(--panel-bg-dark, #2d2d2d);\n          border-color: var(--panel-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Vertical orientation (default) */\n        :host([orientation=\"vertical\"]) {\n          min-height: 200px;\n        }\n\n        :host([orientation=\"vertical\"][collapsed]) {\n          min-height: 32px;\n          height: 32px;\n          overflow: hidden;\n        }\n\n        /* Horizontal orientation */\n        :host([orientation=\"horizontal\"]) {\n          min-width: 200px;\n          display: inline-block;\n          vertical-align: top;\n        }\n\n        :host([orientation=\"horizontal\"][collapsed]) {\n          min-width: 32px;\n          width: 32px;\n          overflow: hidden;\n        }\n\n        .panel-header {\n          display: flex;\n          align-items: center;\n          padding: 8px;\n          background: var(--panel-header-bg, #f8f8f8);\n          border-bottom: 1px solid var(--panel-border, #ccc);\n          min-height: 16px;\n          cursor: pointer;\n          user-select: none;\n        }\n\n        :host(.theme-dark) .panel-header {\n          background: var(--panel-header-bg-dark, #3a3a3a);\n          border-bottom-color: var(--panel-border-dark, #555);\n        }\n\n        .panel-header:hover {\n          background: var(--panel-header-hover-bg, #e8e8e8);\n        }\n\n        :host(.theme-dark) .panel-header:hover {\n          background: var(--panel-header-hover-bg-dark, #404040);\n        }\n\n        .toggle-button {\n          width: 16px;\n          height: 16px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 12px;\n          margin-right: 8px;\n          flex-shrink: 0;\n        }\n\n        /* Vertical orientation icons */\n        :host([orientation=\"vertical\"]) .toggle-button .burger-icon {\n          display: none;\n        }\n\n        :host([orientation=\"vertical\"]) .toggle-button .close-icon {\n          display: block;\n        }\n\n        :host([orientation=\"vertical\"][collapsed]) .toggle-button .burger-icon {\n          display: block;\n        }\n\n        :host([orientation=\"vertical\"][collapsed]) .toggle-button .close-icon {\n          display: none;\n        }\n\n        /* Horizontal orientation icons */\n        :host([orientation=\"horizontal\"]) .toggle-button .burger-icon {\n          display: none;\n        }\n\n        :host([orientation=\"horizontal\"]) .toggle-button .close-icon {\n          display: block;\n        }\n\n        :host([orientation=\"horizontal\"][collapsed]) .toggle-button .burger-icon {\n          display: block;\n        }\n\n        :host([orientation=\"horizontal\"][collapsed]) .toggle-button .close-icon {\n          display: none;\n        }\n\n        /* Rotate icons for horizontal orientation */\n        :host([orientation=\"horizontal\"]) .toggle-button {\n          transform: rotate(90deg);\n        }\n\n        .panel-title {\n          flex-grow: 1;\n          font-weight: 500;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n\n        /* Hide title when collapsed */\n        :host([collapsed]) .panel-title {\n          display: none;\n        }\n\n        .panel-content {\n          padding: 12px;\n          overflow: auto;\n        }\n\n        :host([collapsed]) .panel-content {\n          display: none;\n        }\n\n        /* Content slot styling */\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n\n      <div class=\"panel-header\">\n        <div class=\"toggle-button\">\n          <span class=\"burger-icon\">☰</span>\n          <span class=\"close-icon\">✕</span>\n        </div>\n        <div class=\"panel-title\">\n          <slot name=\"title\">Panel</slot>\n        </div>\n      </div>\n\n      <div class=\"panel-content\">\n        <slot></slot>\n      </div>\n    `;\n\n    // Add click handler for the header\n    const header = shadowRoot.querySelector('.panel-header') as HTMLElement;\n    header.addEventListener('click', this.handleToggle.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('collapsible-panel');\n    }\n    this.applyTheme(this._theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n      case 'collapsed':\n        this._collapsed = newValue !== null;\n        break;\n      case 'orientation':\n        this._orientation = (newValue as PanelOrientation) || 'vertical';\n        break;\n    }\n  }\n\n  private handleToggle(): void {\n    this.collapsed = !this.collapsed;\n\n    // Dispatch toggle event\n    dispatchCustomEvent(this, 'collapsible-panel-toggle', {\n      panelId: this.id,\n      panel: this,\n      collapsed: this.collapsed,\n      orientation: this.orientation,\n    });\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n  }\n\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n\n  set collapsed(value: boolean) {\n    this._collapsed = value;\n    if (value) {\n      this.setAttribute('collapsed', '');\n    } else {\n      this.removeAttribute('collapsed');\n    }\n  }\n\n  get orientation(): PanelOrientation {\n    return this._orientation;\n  }\n\n  set orientation(value: PanelOrientation) {\n    this._orientation = value;\n    this.setAttribute('orientation', value);\n  }\n\n  toggle(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  expand(): void {\n    this.collapsed = false;\n  }\n\n  collapse(): void {\n    this.collapsed = true;\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-collapsible-panel')) {\n  customElements.define('e2-collapsible-panel', CollapsiblePanel);\n}\n","/**\n * Split Panel Element\n * A single panel within a split panel container that can be resized\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport { applyTheme, generateId, getShadowRoot } from '../../utils';\n\nexport class SplitPanel extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _size: number = 50; // percentage\n  private _minSize: number = 10; // percentage\n  private _maxSize: number = 90; // percentage\n  private _resizable: boolean = true;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'size', 'min-size', 'max-size', 'resizable'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          background: var(--panel-bg, #ffffff);\n          border: 1px solid var(--panel-border, #e0e0e0);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          overflow: hidden;\n          box-sizing: border-box;\n        }\n\n        :host(.theme-dark) {\n          background: var(--panel-bg-dark, #2d2d2d);\n          border-color: var(--panel-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .panel-content {\n          width: 100%;\n          height: 100%;\n          overflow: auto;\n          box-sizing: border-box;\n          padding: var(--panel-padding, 8px);\n        }\n\n        /* Content slot styling */\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n\n      <div class=\"panel-content\">\n        <slot></slot>\n      </div>\n    `;\n\n    // Set up event listeners\n    this.addEventListener('resize', this.handleResize.bind(this));\n  }\n\n  connectedCallback(): void {\n    // Apply initial attribute values\n    this.applyTheme(this._theme);\n\n    // Generate ID if not provided\n    if (!this.id) {\n      this.id = generateId('split-panel');\n    }\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'size':\n        this._size = parseFloat(newValue || '50');\n        this.updateSize();\n        break;\n      case 'min-size':\n        this._minSize = parseFloat(newValue || '10');\n        break;\n      case 'max-size':\n        this._maxSize = parseFloat(newValue || '90');\n        break;\n      case 'resizable':\n        this._resizable = newValue !== 'false';\n        break;\n      case 'disabled':\n        this.toggleAttribute('disabled', newValue !== null);\n        break;\n    }\n  }\n\n  private handleResize(): void {\n    // Handle resize events from the container\n    this.updateSize();\n  }\n\n  private updateSize(): void {\n    // The container will handle the actual sizing via CSS\n    // This method can be used for cleanup or notifications\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  set size(value: number) {\n    this.setAttribute('size', value.toString());\n  }\n\n  get minSize(): number {\n    return this._minSize;\n  }\n\n  set minSize(value: number) {\n    this.setAttribute('min-size', value.toString());\n  }\n\n  get maxSize(): number {\n    return this._maxSize;\n  }\n\n  set maxSize(value: number) {\n    this.setAttribute('max-size', value.toString());\n  }\n\n  get resizable(): boolean {\n    return this._resizable;\n  }\n\n  set resizable(value: boolean) {\n    this.setAttribute('resizable', value.toString());\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  // Utility method to get the current computed size\n  getCurrentSize(): number {\n    const container = this.parentElement;\n    if (!container) return this._size;\n\n    const isVertical = container.getAttribute('orientation') === 'vertical';\n\n    if (isVertical) {\n      const containerHeight = container.clientHeight;\n      const thisHeight = this.clientHeight;\n      return (thisHeight / containerHeight) * 100;\n    } else {\n      const containerWidth = container.clientWidth;\n      const thisWidth = this.clientWidth;\n      return (thisWidth / containerWidth) * 100;\n    }\n  }\n}\n\n// Register the element\nif (!customElements.get('e2-split-panel')) {\n  customElements.define('e2-split-panel', SplitPanel);\n}\n\nexport default SplitPanel;\n","/**\n * Split Panel Container Element\n * A container that manages multiple resizable split panels with drag handles\n */\n\nimport {\n  EditorElementProperties,\n  SplitPanelOrientation,\n  SplitPanelResizeEndEvent,\n  SplitPanelResizeEvent,\n  SplitPanelResizeStartEvent,\n  Theme,\n} from '../../types';\nimport {\n  applyTheme,\n  debounce,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class SplitPanelContainer\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _orientation: SplitPanelOrientation = 'horizontal';\n  private _resizing: boolean = false;\n  private _activePanel: HTMLElement | null = null;\n  private _startPosition: number = 0;\n  private _startSize: number = 0;\n  private _nextPanelStartSize: number = 0;\n  private _updatingPanelSizes: boolean = false;\n\n  private debouncedResize = debounce(this.handleResize.bind(this), 16);\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'orientation'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.bindEvents();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          position: relative;\n          width: 100%;\n          height: 100%;\n          min-height: 200px;\n          background: var(--container-bg, #f5f5f5);\n          font-family: var(--font-family, system-ui, sans-serif);\n          overflow: hidden;\n          box-sizing: border-box;\n        }\n\n        :host(.theme-dark) {\n          background: var(--container-bg-dark, #1e1e1e);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Horizontal layout (side by side) */\n        :host([orientation=\"horizontal\"]) {\n          flex-direction: row;\n        }\n\n        /* Vertical layout (stacked) */\n        :host([orientation=\"vertical\"]) {\n          flex-direction: column;\n        }\n\n        /* Panel styling */\n        ::slotted(e2-split-panel) {\n          flex-shrink: 0;\n          overflow: hidden;\n          position: relative;\n        }\n\n        /* Add spacing for handles and visual separators */\n        ::slotted(e2-split-panel:not(:last-child)) {\n          border-right: var(--handle-size, 4px) solid var(--handle-bg, #ccc);\n        }\n\n        :host([orientation=\"vertical\"]) ::slotted(e2-split-panel:not(:last-child)) {\n          border-right: none;\n          border-bottom: var(--handle-size, 4px) solid var(--handle-bg, #ccc);\n        }\n\n        :host(.theme-dark) ::slotted(e2-split-panel:not(:last-child)) {\n          border-right-color: var(--handle-bg-dark, #555);\n        }\n\n        :host([orientation=\"vertical\"].theme-dark) ::slotted(e2-split-panel:not(:last-child)) {\n          border-bottom-color: var(--handle-bg-dark, #555);\n        }\n\n        /* No user selection during drag */\n        :host(.dragging) {\n          user-select: none;\n        }\n\n        :host(.dragging) ::slotted(*) {\n          user-select: none;\n          pointer-events: none;\n        }\n      </style>\n\n      <slot></slot>\n    `;\n  }\n\n  private bindEvents(): void {\n    // Handle mouse events for resizing\n    this.addEventListener('mousedown', this.handleMouseDown.bind(this));\n    this.addEventListener('mousemove', this.handleMouseMove.bind(this));\n    this.addEventListener('mouseup', this.handleMouseUp.bind(this));\n    this.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n\n    // Handle window resize\n    window.addEventListener('resize', this.debouncedResize);\n\n    // Don't listen to slotchange to avoid infinite loops\n    // Instead, we'll rely on the initial setup and manual updates\n  }\n\n  connectedCallback(): void {\n    // Apply initial attribute values\n    this.applyTheme(this._theme);\n\n    // Generate ID if not provided\n    if (!this.id) {\n      this.id = generateId('split-panel-container');\n    }\n\n    // Initial setup\n    setTimeout(() => {\n      this.updateHandles();\n      this.updatePanelSizes();\n    }, 0);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener('resize', this.debouncedResize);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'orientation':\n        this._orientation = (newValue as SplitPanelOrientation) || 'horizontal';\n        this.updateHandles();\n        this.updatePanelSizes();\n        break;\n      case 'disabled':\n        this.toggleAttribute('disabled', newValue !== null);\n        break;\n    }\n  }\n\n  private updateHandles(): void {\n    // Do nothing - we're using CSS borders as visual handles\n    // and mouse event delegation for interaction\n  }\n\n  private updatePanelSizes(): void {\n    // Prevent infinite recursion\n    if (this._updatingPanelSizes) return;\n    this._updatingPanelSizes = true;\n\n    try {\n      const panels = this.getPanels();\n      if (panels.length === 0) return;\n\n      // Calculate total available space\n      const containerRect = this.getBoundingClientRect();\n      const handleSize = parseInt(\n        getComputedStyle(this).getPropertyValue('--handle-size') || '4'\n      );\n      const totalHandles = panels.length - 1;\n      const totalHandleSpace = totalHandles * handleSize;\n\n      const availableSpace =\n        this._orientation === 'horizontal'\n          ? containerRect.width - totalHandleSpace\n          : containerRect.height - totalHandleSpace;\n\n      // Calculate default sizes if not set\n      let totalSetSize = 0;\n      let unsetPanels = 0;\n\n      panels.forEach(panel => {\n        const size = parseFloat(panel.getAttribute('size') || '0');\n        if (size > 0) {\n          totalSetSize += size;\n        } else {\n          unsetPanels++;\n        }\n      });\n\n      const remainingPercentage = Math.max(0, 100 - totalSetSize);\n      const defaultSize =\n        unsetPanels > 0 ? remainingPercentage / unsetPanels : 0;\n\n      // Apply sizes\n      panels.forEach(panel => {\n        let size = parseFloat(panel.getAttribute('size') || '0');\n        if (size <= 0) {\n          size = defaultSize;\n          // Only set attribute if it's actually different to avoid recursive calls\n          const currentSize = panel.getAttribute('size');\n          if (currentSize !== size.toString()) {\n            panel.setAttribute('size', size.toString());\n          }\n        }\n\n        const actualSize = (size / 100) * availableSpace;\n\n        if (this._orientation === 'horizontal') {\n          panel.style.width = `${actualSize}px`;\n          panel.style.height = '100%';\n          panel.style.flexBasis = `${actualSize}px`;\n        } else {\n          panel.style.height = `${actualSize}px`;\n          panel.style.width = '100%';\n          panel.style.flexBasis = `${actualSize}px`;\n        }\n      });\n    } finally {\n      this._updatingPanelSizes = false;\n    }\n  }\n\n  private handleMouseDown(event: MouseEvent): void {\n    const panels = this.getPanels();\n    if (panels.length < 2) return;\n\n    // Find which panel border we're on\n    let panelIndex = -1;\n    let currentPanel: HTMLElement | null = null;\n    let nextPanel: HTMLElement | null = null;\n\n    const handleSize = parseInt(\n      getComputedStyle(this).getPropertyValue('--handle-size') || '4'\n    );\n\n    for (let i = 0; i < panels.length - 1; i++) {\n      const panel = panels[i];\n      const rect = panel.getBoundingClientRect();\n      const containerRect = this.getBoundingClientRect();\n\n      const relativeX = event.clientX - containerRect.left;\n      const relativeY = event.clientY - containerRect.top;\n\n      let onBorder = false;\n\n      if (this._orientation === 'horizontal') {\n        // Check if we're on the right border of this panel (border is part of the panel)\n        const borderStart = rect.right - containerRect.left - handleSize;\n        const borderEnd = rect.right - containerRect.left;\n        onBorder = relativeX >= borderStart && relativeX <= borderEnd;\n      } else {\n        // Check if we're on the bottom border of this panel (border is part of the panel)\n        const borderStart = rect.bottom - containerRect.top - handleSize;\n        const borderEnd = rect.bottom - containerRect.top;\n        onBorder = relativeY >= borderStart && relativeY <= borderEnd;\n      }\n\n      if (onBorder) {\n        panelIndex = i;\n        currentPanel = panels[i];\n        nextPanel = panels[i + 1];\n        break;\n      }\n    }\n\n    if (panelIndex === -1 || !currentPanel || !nextPanel) return;\n\n    event.preventDefault();\n\n    this._resizing = true;\n    this._activePanel = currentPanel;\n    this._startPosition =\n      this._orientation === 'horizontal' ? event.clientX : event.clientY;\n    this._startSize = parseFloat(currentPanel.getAttribute('size') || '50');\n    this._nextPanelStartSize = parseFloat(\n      nextPanel.getAttribute('size') || '50'\n    );\n\n    this.classList.add('dragging');\n\n    // Update cursor\n    this.style.cursor =\n      this._orientation === 'horizontal' ? 'col-resize' : 'row-resize';\n\n    // Dispatch resize start event\n    dispatchCustomEvent<SplitPanelResizeStartEvent['detail']>(\n      this,\n      'split-panel-resize-start',\n      {\n        containerId: this.id,\n        container: this,\n        panelId: currentPanel.id,\n        panel: currentPanel,\n        startSize: this._startSize,\n      }\n    );\n  }\n\n  private handleMouseMove(event: MouseEvent): void {\n    // Handle dragging if currently resizing\n    if (this._resizing && this._activePanel) {\n      event.preventDefault();\n\n      const currentPosition =\n        this._orientation === 'horizontal' ? event.clientX : event.clientY;\n      const delta = currentPosition - this._startPosition;\n\n      const containerRect = this.getBoundingClientRect();\n      const containerSize =\n        this._orientation === 'horizontal'\n          ? containerRect.width\n          : containerRect.height;\n\n      const deltaPercentage = (delta / containerSize) * 100;\n\n      const panels = this.getPanels();\n      const currentIndex = panels.indexOf(this._activePanel);\n      const nextPanel = panels[currentIndex + 1];\n\n      if (!nextPanel) return;\n\n      const newCurrentSize = Math.max(\n        parseFloat(this._activePanel.getAttribute('min-size') || '10'),\n        Math.min(\n          parseFloat(this._activePanel.getAttribute('max-size') || '90'),\n          this._startSize + deltaPercentage\n        )\n      );\n\n      const newNextSize = Math.max(\n        parseFloat(nextPanel.getAttribute('min-size') || '10'),\n        Math.min(\n          parseFloat(nextPanel.getAttribute('max-size') || '90'),\n          this._nextPanelStartSize - deltaPercentage\n        )\n      );\n\n      // Update panel sizes\n      this._activePanel.setAttribute('size', newCurrentSize.toString());\n      nextPanel.setAttribute('size', newNextSize.toString());\n\n      this.updatePanelSizes();\n\n      // Dispatch resize event\n      dispatchCustomEvent<SplitPanelResizeEvent['detail']>(\n        this,\n        'split-panel-resize',\n        {\n          containerId: this.id,\n          container: this,\n          panelId: this._activePanel.id,\n          panel: this._activePanel,\n          size: newCurrentSize,\n          minSize: parseFloat(\n            this._activePanel.getAttribute('min-size') || '10'\n          ),\n          maxSize: parseFloat(\n            this._activePanel.getAttribute('max-size') || '90'\n          ),\n        }\n      );\n    } else {\n      // Handle hover cursor when not dragging\n      this.updateHoverCursor(event);\n    }\n  }\n\n  private updateHoverCursor(event: MouseEvent): void {\n    const panels = this.getPanels();\n    if (panels.length < 2) {\n      this.style.cursor = '';\n      return;\n    }\n\n    const handleSize = parseInt(\n      getComputedStyle(this).getPropertyValue('--handle-size') || '4'\n    );\n\n    let overHandle = false;\n\n    for (let i = 0; i < panels.length - 1; i++) {\n      const panel = panels[i];\n      const rect = panel.getBoundingClientRect();\n      const containerRect = this.getBoundingClientRect();\n\n      const relativeX = event.clientX - containerRect.left;\n      const relativeY = event.clientY - containerRect.top;\n\n      if (this._orientation === 'horizontal') {\n        // Check if we're on the right border of this panel (border is part of the panel)\n        const borderStart = rect.right - containerRect.left - handleSize;\n        const borderEnd = rect.right - containerRect.left;\n        if (relativeX >= borderStart && relativeX <= borderEnd) {\n          overHandle = true;\n          break;\n        }\n      } else {\n        // Check if we're on the bottom border of this panel (border is part of the panel)\n        const borderStart = rect.bottom - containerRect.top - handleSize;\n        const borderEnd = rect.bottom - containerRect.top;\n        if (relativeY >= borderStart && relativeY <= borderEnd) {\n          overHandle = true;\n          break;\n        }\n      }\n    }\n\n    // Update cursor based on whether we're over a handle\n    if (overHandle) {\n      this.style.cursor =\n        this._orientation === 'horizontal' ? 'col-resize' : 'row-resize';\n    } else {\n      this.style.cursor = '';\n    }\n  }\n\n  private handleMouseUp(event: MouseEvent): void {\n    if (!this._resizing) return;\n\n    event.preventDefault();\n\n    const finalSize = this._activePanel\n      ? parseFloat(this._activePanel.getAttribute('size') || '50')\n      : 0;\n\n    // Dispatch resize end event\n    if (this._activePanel) {\n      dispatchCustomEvent<SplitPanelResizeEndEvent['detail']>(\n        this,\n        'split-panel-resize-end',\n        {\n          containerId: this.id,\n          container: this,\n          panelId: this._activePanel.id,\n          panel: this._activePanel,\n          finalSize,\n        }\n      );\n    }\n\n    this._resizing = false;\n    this._activePanel = null;\n    this.classList.remove('dragging');\n\n    // Update cursor based on current hover position\n    this.updateHoverCursor(event);\n  }\n\n  private handleMouseLeave(event: MouseEvent): void {\n    // End resizing if mouse leaves the container\n    if (this._resizing) {\n      this.handleMouseUp(event);\n    }\n\n    // Reset cursor when leaving the container\n    this.style.cursor = '';\n  }\n\n  private handleResize(): void {\n    this.updatePanelSizes();\n  }\n\n  private getPanels(): HTMLElement[] {\n    return Array.from(this.querySelectorAll('e2-split-panel'));\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this.setAttribute('theme', value);\n  }\n\n  get orientation(): SplitPanelOrientation {\n    return this._orientation;\n  }\n\n  set orientation(value: SplitPanelOrientation) {\n    this.setAttribute('orientation', value);\n  }\n\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value: boolean) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  // Method to programmatically resize a panel\n  resizePanel(panelId: string, size: number): void {\n    const panel = this.querySelector(`#${panelId}`) as HTMLElement;\n    if (panel && panel.tagName.toLowerCase() === 'e2-split-panel') {\n      panel.setAttribute('size', size.toString());\n      this.updatePanelSizes();\n    }\n  }\n\n  // Method to get panel sizes\n  getPanelSizes(): { [panelId: string]: number } {\n    const panels = this.getPanels();\n    const sizes: { [panelId: string]: number } = {};\n\n    panels.forEach(panel => {\n      if (panel.id) {\n        sizes[panel.id] = parseFloat(panel.getAttribute('size') || '0');\n      }\n    });\n\n    return sizes;\n  }\n\n  // Method to reset all panels to equal sizes\n  resetPanelSizes(): void {\n    const panels = this.getPanels();\n    const equalSize = 100 / panels.length;\n\n    panels.forEach(panel => {\n      panel.setAttribute('size', equalSize.toString());\n    });\n\n    this.updatePanelSizes();\n  }\n}\n\n// Register the element\nif (!customElements.get('e2-split-panel-container')) {\n  customElements.define('e2-split-panel-container', SplitPanelContainer);\n}\n\nexport default SplitPanelContainer;\n","/**\n * Status Bar Element\n * A horizontal status bar typically placed at the bottom of an application\n * Contains left, center, and right sections for different types of status information\n */\n\nimport {\n  EditorElementProperties,\n  StatusMessageEvent,\n  StatusMessageType,\n  Theme,\n} from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class StatusBar extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _temporaryMessageTimeout?: number;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          padding: 4px 8px;\n          background: var(--statusbar-bg, #f8f8f8);\n          border-top: 1px solid var(--statusbar-border, #e0e0e0);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size-small, 12px);\n          min-height: 24px;\n          position: relative;\n          overflow: hidden;\n        }\n\n        :host(.theme-dark) {\n          background: var(--statusbar-bg-dark, #252526);\n          border-top-color: var(--statusbar-border-dark, #3e3e42);\n          color: var(--text-color-dark, #cccccc);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .status-container {\n          display: flex;\n          align-items: center;\n          width: 100%;\n          gap: 8px;\n        }\n\n        .status-section {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        .status-section.left {\n          flex: 0 0 auto;\n          justify-content: flex-start;\n        }\n\n        .status-section.center {\n          flex: 1 1 auto;\n          justify-content: center;\n        }\n\n        .status-section.right {\n          flex: 0 0 auto;\n          justify-content: flex-end;\n        }\n\n        .temporary-message {\n          position: absolute;\n          left: 0;\n          right: 0;\n          top: 0;\n          bottom: 0;\n          display: flex;\n          align-items: center;\n          padding: 4px 8px;\n          background: var(--statusbar-message-bg, var(--statusbar-bg, #f8f8f8));\n          z-index: 10;\n          opacity: 0;\n          transform: translateY(100%);\n          transition: all 0.2s ease-in-out;\n        }\n\n        .temporary-message.show {\n          opacity: 1;\n          transform: translateY(0);\n        }\n\n        .temporary-message.info {\n          background: var(--statusbar-info-bg, #e3f2fd);\n          color: var(--statusbar-info-text, #1565c0);\n        }\n\n        .temporary-message.success {\n          background: var(--statusbar-success-bg, #e8f5e8);\n          color: var(--statusbar-success-text, #2e7d32);\n        }\n\n        .temporary-message.warning {\n          background: var(--statusbar-warning-bg, #fff3e0);\n          color: var(--statusbar-warning-text, #f57c00);\n        }\n\n        .temporary-message.error {\n          background: var(--statusbar-error-bg, #ffebee);\n          color: var(--statusbar-error-text, #c62828);\n        }\n\n        :host(.theme-dark) .temporary-message.info {\n          background: var(--statusbar-info-bg-dark, #1e3a8a);\n          color: var(--statusbar-info-text-dark, #93c5fd);\n        }\n\n        :host(.theme-dark) .temporary-message.success {\n          background: var(--statusbar-success-bg-dark, #166534);\n          color: var(--statusbar-success-text-dark, #86efac);\n        }\n\n        :host(.theme-dark) .temporary-message.warning {\n          background: var(--statusbar-warning-bg-dark, #92400e);\n          color: var(--statusbar-warning-text-dark, #fcd34d);\n        }\n\n        :host(.theme-dark) .temporary-message.error {\n          background: var(--statusbar-error-bg-dark, #991b1b);\n          color: var(--statusbar-error-text-dark, #fca5a5);\n        }\n      </style>\n\n      <div class=\"status-container\">\n        <div class=\"status-section left\">\n          <slot name=\"left\"></slot>\n        </div>\n        <div class=\"status-section center\">\n          <slot name=\"center\"></slot>\n        </div>\n        <div class=\"status-section right\">\n          <slot name=\"right\"></slot>\n        </div>\n      </div>\n\n      <div class=\"temporary-message\" id=\"temporary-message\">\n        <span id=\"message-text\"></span>\n      </div>\n    `;\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('status-bar');\n    }\n    this.applyTheme(this._theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Show a temporary message in the status bar\n   * @param message The message to display\n   * @param type The type of message (info, success, warning, error)\n   * @param duration Duration in milliseconds (default: 3000)\n   */\n  showMessage(\n    message: string,\n    type: StatusMessageType = 'info',\n    duration: number = 3000\n  ): void {\n    const shadowRoot = this.shadowRoot!;\n    const messageEl = shadowRoot.getElementById('temporary-message')!;\n    const textEl = shadowRoot.getElementById('message-text')!;\n\n    // Clear any existing timeout\n    if (this._temporaryMessageTimeout) {\n      clearTimeout(this._temporaryMessageTimeout);\n    }\n\n    // Set message content and type\n    textEl.textContent = message;\n    messageEl.className = `temporary-message ${type}`;\n\n    // Show message with animation\n    requestAnimationFrame(() => {\n      messageEl.classList.add('show');\n    });\n\n    // Dispatch event\n    dispatchCustomEvent<StatusMessageEvent['detail']>(this, 'status-message', {\n      message,\n      type,\n      duration,\n      temporary: true,\n    });\n\n    // Auto-hide after duration\n    if (duration > 0) {\n      this._temporaryMessageTimeout = window.setTimeout(() => {\n        this.hideMessage();\n      }, duration);\n    }\n  }\n\n  /**\n   * Hide the temporary message\n   */\n  hideMessage(): void {\n    const shadowRoot = this.shadowRoot!;\n    const messageEl = shadowRoot.getElementById('temporary-message')!;\n\n    messageEl.classList.remove('show');\n\n    if (this._temporaryMessageTimeout) {\n      clearTimeout(this._temporaryMessageTimeout);\n      this._temporaryMessageTimeout = undefined;\n    }\n  }\n\n  /**\n   * Get all status items in a specific section\n   * @param section The section to query ('left', 'center', 'right')\n   */\n  getItemsInSection(section: 'left' | 'center' | 'right'): HTMLElement[] {\n    const slot = this.querySelector(`[slot=\"${section}\"]`);\n    if (!slot) return [];\n\n    return Array.from(slot.children) as HTMLElement[];\n  }\n\n  /**\n   * Clear all items from a specific section\n   * @param section The section to clear ('left', 'center', 'right')\n   */\n  clearSection(section: 'left' | 'center' | 'right'): void {\n    const items = this.getItemsInSection(section);\n    items.forEach(item => item.remove());\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-status-bar')) {\n  customElements.define('e2-status-bar', StatusBar);\n}\n","/**\n * Status Item Element\n * A flexible status bar item that can display text, progress indicators, tools, and other status information\n * Supports different types: text, progress, tool, message, indicator\n */\n\nimport {\n  EditorElementProperties,\n  StatusItemClickEvent,\n  StatusItemType,\n  StatusItemUpdateEvent,\n  Theme,\n} from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class StatusItem extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _type: StatusItemType = 'text';\n  private _value: string | number = '';\n  private _label: string = '';\n  private _clickable: boolean = false;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'type', 'value', 'label', 'clickable', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-flex;\n          align-items: center;\n          gap: 4px;\n          padding: 2px 6px;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size-small, 12px);\n          color: var(--text-color, #333);\n          white-space: nowrap;\n          border-radius: 2px;\n          transition: background-color 0.1s ease;\n        }\n\n        :host(.theme-dark) {\n          color: var(--text-color-dark, #cccccc);\n        }\n\n        :host([clickable]) {\n          cursor: pointer;\n          padding: 2px 8px;\n        }\n\n        :host([clickable]:hover) {\n          background: var(--status-item-hover-bg, rgba(0, 0, 0, 0.05));\n        }\n\n        :host(.theme-dark[clickable]:hover) {\n          background: var(--status-item-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host([clickable]:active) {\n          background: var(--status-item-active-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-dark[clickable]:active) {\n          background: var(--status-item-active-bg-dark, rgba(255, 255, 255, 0.15));\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .content {\n          display: flex;\n          align-items: center;\n          gap: 4px;\n        }\n\n        .icon {\n          font-size: 10px;\n          width: 12px;\n          text-align: center;\n          flex-shrink: 0;\n        }\n\n        .label {\n          flex-shrink: 0;\n        }\n\n        .value {\n          font-weight: 500;\n          flex-shrink: 0;\n        }\n\n        .progress-container {\n          display: flex;\n          align-items: center;\n          gap: 6px;\n        }\n\n        .progress-bar {\n          width: 60px;\n          height: 8px;\n          background: var(--progress-bg, #e0e0e0);\n          border-radius: 4px;\n          overflow: hidden;\n          position: relative;\n        }\n\n        :host(.theme-dark) .progress-bar {\n          background: var(--progress-bg-dark, #3e3e42);\n        }\n\n        .progress-fill {\n          height: 100%;\n          background: var(--progress-fill, #007acc);\n          border-radius: 4px;\n          transition: width 0.2s ease;\n          min-width: 2px;\n        }\n\n        :host(.theme-dark) .progress-fill {\n          background: var(--progress-fill-dark, #0e7afe);\n        }\n\n        .progress-text {\n          font-size: 10px;\n          min-width: 30px;\n          text-align: right;\n        }\n\n        /* Type-specific styles */\n        :host([type=\"tool\"]) {\n          background: var(--tool-item-bg, rgba(0, 120, 204, 0.1));\n          color: var(--tool-item-color, #007acc);\n          border: 1px solid var(--tool-item-border, rgba(0, 120, 204, 0.2));\n        }\n\n        :host(.theme-dark[type=\"tool\"]) {\n          background: var(--tool-item-bg-dark, rgba(14, 122, 254, 0.15));\n          color: var(--tool-item-color-dark, #0e7afe);\n          border-color: var(--tool-item-border-dark, rgba(14, 122, 254, 0.3));\n        }\n\n        :host([type=\"message\"]) {\n          font-style: italic;\n          opacity: 0.8;\n        }\n\n        :host([type=\"indicator\"]) .icon {\n          color: var(--indicator-color, #28a745);\n        }\n\n        :host(.theme-dark[type=\"indicator\"]) .icon {\n          color: var(--indicator-color-dark, #40d865);\n        }\n      </style>\n\n      <div class=\"content\">\n        <span class=\"icon\" id=\"icon\"></span>\n        <span class=\"label\" id=\"label\"></span>\n        <div class=\"progress-container\" id=\"progress-container\" style=\"display: none;\">\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" id=\"progress-fill\"></div>\n          </div>\n          <span class=\"progress-text\" id=\"progress-text\"></span>\n        </div>\n        <span class=\"value\" id=\"value\"></span>\n      </div>\n    `;\n\n    // Add click handler\n    this.addEventListener('click', this.handleClick.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('status-item');\n    }\n\n    this.applyTheme(this._theme);\n    this.updateDisplay();\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n      case 'type':\n        this._type = newValue as StatusItemType;\n        this.updateDisplay();\n        break;\n      case 'value':\n        this._value = newValue;\n        this.updateDisplay();\n        break;\n      case 'label':\n        this._label = newValue;\n        this.updateDisplay();\n        break;\n      case 'clickable':\n        this._clickable = newValue !== null;\n        break;\n    }\n  }\n\n  private handleClick(event: Event): void {\n    if (!this._clickable || this.hasAttribute('disabled')) return;\n\n    dispatchCustomEvent<StatusItemClickEvent['detail']>(\n      this,\n      'status-item-click',\n      {\n        itemId: this.id,\n        item: this,\n        itemType: this._type,\n        value: this._value,\n      }\n    );\n  }\n\n  private updateDisplay(): void {\n    if (!this.shadowRoot) return;\n\n    const iconEl = this.shadowRoot.getElementById('icon')!;\n    const labelEl = this.shadowRoot.getElementById('label')!;\n    const valueEl = this.shadowRoot.getElementById('value')!;\n    const progressContainer =\n      this.shadowRoot.getElementById('progress-container')!;\n    const progressFill = this.shadowRoot.getElementById('progress-fill')!;\n    const progressText = this.shadowRoot.getElementById('progress-text')!;\n\n    // Set label\n    labelEl.textContent = this._label;\n    labelEl.style.display = this._label ? 'inline' : 'none';\n\n    // Handle different types\n    switch (this._type) {\n      case 'progress':\n        this.updateProgressDisplay(\n          progressContainer,\n          progressFill,\n          progressText\n        );\n        valueEl.style.display = 'none';\n        iconEl.style.display = 'none';\n        break;\n\n      case 'tool':\n        iconEl.textContent = '🔧';\n        iconEl.style.display = 'inline';\n        valueEl.textContent = String(this._value);\n        valueEl.style.display = this._value ? 'inline' : 'none';\n        progressContainer.style.display = 'none';\n        break;\n\n      case 'indicator':\n        iconEl.textContent = '●';\n        iconEl.style.display = 'inline';\n        valueEl.textContent = String(this._value);\n        valueEl.style.display = this._value ? 'inline' : 'none';\n        progressContainer.style.display = 'none';\n        break;\n\n      case 'message':\n        iconEl.textContent = 'ℹ';\n        iconEl.style.display = 'inline';\n        valueEl.textContent = String(this._value);\n        valueEl.style.display = this._value ? 'inline' : 'none';\n        progressContainer.style.display = 'none';\n        break;\n\n      case 'text':\n      default:\n        iconEl.style.display = 'none';\n        valueEl.textContent = String(this._value);\n        valueEl.style.display = this._value ? 'inline' : 'none';\n        progressContainer.style.display = 'none';\n        break;\n    }\n  }\n\n  private updateProgressDisplay(\n    container: HTMLElement,\n    fill: HTMLElement,\n    text: HTMLElement\n  ): void {\n    container.style.display = 'flex';\n\n    const numValue =\n      typeof this._value === 'number'\n        ? this._value\n        : parseFloat(String(this._value)) || 0;\n    const percentage = Math.max(0, Math.min(100, numValue * 100));\n\n    fill.style.width = `${percentage}%`;\n    text.textContent = `${Math.round(percentage)}%`;\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n  }\n\n  get type(): StatusItemType {\n    return this._type;\n  }\n\n  set type(value: StatusItemType) {\n    this._type = value;\n    this.setAttribute('type', value);\n  }\n\n  get value(): string | number {\n    return this._value;\n  }\n\n  set value(newValue: string | number) {\n    const oldValue = this._value;\n    this._value = newValue;\n    this.setAttribute('value', String(newValue));\n\n    // Dispatch update event\n    dispatchCustomEvent<StatusItemUpdateEvent['detail']>(\n      this,\n      'status-item-update',\n      {\n        itemId: this.id,\n        item: this,\n        oldValue,\n        newValue,\n      }\n    );\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  set label(value: string) {\n    this._label = value;\n    this.setAttribute('label', value);\n  }\n\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  set clickable(value: boolean) {\n    this._clickable = value;\n    if (value) {\n      this.setAttribute('clickable', '');\n    } else {\n      this.removeAttribute('clickable');\n    }\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Update the progress value (for progress type items)\n   * @param progress Progress value between 0 and 1\n   */\n  setProgress(progress: number): void {\n    if (this._type === 'progress') {\n      this.value = Math.max(0, Math.min(1, progress));\n    }\n  }\n\n  /**\n   * Set an icon for the status item\n   * @param icon Unicode emoji or symbol\n   */\n  setIcon(icon: string): void {\n    if (this.shadowRoot) {\n      const iconEl = this.shadowRoot.getElementById('icon')!;\n      iconEl.textContent = icon;\n      iconEl.style.display = 'inline';\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-status-item')) {\n  customElements.define('e2-status-item', StatusItem);\n}\n","/**\n * Status Section Element\n * A container for grouping status items within a status bar\n * Provides left, center, or right positioning and overflow handling\n */\n\nimport {\n  EditorElementProperties,\n  StatusSectionPosition,\n  Theme,\n} from '../../types';\nimport { applyTheme, generateId, getShadowRoot } from '../../utils';\n\nexport class StatusSection\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _position: StatusSectionPosition = 'left';\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'position', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size-small, 12px);\n          flex-shrink: 0;\n        }\n\n        :host([position=\"left\"]) {\n          justify-content: flex-start;\n        }\n\n        :host([position=\"center\"]) {\n          justify-content: center;\n          flex: 1 1 auto;\n        }\n\n        :host([position=\"right\"]) {\n          justify-content: flex-end;\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        .section-container {\n          display: flex;\n          align-items: center;\n          gap: inherit;\n          min-width: 0; /* Allow shrinking */\n          overflow: hidden;\n        }\n\n        :host([position=\"center\"]) .section-container {\n          width: 100%;\n          justify-content: center;\n        }\n\n        ::slotted(*) {\n          flex-shrink: 0;\n          white-space: nowrap;\n        }\n\n        /* Responsive behavior - hide items on smaller screens */\n        @media (max-width: 768px) {\n          ::slotted([data-priority=\"low\"]) {\n            display: none;\n          }\n        }\n\n        @media (max-width: 480px) {\n          ::slotted([data-priority=\"medium\"]) {\n            display: none;\n          }\n        }\n      </style>\n\n      <div class=\"section-container\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('status-section');\n    }\n\n    // Set position attribute if not already set\n    if (!this.hasAttribute('position')) {\n      this.position = this._position;\n    }\n\n    this.applyTheme(this._theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n      case 'position':\n        this._position = newValue as StatusSectionPosition;\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n  }\n\n  get position(): StatusSectionPosition {\n    return this._position;\n  }\n\n  set position(value: StatusSectionPosition) {\n    this._position = value;\n    this.setAttribute('position', value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Add a status item to this section\n   * @param item The status item element to add\n   * @param priority Optional priority for responsive behavior ('high', 'medium', 'low')\n   */\n  addItem(item: HTMLElement, priority?: 'high' | 'medium' | 'low'): void {\n    if (priority) {\n      item.setAttribute('data-priority', priority);\n    }\n    this.appendChild(item);\n  }\n\n  /**\n   * Remove a status item from this section\n   * @param item The status item element to remove\n   */\n  removeItem(item: HTMLElement): void {\n    if (this.contains(item)) {\n      item.remove();\n    }\n  }\n\n  /**\n   * Clear all items from this section\n   */\n  clear(): void {\n    while (this.firstChild) {\n      this.removeChild(this.firstChild);\n    }\n  }\n\n  /**\n   * Get all items in this section\n   */\n  getItems(): HTMLElement[] {\n    return Array.from(this.children) as HTMLElement[];\n  }\n\n  /**\n   * Get items by priority level\n   * @param priority The priority level to filter by\n   */\n  getItemsByPriority(priority: 'high' | 'medium' | 'low'): HTMLElement[] {\n    return this.getItems().filter(\n      item => item.getAttribute('data-priority') === priority\n    );\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-status-section')) {\n  customElements.define('e2-status-section', StatusSection);\n}\n","/**\n * Tab Element\n * Individual tab that can be clicked to show associated content\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class Tab extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _active: boolean = false;\n  private _closable: boolean = false;\n  private _icon: string = '';\n  private _label: string = '';\n\n  static get observedAttributes(): string[] {\n    return [\n      'theme',\n      'disabled',\n      'active',\n      'closable',\n      'icon',\n      'label',\n      'panel',\n    ];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.setupEventListeners();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          padding: 8px 12px;\n          background: var(--tab-bg, #f8f8f8);\n          border: 1px solid var(--tab-border, #ddd);\n          border-bottom: none;\n          cursor: pointer;\n          user-select: none;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          color: var(--tab-color, #333);\n          min-width: 0;\n          position: relative;\n          transition: background-color 0.2s ease, color 0.2s ease;\n        }\n\n        :host(:hover) {\n          background: var(--tab-bg-hover, #e8e8e8);\n        }\n\n        :host([active]) {\n          background: var(--tab-bg-active, #ffffff);\n          color: var(--tab-color-active, #000);\n          border-bottom: 1px solid var(--tab-bg-active, #ffffff);\n          z-index: 1;\n        }\n\n        :host(.theme-dark) {\n          background: var(--tab-bg-dark, #2d2d2d);\n          border-color: var(--tab-border-dark, #555);\n          color: var(--tab-color-dark, #ccc);\n        }\n\n        :host(.theme-dark:hover) {\n          background: var(--tab-bg-hover-dark, #3d3d3d);\n        }\n\n        :host(.theme-dark[active]) {\n          background: var(--tab-bg-active-dark, #1e1e1e);\n          color: var(--tab-color-active-dark, #fff);\n          border-bottom-color: var(--tab-bg-active-dark, #1e1e1e);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n\n        /* Tab position adjustments for container orientation */\n        :host-context(e2-tab-container[tab-position=\"bottom\"]) {\n          border-top: none;\n          border-bottom: 1px solid var(--tab-border, #ddd);\n        }\n\n        :host-context(e2-tab-container[tab-position=\"bottom\"][active]) {\n          border-top: 1px solid var(--tab-bg-active, #ffffff);\n          border-bottom-color: var(--tab-bg-active, #ffffff);\n        }\n\n        :host-context(e2-tab-container.theme-dark[tab-position=\"bottom\"]) {\n          border-bottom-color: var(--tab-border-dark, #555);\n        }\n\n        :host-context(e2-tab-container.theme-dark[tab-position=\"bottom\"][active]) {\n          border-top-color: var(--tab-bg-active-dark, #1e1e1e);\n          border-bottom-color: var(--tab-bg-active-dark, #1e1e1e);\n        }\n\n        :host-context(e2-tab-container[tab-position=\"left\"]),\n        :host-context(e2-tab-container[tab-position=\"right\"]) {\n          border-bottom: 1px solid var(--tab-border, #ddd);\n          border-right: none;\n          width: 100%;\n        }\n\n        :host-context(e2-tab-container[tab-position=\"left\"][active]) {\n          border-right: 1px solid var(--tab-bg-active, #ffffff);\n        }\n\n        :host-context(e2-tab-container[tab-position=\"right\"]) {\n          border-left: none;\n          border-right: 1px solid var(--tab-border, #ddd);\n        }\n\n        :host-context(e2-tab-container[tab-position=\"right\"][active]) {\n          border-left: 1px solid var(--tab-bg-active, #ffffff);\n          border-right-color: var(--tab-bg-active, #ffffff);\n        }\n\n        .tab-content {\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          min-width: 0;\n          flex: 1;\n        }\n\n        .tab-icon {\n          flex-shrink: 0;\n          font-size: 16px;\n          width: 16px;\n          height: 16px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .tab-label {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          flex: 1;\n          min-width: 0;\n        }\n\n        .close-button {\n          flex-shrink: 0;\n          width: 16px;\n          height: 16px;\n          border: none;\n          background: transparent;\n          cursor: pointer;\n          border-radius: 2px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-left: 4px;\n          font-size: 12px;\n          color: var(--tab-close-color, #666);\n          opacity: 0.7;\n          transition: opacity 0.2s ease, background-color 0.2s ease;\n        }\n\n        .close-button:hover {\n          opacity: 1;\n          background: var(--tab-close-bg-hover, rgba(0, 0, 0, 0.1));\n        }\n\n        :host(.theme-dark) .close-button {\n          color: var(--tab-close-color-dark, #aaa);\n        }\n\n        :host(.theme-dark) .close-button:hover {\n          background: var(--tab-close-bg-hover-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(:not([closable])) .close-button {\n          display: none;\n        }\n      </style>\n\n      <div class=\"tab-content\">\n        <span class=\"tab-icon\"></span>\n        <span class=\"tab-label\"></span>\n        <button class=\"close-button\" type=\"button\">&times;</button>\n      </div>\n    `;\n  }\n\n  private setupEventListeners(): void {\n    this.addEventListener('click', this.handleClick.bind(this));\n\n    const closeButton = this.shadowRoot?.querySelector(\n      '.close-button'\n    ) as HTMLButtonElement;\n    closeButton?.addEventListener('click', this.handleCloseClick.bind(this));\n  }\n\n  private handleClick(event: MouseEvent): void {\n    if (this.disabled) return;\n\n    // Don't trigger tab click if close button was clicked\n    if ((event.target as HTMLElement).classList.contains('close-button')) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    dispatchCustomEvent(this, 'tab-click', {\n      tabId: this.id,\n      tab: this,\n      panelId: this.getAttribute('panel') || `${this.id}-panel`,\n    });\n  }\n\n  private handleCloseClick(event: MouseEvent): void {\n    if (this.disabled) return;\n\n    event.stopPropagation();\n\n    dispatchCustomEvent(this, 'tab-close', {\n      tabId: this.id,\n      tab: this,\n      panelId: this.getAttribute('panel') || `${this.id}-panel`,\n    });\n\n    // The parent container will handle the removal\n  }\n\n  private updateContent(): void {\n    const shadowRoot = this.shadowRoot!;\n    const iconElement = shadowRoot.querySelector('.tab-icon') as HTMLElement;\n    const labelElement = shadowRoot.querySelector('.tab-label') as HTMLElement;\n\n    // Update icon\n    if (this._icon) {\n      iconElement.textContent = this._icon;\n      iconElement.style.display = 'flex';\n    } else {\n      iconElement.style.display = 'none';\n    }\n\n    // Update label\n    labelElement.textContent = this._label || this.textContent || '';\n  }\n\n  // Public API\n  public click(): void {\n    if (!this.disabled) {\n      this.handleClick(new MouseEvent('click'));\n    }\n  }\n\n  public close(): void {\n    if (!this.disabled && this._closable) {\n      this.handleCloseClick(new MouseEvent('click'));\n    }\n  }\n\n  // Properties\n  public get theme(): Theme {\n    return this._theme;\n  }\n\n  public set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n    this.applyTheme(value);\n  }\n\n  public get active(): boolean {\n    return this._active;\n  }\n\n  public set active(value: boolean) {\n    this._active = value;\n    if (value) {\n      this.setAttribute('active', '');\n    } else {\n      this.removeAttribute('active');\n    }\n  }\n\n  public get closable(): boolean {\n    return this._closable;\n  }\n\n  public set closable(value: boolean) {\n    this._closable = value;\n    if (value) {\n      this.setAttribute('closable', '');\n    } else {\n      this.removeAttribute('closable');\n    }\n  }\n\n  public get icon(): string {\n    return this._icon;\n  }\n\n  public set icon(value: string) {\n    this._icon = value;\n    this.setAttribute('icon', value);\n    this.updateContent();\n  }\n\n  public get label(): string {\n    return this._label;\n  }\n\n  public set label(value: string) {\n    this._label = value;\n    this.setAttribute('label', value);\n    this.updateContent();\n  }\n\n  public get panel(): string | null {\n    return this.getAttribute('panel');\n  }\n\n  public set panel(value: string | null) {\n    if (value) {\n      this.setAttribute('panel', value);\n    } else {\n      this.removeAttribute('panel');\n    }\n  }\n\n  public get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  public set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  public applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'active':\n        this._active = newValue !== null;\n        break;\n      case 'closable':\n        this._closable = newValue !== null;\n        break;\n      case 'icon':\n        this._icon = newValue || '';\n        this.updateContent();\n        break;\n      case 'label':\n        this._label = newValue || '';\n        this.updateContent();\n        break;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('tab');\n    }\n    this.applyTheme(this._theme);\n    this.updateContent();\n\n    // Handle pending setup from dynamic creation\n    if ((this as any)._pendingSetup) {\n      const setup = (this as any)._pendingSetup;\n\n      // Set attributes safely now that element is connected\n      if (setup.slot) {\n        this.setAttribute('slot', setup.slot);\n      }\n      if (setup.panel) {\n        this.setAttribute('panel', setup.panel);\n      }\n      if (setup.label) {\n        this.label = setup.label;\n      }\n      if (setup.closable) {\n        this.closable = setup.closable;\n      }\n      if (setup.theme) {\n        this.applyTheme(setup.theme);\n      }\n\n      // Clean up\n      delete (this as any)._pendingSetup;\n    }\n\n    // Update content when connected\n    this.updateContent();\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-tab')) {\n  customElements.define('e2-tab', Tab);\n}\n","/**\n * Tab Container Element\n * A container that manages tabs and their associated panels\n */\n\nimport {\n  EditorElementProperties,\n  TabCloseEvent,\n  TabContainerChangeEvent,\n  TabSelectEvent,\n  Theme,\n} from '../../types';\nimport {\n  applyTheme,\n  dispatchCustomEvent,\n  generateId,\n  getShadowRoot,\n} from '../../utils';\n\nexport class TabContainer\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _activeTabId: string | null = null;\n  private _tabPosition: 'top' | 'bottom' | 'left' | 'right' = 'top';\n  private _closable: boolean = false;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'active-tab', 'tab-position', 'closable'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.setupEventListeners();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          background: var(--tab-container-bg, #ffffff);\n          border: 1px solid var(--tab-container-border, #ccc);\n          border-radius: var(--tab-container-border-radius, 4px);\n          overflow: hidden;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n        }\n\n        :host(.theme-dark) {\n          background: var(--tab-container-bg-dark, #1e1e1e);\n          border-color: var(--tab-container-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Tab position variations */\n        :host([tab-position=\"top\"]) {\n          flex-direction: column;\n        }\n\n        :host([tab-position=\"bottom\"]) {\n          flex-direction: column-reverse;\n        }\n\n        :host([tab-position=\"left\"]) {\n          flex-direction: row;\n        }\n\n        :host([tab-position=\"right\"]) {\n          flex-direction: row-reverse;\n        }\n\n        .tab-list {\n          display: flex;\n          background: var(--tab-list-bg, #f8f8f8);\n          border-bottom: 1px solid var(--tab-list-border, #ddd);\n          overflow-x: auto;\n          flex-shrink: 0;\n        }\n\n        :host(.theme-dark) .tab-list {\n          background: var(--tab-list-bg-dark, #2d2d2d);\n          border-bottom-color: var(--tab-list-border-dark, #555);\n        }\n\n        :host([tab-position=\"bottom\"]) .tab-list {\n          border-bottom: none;\n          border-top: 1px solid var(--tab-list-border, #ddd);\n        }\n\n        :host(.theme-dark[tab-position=\"bottom\"]) .tab-list {\n          border-top-color: var(--tab-list-border-dark, #555);\n        }\n\n        :host([tab-position=\"left\"]) .tab-list,\n        :host([tab-position=\"right\"]) .tab-list {\n          flex-direction: column;\n          border-bottom: none;\n          border-right: 1px solid var(--tab-list-border, #ddd);\n          overflow-x: visible;\n          overflow-y: auto;\n        }\n\n        :host([tab-position=\"right\"]) .tab-list {\n          border-right: none;\n          border-left: 1px solid var(--tab-list-border, #ddd);\n        }\n\n        :host(.theme-dark[tab-position=\"left\"]) .tab-list {\n          border-right-color: var(--tab-list-border-dark, #555);\n        }\n\n        :host(.theme-dark[tab-position=\"right\"]) .tab-list {\n          border-left-color: var(--tab-list-border-dark, #555);\n        }\n\n        .panel-container {\n          flex: 1;\n          overflow: hidden;\n          position: relative;\n        }\n\n        ::slotted(e2-tab) {\n          flex-shrink: 0;\n        }\n\n        ::slotted(e2-tab-panel) {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          overflow: auto;\n        }\n\n        ::slotted(e2-tab-panel[active]) {\n          display: flex !important;\n        }\n      </style>\n\n      <div class=\"tab-list\">\n        <slot name=\"tabs\"></slot>\n      </div>\n      <div class=\"panel-container\">\n        <slot name=\"panels\"></slot>\n      </div>\n    `;\n  }\n\n  private setupEventListeners(): void {\n    // Listen for tab clicks\n    this.addEventListener(\n      'tab-click',\n      this.handleTabClick.bind(this) as EventListener\n    );\n    this.addEventListener(\n      'tab-close',\n      this.handleTabClose.bind(this) as EventListener\n    );\n\n    // Listen for slotchange to manage initial state\n    const shadowRoot = this.shadowRoot!;\n    const tabSlot = shadowRoot.querySelector(\n      'slot[name=\"tabs\"]'\n    ) as HTMLSlotElement;\n    const panelSlot = shadowRoot.querySelector(\n      'slot[name=\"panels\"]'\n    ) as HTMLSlotElement;\n\n    tabSlot?.addEventListener('slotchange', () => {\n      this.updateTabsAndPanels();\n    });\n\n    panelSlot?.addEventListener('slotchange', () => {\n      this.updateTabsAndPanels();\n    });\n  }\n\n  private handleTabClick(event: Event): void {\n    event.stopPropagation();\n    const tabElement = event.target as HTMLElement;\n    const tabId = tabElement.id;\n    const panelId = tabElement.getAttribute('panel') || `${tabId}-panel`;\n\n    this.selectTab(tabId, panelId);\n  }\n\n  private handleTabClose(event: Event): void {\n    event.stopPropagation();\n\n    // Find the actual tab element (event might come from close button inside tab)\n    let tabElement = event.target as HTMLElement;\n\n    // If the event came from inside a tab, find the parent tab element\n    if (!tabElement.matches('e2-tab')) {\n      tabElement = tabElement.closest('e2-tab') as HTMLElement;\n    }\n\n    if (!tabElement) {\n      return;\n    }\n\n    const tabId = tabElement.id;\n    const panelId = tabElement.getAttribute('panel') || `${tabId}-panel`;\n\n    // Check if this tab is already being removed to prevent recursion\n    if (tabElement.hasAttribute('data-removing')) {\n      return;\n    }\n\n    // Mark as being removed to prevent recursive calls\n    tabElement.setAttribute('data-removing', 'true');\n\n    // Dispatch close event to external listeners (without bubbling to avoid recursion)\n    const closeEvent = dispatchCustomEvent<TabCloseEvent['detail']>(\n      this,\n      'tab-close',\n      {\n        tabId,\n        tab: tabElement,\n        panelId,\n        panel: this.querySelector(\n          `e2-tab-panel[id=\"${panelId}\"]`\n        ) as HTMLElement,\n        containerId: this.id,\n        container: this,\n      },\n      { bubbles: false } // Prevent bubbling to avoid recursion\n    );\n\n    // Defer the removal to break any potential event loops\n    if (closeEvent) {\n      setTimeout(() => {\n        this.removeTab(tabId);\n      }, 0);\n    }\n  }\n\n  private selectTab(tabId: string, panelId: string): void {\n    const tabElement = this.querySelector(\n      `e2-tab[id=\"${tabId}\"]`\n    ) as HTMLElement;\n    const panelElement = this.querySelector(\n      `e2-tab-panel[id=\"${panelId}\"]`\n    ) as HTMLElement;\n\n    if (!tabElement || !panelElement) {\n      return;\n    }\n\n    const previousTabId = this._activeTabId;\n\n    // Deactivate all tabs and panels\n    this.querySelectorAll('e2-tab').forEach(tab => {\n      if ((tab as any).active !== undefined) {\n        (tab as any).active = false;\n      } else {\n        tab.removeAttribute('active');\n      }\n    });\n    this.querySelectorAll('e2-tab-panel').forEach(panel => {\n      if ((panel as any).active !== undefined) {\n        (panel as any).active = false;\n      } else {\n        panel.removeAttribute('active');\n        (panel as HTMLElement).style.display = 'none';\n      }\n    });\n\n    // Activate the selected tab and panel\n    if ((tabElement as any).active !== undefined) {\n      (tabElement as any).active = true;\n    } else {\n      tabElement.setAttribute('active', '');\n    }\n\n    if ((panelElement as any).active !== undefined) {\n      (panelElement as any).active = true;\n    } else {\n      panelElement.setAttribute('active', '');\n      panelElement.style.display = 'flex';\n    }\n\n    this._activeTabId = tabId;\n    this.setAttribute('active-tab', tabId);\n\n    // Dispatch select event\n    dispatchCustomEvent<TabSelectEvent['detail']>(this, 'tab-select', {\n      tabId,\n      tab: tabElement,\n      panelId,\n      panel: panelElement,\n      containerId: this.id,\n      container: this,\n      previousTabId: previousTabId || undefined,\n    });\n\n    // Dispatch container change event\n    dispatchCustomEvent<TabContainerChangeEvent['detail']>(\n      this,\n      'tab-container-change',\n      {\n        containerId: this.id,\n        container: this,\n        activeTabId: tabId,\n        activePanelId: panelId,\n      }\n    );\n  }\n\n  private removeTab(tabId: string): void {\n    const tabElement = this.querySelector(\n      `e2-tab[id=\"${tabId}\"]`\n    ) as HTMLElement;\n    const panelId = tabElement?.getAttribute('panel') || `${tabId}-panel`;\n    const panelElement = this.querySelector(\n      `e2-tab-panel[id=\"${panelId}\"]`\n    ) as HTMLElement;\n\n    // Remove elements\n    tabElement?.remove();\n    panelElement?.remove();\n\n    // If this was the active tab, select another\n    if (this._activeTabId === tabId) {\n      const remainingTabs = this.querySelectorAll('e2-tab');\n      if (remainingTabs.length > 0) {\n        const nextTab = remainingTabs[0] as HTMLElement;\n        const nextPanelId =\n          nextTab.getAttribute('panel') || `${nextTab.id}-panel`;\n        this.selectTab(nextTab.id, nextPanelId);\n      } else {\n        this._activeTabId = null;\n        this.removeAttribute('active-tab');\n      }\n    }\n  }\n\n  private updateTabsAndPanels(): void {\n    // Auto-assign panels to tabs and vice versa\n    const tabs = this.querySelectorAll('e2-tab');\n    const panels = this.querySelectorAll('e2-tab-panel');\n\n    tabs.forEach((tab, index) => {\n      const tabElement = tab as HTMLElement;\n\n      // Only set ID if it's not already set and the element doesn't have attributes being processed\n      if (!tabElement.id && !tabElement.hasAttribute('id')) {\n        try {\n          tabElement.id = generateId('tab');\n        } catch (e) {\n          // If setting ID fails, skip this tab for now\n          console.warn('Failed to set tab ID, skipping:', e);\n          return;\n        }\n      }\n\n      // Set closable attribute if container is closable, but avoid if element is being processed\n      if (this._closable && !tabElement.hasAttribute('closable')) {\n        try {\n          tabElement.setAttribute('closable', '');\n        } catch (e) {\n          // If setting attribute fails, the element might still be initializing\n          console.warn('Failed to set closable attribute, skipping:', e);\n        }\n      }\n\n      // Apply current theme\n      if ((tabElement as any).applyTheme) {\n        try {\n          (tabElement as any).applyTheme(this._theme);\n        } catch (e) {\n          console.warn('Failed to apply theme to tab:', e);\n        }\n      }\n\n      // Link to panel\n      if (!tabElement.getAttribute('panel')) {\n        const correspondingPanel = panels[index] as HTMLElement;\n        if (correspondingPanel) {\n          if (\n            !correspondingPanel.id &&\n            !correspondingPanel.hasAttribute('id')\n          ) {\n            try {\n              correspondingPanel.id = `${tabElement.id}-panel`;\n            } catch (e) {\n              console.warn('Failed to set panel ID:', e);\n              return;\n            }\n          }\n          try {\n            tabElement.setAttribute('panel', correspondingPanel.id);\n          } catch (e) {\n            console.warn('Failed to link tab to panel:', e);\n          }\n        }\n      }\n    });\n\n    // Determine which tab should be active initially\n    let activeTabElement: HTMLElement | null = null;\n    let activePanelId: string | null = null;\n\n    // Priority 1: Check if container has active-tab attribute\n    if (this.hasAttribute('active-tab')) {\n      const activeTabId = this.getAttribute('active-tab');\n      activeTabElement = this.querySelector(\n        `e2-tab[id=\"${activeTabId}\"]`\n      ) as HTMLElement;\n    }\n\n    // Priority 2: Check if any tab has active attribute\n    if (!activeTabElement) {\n      activeTabElement = this.querySelector('e2-tab[active]') as HTMLElement;\n    }\n\n    // Priority 3: Use first tab as fallback\n    if (!activeTabElement && tabs.length > 0) {\n      activeTabElement = tabs[0] as HTMLElement;\n    }\n\n    // Set the active panel ID based on the determined active tab\n    if (activeTabElement) {\n      activePanelId =\n        activeTabElement.getAttribute('panel') ||\n        `${activeTabElement.id}-panel`;\n    }\n\n    panels.forEach(panel => {\n      const panelElement = panel as HTMLElement;\n\n      // Only set ID if it's not already set and the element is ready\n      if (!panelElement.id && !panelElement.hasAttribute('id')) {\n        try {\n          panelElement.id = generateId('tab-panel');\n        } catch (e) {\n          console.warn('Failed to set panel ID:', e);\n          return;\n        }\n      }\n\n      // Apply current theme\n      if ((panelElement as any).applyTheme) {\n        try {\n          (panelElement as any).applyTheme(this._theme);\n        } catch (e) {\n          console.warn('Failed to apply theme to panel:', e);\n        }\n      }\n\n      // Hide all panels except the one that should be active\n      if (panelElement.id === activePanelId) {\n        // This will be the initially active panel - ensure it's visible\n        if ((panelElement as any).active !== undefined) {\n          try {\n            (panelElement as any).active = true;\n          } catch (e) {\n            console.warn('Failed to set panel active property:', e);\n          }\n        } else {\n          try {\n            panelElement.setAttribute('active', '');\n            panelElement.style.display = 'flex';\n          } catch (e) {\n            console.warn('Failed to set panel active state:', e);\n          }\n        }\n      } else {\n        if ((panelElement as any).active !== undefined) {\n          try {\n            (panelElement as any).active = false;\n          } catch (e) {\n            console.warn('Failed to set panel inactive property:', e);\n          }\n        } else {\n          try {\n            panelElement.style.display = 'none';\n          } catch (e) {\n            console.warn('Failed to hide panel:', e);\n          }\n        }\n      }\n    });\n\n    // Select the determined active tab if none is currently selected\n    if (!this._activeTabId && activeTabElement) {\n      const panelId =\n        activeTabElement.getAttribute('panel') ||\n        `${activeTabElement.id}-panel`;\n      setTimeout(() => {\n        if (activeTabElement) {\n          this.selectTab(activeTabElement.id, panelId);\n        }\n      }, 100);\n    }\n  }\n\n  // Public API\n  public selectTabById(tabId: string): void {\n    const tabElement = this.querySelector(\n      `e2-tab[id=\"${tabId}\"]`\n    ) as HTMLElement;\n    if (tabElement) {\n      const panelId = tabElement.getAttribute('panel') || `${tabId}-panel`;\n      this.selectTab(tabId, panelId);\n    }\n  }\n\n  public addTab(\n    label: string,\n    content: string = '',\n    tabId?: string,\n    panelId?: string\n  ): { tabId: string; panelId: string } {\n    const finalTabId = tabId || generateId('tab');\n    const finalPanelId = panelId || `${finalTabId}-panel`;\n\n    // Create tab element using customElements workaround\n    const TabConstructor = window.customElements.get('e2-tab') as any;\n    const tab = new TabConstructor();\n    tab.id = finalTabId;\n\n    // Create panel element using customElements workaround\n    const TabPanelConstructor = window.customElements.get(\n      'e2-tab-panel'\n    ) as any;\n    const panel = new TabPanelConstructor();\n    panel.id = finalPanelId;\n\n    // Set up initial data that will be applied in connectedCallback\n    (tab as any)._pendingSetup = {\n      slot: 'tabs',\n      panel: finalPanelId,\n      label: label,\n      closable: this._closable,\n      theme: this._theme,\n    };\n\n    (panel as any)._pendingSetup = {\n      slot: 'panels',\n      content: content,\n      theme: this._theme,\n    };\n\n    // Add to DOM - this will trigger connectedCallback\n    this.appendChild(tab);\n    this.appendChild(panel);\n\n    return { tabId: finalTabId, panelId: finalPanelId };\n  }\n\n  public removeTabById(tabId: string): void {\n    this.removeTab(tabId);\n  }\n\n  public get activeTabId(): string | null {\n    return this._activeTabId;\n  }\n\n  public get tabs(): NodeListOf<HTMLElement> {\n    return this.querySelectorAll('e2-tab');\n  }\n\n  public get panels(): NodeListOf<HTMLElement> {\n    return this.querySelectorAll('e2-tab-panel');\n  }\n\n  // Attribute handling\n  public get theme(): Theme {\n    return this._theme;\n  }\n\n  public set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n    this.applyTheme(value);\n  }\n\n  public get tabPosition(): 'top' | 'bottom' | 'left' | 'right' {\n    return this._tabPosition;\n  }\n\n  public set tabPosition(value: 'top' | 'bottom' | 'left' | 'right') {\n    this._tabPosition = value;\n    this.setAttribute('tab-position', value);\n  }\n\n  public get closable(): boolean {\n    return this._closable;\n  }\n\n  public set closable(value: boolean) {\n    this._closable = value;\n    if (value) {\n      this.setAttribute('closable', '');\n    } else {\n      this.removeAttribute('closable');\n    }\n\n    // Update existing tabs\n    this.querySelectorAll('e2-tab').forEach(tab => {\n      if (value) {\n        tab.setAttribute('closable', '');\n      } else {\n        tab.removeAttribute('closable');\n      }\n    });\n  }\n\n  public get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  public set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  public applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n\n    // Also apply theme to all child tabs and panels\n    this.querySelectorAll('e2-tab').forEach((tab: any) => {\n      if (tab.applyTheme) {\n        tab.applyTheme(theme);\n      }\n    });\n\n    this.querySelectorAll('e2-tab-panel').forEach((panel: any) => {\n      if (panel.applyTheme) {\n        panel.applyTheme(theme);\n      }\n    });\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'active-tab':\n        if (newValue && newValue !== this._activeTabId) {\n          this.selectTabById(newValue);\n        }\n        break;\n      case 'tab-position':\n        this._tabPosition = (newValue as any) || 'top';\n        break;\n      case 'closable':\n        this._closable = newValue !== null;\n        break;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('tab-container');\n    }\n    this.applyTheme(this._theme);\n    this.updateTabsAndPanels();\n\n    // Defer initialization until the next frame to avoid conflicts with custom element initialization\n    // Use requestAnimationFrame instead of setTimeout for better timing\n    // requestAnimationFrame(() => {\n    //   // Wait one more frame to ensure all child custom elements are fully initialized\n    //   requestAnimationFrame(() => {\n    //     this.updateTabsAndPanels();\n\n    //     // If still no active tab after initialization, try once more\n    //     if (!this._activeTabId) {\n    //       requestAnimationFrame(() => {\n    //         this.updateTabsAndPanels();\n    //       });\n    //     }\n    //   });\n    // });\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-tab-container')) {\n  customElements.define('e2-tab-container', TabContainer);\n}\n","/**\n * Tab Panel Element\n * Container for tab content that shows/hides based on tab selection\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport { applyTheme, generateId, getShadowRoot } from '../../utils';\n\nexport class TabPanel extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n  private _active: boolean = false;\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled', 'active'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: none;\n          flex-direction: column;\n          width: 100%;\n          height: 100%;\n          overflow: auto;\n          background: var(--tab-panel-bg, #ffffff);\n          padding: var(--tab-panel-padding, 16px);\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n          color: var(--tab-panel-color, #333);\n          box-sizing: border-box;\n        }\n\n        :host([active]) {\n          display: flex;\n        }\n\n        :host(.theme-dark) {\n          background: var(--tab-panel-bg-dark, #1e1e1e);\n          color: var(--tab-panel-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        /* Scrollbar styling for dark theme */\n        :host(.theme-dark) {\n          scrollbar-width: thin;\n          scrollbar-color: var(--scrollbar-thumb-dark, #555) var(--scrollbar-track-dark, #2d2d2d);\n        }\n\n        :host(.theme-dark)::-webkit-scrollbar {\n          width: 8px;\n          height: 8px;\n        }\n\n        :host(.theme-dark)::-webkit-scrollbar-track {\n          background: var(--scrollbar-track-dark, #2d2d2d);\n        }\n\n        :host(.theme-dark)::-webkit-scrollbar-thumb {\n          background: var(--scrollbar-thumb-dark, #555);\n          border-radius: 4px;\n        }\n\n        :host(.theme-dark)::-webkit-scrollbar-thumb:hover {\n          background: var(--scrollbar-thumb-hover-dark, #666);\n        }\n\n        /* Light theme scrollbar */\n        :host(.theme-light) {\n          scrollbar-width: thin;\n          scrollbar-color: var(--scrollbar-thumb-light, #ccc) var(--scrollbar-track-light, #f0f0f0);\n        }\n\n        :host(.theme-light)::-webkit-scrollbar {\n          width: 8px;\n          height: 8px;\n        }\n\n        :host(.theme-light)::-webkit-scrollbar-track {\n          background: var(--scrollbar-track-light, #f0f0f0);\n        }\n\n        :host(.theme-light)::-webkit-scrollbar-thumb {\n          background: var(--scrollbar-thumb-light, #ccc);\n          border-radius: 4px;\n        }\n\n        :host(.theme-light)::-webkit-scrollbar-thumb:hover {\n          background: var(--scrollbar-thumb-hover-light, #bbb);\n        }\n\n        /* Content styling */\n        ::slotted(*) {\n          max-width: 100%;\n        }\n\n        ::slotted(h1),\n        ::slotted(h2),\n        ::slotted(h3),\n        ::slotted(h4),\n        ::slotted(h5),\n        ::slotted(h6) {\n          margin-top: 0;\n          color: inherit;\n        }\n\n        ::slotted(p) {\n          line-height: 1.5;\n          margin-bottom: 1em;\n        }\n\n        ::slotted(pre) {\n          background: var(--code-bg, #f5f5f5);\n          padding: 12px;\n          border-radius: 4px;\n          overflow-x: auto;\n          font-family: var(--font-family-mono, 'Consolas', 'Monaco', monospace);\n        }\n\n        :host(.theme-dark) ::slotted(pre) {\n          background: var(--code-bg-dark, #0d1117);\n        }\n\n        ::slotted(code) {\n          background: var(--code-bg, #f5f5f5);\n          padding: 2px 4px;\n          border-radius: 2px;\n          font-family: var(--font-family-mono, 'Consolas', 'Monaco', monospace);\n          font-size: 0.9em;\n        }\n\n        :host(.theme-dark) ::slotted(code) {\n          background: var(--code-bg-dark, #0d1117);\n        }\n\n        /* Loading state */\n        :host([loading]) {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        :host([loading])::before {\n          content: 'Loading...';\n          color: var(--tab-panel-loading-color, #666);\n        }\n\n        :host(.theme-dark[loading])::before {\n          color: var(--tab-panel-loading-color-dark, #aaa);\n        }\n\n        /* Empty state */\n        :host(:empty:not([loading])) {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        :host(:empty:not([loading]))::before {\n          content: attr(data-empty-message);\n          color: var(--tab-panel-empty-color, #999);\n          font-style: italic;\n        }\n\n        :host(.theme-dark:empty:not([loading]))::before {\n          color: var(--tab-panel-empty-color-dark, #666);\n        }\n      </style>\n\n      <slot></slot>\n    `;\n  }\n\n  // Public API\n  public show(): void {\n    this.active = true;\n  }\n\n  public hide(): void {\n    this.active = false;\n  }\n\n  public scrollToTop(): void {\n    this.scrollTop = 0;\n  }\n\n  public scrollToBottom(): void {\n    this.scrollTop = this.scrollHeight;\n  }\n\n  public scrollToElement(element: Element): void {\n    if (this.contains(element)) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  public clearContent(): void {\n    this.innerHTML = '';\n  }\n\n  public setContent(content: string): void {\n    // Clear existing content first to avoid conflicts\n    this.innerHTML = '';\n    this.innerHTML = content;\n  }\n\n  public appendContent(content: string): void {\n    this.insertAdjacentHTML('beforeend', content);\n  }\n\n  public prependContent(content: string): void {\n    this.insertAdjacentHTML('afterbegin', content);\n  }\n\n  // Properties\n  public get theme(): Theme {\n    return this._theme;\n  }\n\n  public set theme(value: Theme) {\n    this._theme = value;\n    this.setAttribute('theme', value);\n    this.applyTheme(value);\n  }\n\n  public get active(): boolean {\n    return this._active;\n  }\n\n  public set active(value: boolean) {\n    this._active = value;\n    if (value) {\n      this.setAttribute('active', '');\n      this.style.display = 'flex';\n    } else {\n      this.removeAttribute('active');\n      this.style.display = 'none';\n    }\n  }\n\n  public get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  public set disabled(value: boolean) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  public get loading(): boolean {\n    return this.hasAttribute('loading');\n  }\n\n  public set loading(value: boolean) {\n    if (value) {\n      this.setAttribute('loading', '');\n    } else {\n      this.removeAttribute('loading');\n    }\n  }\n\n  public get emptyMessage(): string {\n    return this.getAttribute('data-empty-message') || 'No content available';\n  }\n\n  public set emptyMessage(value: string) {\n    this.setAttribute('data-empty-message', value);\n  }\n\n  public applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this._theme = (newValue as Theme) || 'auto';\n        this.applyTheme(this._theme);\n        break;\n      case 'active':\n        this._active = newValue !== null;\n        if (this._active) {\n          this.style.display = 'flex';\n        } else {\n          this.style.display = 'none';\n        }\n        break;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('tab-panel');\n    }\n    this.applyTheme(this._theme);\n\n    // Handle pending setup from dynamic creation\n    if ((this as any)._pendingSetup) {\n      const setup = (this as any)._pendingSetup;\n\n      // Set attributes safely now that element is connected\n      if (setup.slot) {\n        this.setAttribute('slot', setup.slot);\n      }\n      if (setup.content) {\n        // Only set innerHTML if the element doesn't already have content\n        // This prevents conflicts when the element is declared with existing content\n        if (this.children.length === 0 && this.textContent?.trim() === '') {\n          this.innerHTML = setup.content;\n        }\n      }\n      if (setup.theme) {\n        this.applyTheme(setup.theme);\n      }\n\n      // Clean up\n      delete (this as any)._pendingSetup;\n    }\n\n    // Set initial visibility based on active state\n    if (this._active) {\n      this.style.display = 'flex';\n    } else {\n      this.style.display = 'none';\n    }\n\n    // Set default empty message if not provided\n    if (!this.hasAttribute('data-empty-message')) {\n      this.emptyMessage = 'No content available';\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-tab-panel')) {\n  customElements.define('e2-tab-panel', TabPanel);\n}\n","/**\n * Toolbar Element\n * A horizontal container for toolbar buttons and other controls\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport { applyTheme, generateId, getShadowRoot } from '../../utils';\n\nexport class Toolbar extends HTMLElement implements EditorElementProperties {\n  private _theme: Theme = 'auto';\n\n  static get observedAttributes(): string[] {\n    return ['theme', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          padding: 4px;\n          background: var(--toolbar-bg, #f0f0f0);\n          border-bottom: 1px solid var(--toolbar-border, #ccc);\n          gap: 2px;\n          font-family: var(--font-family, system-ui, sans-serif);\n          font-size: var(--font-size, 14px);\n        }\n\n        :host(.theme-dark) {\n          background: var(--toolbar-bg-dark, #2d2d2d);\n          border-bottom-color: var(--toolbar-border-dark, #555);\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host([disabled]) {\n          opacity: 0.6;\n          pointer-events: none;\n        }\n\n        ::slotted(*) {\n          flex-shrink: 0;\n        }\n      </style>\n      <slot></slot>\n    `;\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('toolbar');\n    }\n    this.applyTheme(this._theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  /**\n   * Close all toolbar menus except the specified one\n   * @param exceptMenu The menu to keep open (optional)\n   */\n  closeAllMenus(exceptMenu?: HTMLElement): void {\n    const toolbarMenus = this.querySelectorAll('e2-toolbar-menu');\n    toolbarMenus.forEach(menu => {\n      if (menu !== exceptMenu && typeof (menu as any).close === 'function') {\n        (menu as any).close();\n      }\n    });\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-toolbar')) {\n  customElements.define('e2-toolbar', Toolbar);\n}\n","/**\n * Toolbar Button Element\n * A button designed to be used within a toolbar\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport { applyTheme, generateId, getShadowRoot } from '../../utils';\n\nexport class ToolbarButton\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n\n  static get observedAttributes(): string[] {\n    return ['label', 'icon', 'theme', 'disabled', 'active'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 4px;\n          padding: 6px 12px;\n          border: 1px solid transparent;\n          background: transparent;\n          color: var(--text-color, #333);\n          font-family: inherit;\n          font-size: inherit;\n          cursor: pointer;\n          border-radius: 3px;\n          min-height: 24px;\n          transition: all 0.15s ease;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n\n        button:hover {\n          background: var(--button-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        button:active,\n        button.active {\n          background: var(--button-active-bg, rgba(0, 0, 0, 0.2));\n        }\n\n        button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        :host(.theme-dark) button {\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host(.theme-dark) button:hover {\n          background: var(--button-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) button:active,\n        :host(.theme-dark) button.active {\n          background: var(--button-active-bg-dark, rgba(255, 255, 255, 0.2));\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          flex-shrink: 0;\n        }\n\n        .label {\n          white-space: nowrap;\n        }\n      </style>\n      <button>\n        <span class=\"icon\" style=\"display: none;\"></span>\n        <span class=\"label\"></span>\n      </button>\n    `;\n\n    const button = shadowRoot.querySelector('button')!;\n    button.addEventListener('click', this.handleClick.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('toolbar-button');\n    }\n    this.updateContent();\n    this.applyTheme(this._theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'label':\n      case 'icon':\n        this.updateContent();\n        break;\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n      case 'disabled':\n        this.updateDisabled();\n        break;\n      case 'active':\n        this.updateActive();\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const shadowRoot = this.shadowRoot!;\n    const iconSpan = shadowRoot.querySelector('.icon') as HTMLSpanElement;\n    const labelSpan = shadowRoot.querySelector('.label') as HTMLSpanElement;\n\n    const icon = this.getAttribute('icon');\n    const label = this.getAttribute('label') || '';\n\n    if (icon) {\n      iconSpan.textContent = icon;\n      iconSpan.style.display = 'inline-block';\n    } else {\n      iconSpan.style.display = 'none';\n    }\n\n    labelSpan.textContent = label;\n  }\n\n  private updateDisabled(): void {\n    const button = this.shadowRoot!.querySelector('button')!;\n    button.disabled = this.hasAttribute('disabled');\n  }\n\n  private updateActive(): void {\n    const button = this.shadowRoot!.querySelector('button')!;\n    button.classList.toggle('active', this.hasAttribute('active'));\n  }\n\n  private handleClick(event: Event): void {\n    if (this.hasAttribute('disabled')) return;\n\n    const customEvent = new CustomEvent('toolbar-button-click', {\n      detail: {\n        buttonId: this.id,\n        button: this,\n      },\n      bubbles: true,\n      cancelable: true,\n    });\n\n    this.dispatchEvent(customEvent);\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n\n  get label(): string {\n    return this.getAttribute('label') || '';\n  }\n\n  set label(value: string) {\n    this.setAttribute('label', value);\n  }\n\n  get icon(): string {\n    return this.getAttribute('icon') || '';\n  }\n\n  set icon(value: string) {\n    this.setAttribute('icon', value);\n  }\n\n  get active(): boolean {\n    return this.hasAttribute('active');\n  }\n\n  set active(value: boolean) {\n    if (value) {\n      this.setAttribute('active', '');\n    } else {\n      this.removeAttribute('active');\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-toolbar-button')) {\n  customElements.define('e2-toolbar-button', ToolbarButton);\n}\n","/**\n * Toolbar Menu Element\n * A dropdown menu button designed to be used within a toolbar\n */\n\nimport { EditorElementProperties, Theme } from '../../types';\nimport { applyTheme, generateId, getShadowRoot } from '../../utils';\n\nexport class ToolbarMenu\n  extends HTMLElement\n  implements EditorElementProperties\n{\n  private _theme: Theme = 'auto';\n  private _isOpen: boolean = false;\n  private _justOpened: boolean = false;\n\n  static get observedAttributes(): string[] {\n    return ['label', 'icon', 'theme', 'disabled'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n    this.bindEvents();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          position: relative;\n        }\n\n        .button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 4px;\n          padding: 6px 12px;\n          border: 1px solid transparent;\n          background: transparent;\n          color: var(--text-color, #333);\n          font-family: inherit;\n          font-size: inherit;\n          cursor: pointer;\n          border-radius: 3px;\n          min-height: 24px;\n          transition: all 0.15s ease;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n\n        .button:hover {\n          background: var(--button-hover-bg, rgba(0, 0, 0, 0.1));\n        }\n\n        .button:active,\n        .button.open {\n          background: var(--button-active-bg, rgba(0, 0, 0, 0.2));\n        }\n\n        .button:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        :host(.theme-dark) .button {\n          color: var(--text-color-dark, #fff);\n        }\n\n        :host(.theme-dark) .button:hover {\n          background: var(--button-hover-bg-dark, rgba(255, 255, 255, 0.1));\n        }\n\n        :host(.theme-dark) .button:active,\n        :host(.theme-dark) .button.open {\n          background: var(--button-active-bg-dark, rgba(255, 255, 255, 0.2));\n        }\n\n        .icon {\n          width: 16px;\n          height: 16px;\n          flex-shrink: 0;\n        }\n\n        .label {\n          white-space: nowrap;\n        }\n\n        .dropdown-arrow {\n          width: 0;\n          height: 0;\n          border-left: 4px solid transparent;\n          border-right: 4px solid transparent;\n          border-top: 4px solid currentColor;\n          margin-left: 4px;\n          flex-shrink: 0;\n        }\n\n        .dropdown {\n          position: absolute;\n          top: 100%;\n          left: 0;\n          z-index: 9999;\n          display: none;\n          min-width: 180px;\n          background: var(--context-menu-bg, #ffffff);\n          border: 1px solid var(--context-menu-border, #d0d0d0);\n          border-radius: 4px;\n          box-shadow: var(--context-menu-shadow, 0 2px 8px rgba(0, 0, 0, 0.15));\n          padding: 4px 0;\n          font-family: inherit;\n          font-size: 14px;\n          margin-top: 2px;\n        }\n\n        .dropdown.open {\n          display: block;\n        }\n\n        :host(.theme-light) .dropdown {\n          background: var(--context-menu-bg-light, #ffffff);\n          border-color: var(--context-menu-border-light, #d0d0d0);\n          box-shadow: var(--context-menu-shadow-light, 0 2px 8px rgba(0, 0, 0, 0.15));\n        }\n\n        :host(.theme-dark) .dropdown {\n          background: var(--context-menu-bg-dark, #2a2a2a);\n          border-color: var(--context-menu-border-dark, #444444);\n          box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n        }\n\n        @media (prefers-color-scheme: dark) {\n          :host(.theme-auto) .dropdown {\n            background: var(--context-menu-bg-dark, #2a2a2a);\n            border-color: var(--context-menu-border-dark, #444444);\n            box-shadow: var(--context-menu-shadow-dark, 0 2px 8px rgba(0, 0, 0, 0.4));\n          }\n        }\n\n        ::slotted(*) {\n          display: block;\n        }\n      </style>\n      <button class=\"button\">\n        <span class=\"icon\" style=\"display: none;\"></span>\n        <span class=\"label\"></span>\n        <div class=\"dropdown-arrow\"></div>\n      </button>\n      <div class=\"dropdown\">\n        <slot></slot>\n      </div>\n    `;\n\n    const button = shadowRoot.querySelector('.button')!;\n    button.addEventListener('click', this.handleButtonClick.bind(this));\n  }\n\n  private bindEvents(): void {\n    // Close menu when clicking outside\n    document.addEventListener('click', this.handleDocumentClick.bind(this));\n\n    // Close menu on escape key\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n    // Handle window resize\n    window.addEventListener('resize', this.handleWindowResize.bind(this));\n\n    // Listen for item clicks to close menu\n    this.addEventListener('click', this.handleItemClick.bind(this));\n  }\n\n  connectedCallback(): void {\n    if (!this.id) {\n      this.id = generateId('toolbar-menu');\n    }\n    this.updateContent();\n    this.applyTheme(this._theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'label':\n      case 'icon':\n        this.updateContent();\n        break;\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n      case 'disabled':\n        this.updateDisabled();\n        break;\n    }\n  }\n\n  private updateContent(): void {\n    const shadowRoot = this.shadowRoot!;\n    const iconSpan = shadowRoot.querySelector('.icon') as HTMLSpanElement;\n    const labelSpan = shadowRoot.querySelector('.label') as HTMLSpanElement;\n\n    const icon = this.getAttribute('icon');\n    const label = this.getAttribute('label') || '';\n\n    if (icon) {\n      iconSpan.textContent = icon;\n      iconSpan.style.display = 'inline-block';\n    } else {\n      iconSpan.style.display = 'none';\n    }\n\n    labelSpan.textContent = label;\n  }\n\n  private updateDisabled(): void {\n    const button = this.shadowRoot!.querySelector(\n      '.button'\n    )! as HTMLButtonElement;\n    button.disabled = this.hasAttribute('disabled');\n\n    if (this.hasAttribute('disabled') && this._isOpen) {\n      this.close();\n    }\n  }\n\n  private handleButtonClick(event: Event): void {\n    if (this.hasAttribute('disabled')) return;\n\n    event.stopPropagation();\n\n    if (this._isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private handleDocumentClick(event: MouseEvent): void {\n    if (!this._isOpen) return;\n\n    // Ignore the click that just opened the menu\n    if (this._justOpened) {\n      this._justOpened = false;\n      return;\n    }\n\n    const target = event.target as Node;\n    if (!this.contains(target) && !this.shadowRoot?.contains(target)) {\n      this.close();\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    if (!this._isOpen) return;\n\n    switch (event.key) {\n      case 'Escape':\n        event.preventDefault();\n        this.close();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextItem();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousItem();\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.activateFocusedItem();\n        break;\n    }\n  }\n\n  private handleWindowResize(): void {\n    if (this._isOpen) {\n      this.close();\n    }\n  }\n\n  private handleItemClick(event: Event): void {\n    // Close menu when any item is clicked\n    const target = event.target as HTMLElement;\n    if (\n      target.tagName === 'E2-CONTEXT-MENU-ITEM' ||\n      target.closest('e2-context-menu-item')\n    ) {\n      // Small delay to allow the item click event to be processed first\n      setTimeout(() => this.close(), 0);\n    }\n  }\n\n  private focusNextItem(): void {\n    const items = this.querySelectorAll('e2-context-menu-item:not([disabled])');\n    const currentIndex = Array.from(items).findIndex(\n      item => item === document.activeElement || item.shadowRoot?.activeElement\n    );\n\n    const nextIndex = currentIndex < items.length - 1 ? currentIndex + 1 : 0;\n    (items[nextIndex] as HTMLElement).focus();\n  }\n\n  private focusPreviousItem(): void {\n    const items = this.querySelectorAll('e2-context-menu-item:not([disabled])');\n    const currentIndex = Array.from(items).findIndex(\n      item => item === document.activeElement || item.shadowRoot?.activeElement\n    );\n\n    const prevIndex = currentIndex > 0 ? currentIndex - 1 : items.length - 1;\n    (items[prevIndex] as HTMLElement).focus();\n  }\n\n  private activateFocusedItem(): void {\n    const focused = document.activeElement;\n    if (focused && focused.tagName === 'E2-CONTEXT-MENU-ITEM') {\n      (focused as any).click();\n    }\n  }\n\n  private adjustPosition(): void {\n    const dropdown = this.shadowRoot!.querySelector('.dropdown') as HTMLElement;\n    const rect = this.getBoundingClientRect();\n    const dropdownRect = dropdown.getBoundingClientRect();\n\n    // Check if dropdown would go off the right edge of the viewport\n    if (rect.left + dropdownRect.width > window.innerWidth) {\n      dropdown.style.left = 'auto';\n      dropdown.style.right = '0';\n    } else {\n      dropdown.style.left = '0';\n      dropdown.style.right = 'auto';\n    }\n\n    // Check if dropdown would go off the bottom edge of the viewport\n    if (rect.bottom + dropdownRect.height > window.innerHeight) {\n      dropdown.style.top = 'auto';\n      dropdown.style.bottom = '100%';\n      dropdown.style.marginTop = '0';\n      dropdown.style.marginBottom = '2px';\n    } else {\n      dropdown.style.top = '100%';\n      dropdown.style.bottom = 'auto';\n      dropdown.style.marginTop = '2px';\n      dropdown.style.marginBottom = '0';\n    }\n  }\n\n  // Public API\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n\n    // Apply theme to all child context menu items and separators\n    const childItems = this.querySelectorAll(\n      'e2-context-menu-item, e2-context-menu-separator'\n    );\n    childItems.forEach(child => {\n      if (typeof (child as any).applyTheme === 'function') {\n        (child as any).applyTheme(theme);\n      }\n    });\n  }\n\n  get label(): string {\n    return this.getAttribute('label') || '';\n  }\n\n  set label(value: string) {\n    this.setAttribute('label', value);\n  }\n\n  get icon(): string {\n    return this.getAttribute('icon') || '';\n  }\n\n  set icon(value: string) {\n    this.setAttribute('icon', value);\n  }\n\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  open(): void {\n    if (this.hasAttribute('disabled') || this._isOpen) return;\n\n    // Close other toolbar menus in the same toolbar\n    const parentToolbar = this.closest('e2-toolbar');\n    if (\n      parentToolbar &&\n      typeof (parentToolbar as any).closeAllMenus === 'function'\n    ) {\n      (parentToolbar as any).closeAllMenus(this);\n    }\n\n    this._isOpen = true;\n    const button = this.shadowRoot!.querySelector('.button')!;\n    const dropdown = this.shadowRoot!.querySelector('.dropdown')!;\n\n    button.classList.add('open');\n    dropdown.classList.add('open');\n\n    // Adjust position to stay within viewport\n    this.adjustPosition();\n\n    // Set the flag to prevent immediate closing\n    this._justOpened = true;\n\n    // Ensure all child items have the correct theme\n    this.applyTheme(this._theme);\n\n    // Dispatch show event\n    const showEvent = new CustomEvent('toolbar-menu-show', {\n      detail: {\n        menuId: this.id,\n        menu: this,\n      },\n      bubbles: true,\n      cancelable: true,\n    });\n\n    this.dispatchEvent(showEvent);\n  }\n\n  close(): void {\n    if (!this._isOpen) return;\n\n    this._isOpen = false;\n    const button = this.shadowRoot!.querySelector('.button')!;\n    const dropdown = this.shadowRoot!.querySelector('.dropdown')!;\n\n    button.classList.remove('open');\n    dropdown.classList.remove('open');\n\n    // Dispatch hide event\n    const hideEvent = new CustomEvent('toolbar-menu-hide', {\n      detail: {\n        menuId: this.id,\n        menu: this,\n      },\n      bubbles: true,\n      cancelable: true,\n    });\n\n    this.dispatchEvent(hideEvent);\n  }\n\n  toggle(): void {\n    if (this._isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-toolbar-menu')) {\n  customElements.define('e2-toolbar-menu', ToolbarMenu);\n}\n","/**\n * Toolbar Separator Element\n * A visual separator for toolbar items\n */\n\nimport { Theme } from '../../types';\nimport { applyTheme, getShadowRoot } from '../../utils';\n\nexport class ToolbarSeparator extends HTMLElement {\n  private _theme: Theme = 'auto';\n\n  static get observedAttributes(): string[] {\n    return ['theme'];\n  }\n\n  constructor() {\n    super();\n    this.setupElement();\n  }\n\n  private setupElement(): void {\n    const shadowRoot = getShadowRoot(this);\n\n    shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          width: 1px;\n          height: 24px;\n          background: var(--separator-color, #ccc);\n          margin: 0 4px;\n          flex-shrink: 0;\n        }\n\n        :host(.theme-dark) {\n          background: var(--separator-color-dark, #555);\n        }\n      </style>\n    `;\n  }\n\n  connectedCallback(): void {\n    this.applyTheme(this._theme);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'theme':\n        this.theme = newValue as Theme;\n        break;\n    }\n  }\n\n  get theme(): Theme {\n    return this._theme;\n  }\n\n  set theme(value: Theme) {\n    this._theme = value;\n    this.applyTheme(value);\n  }\n\n  applyTheme(theme: Theme): void {\n    applyTheme(this, theme);\n  }\n}\n\n// Register the custom element\nif (!customElements.get('e2-toolbar-separator')) {\n  customElements.define('e2-toolbar-separator', ToolbarSeparator);\n}\n","/**\n * E2 - A collection of custom HTML elements for building editors\n *\n * This library provides a set of reusable UI components designed specifically\n * for creating level editors, sprite editors, and similar desktop-like web applications.\n */\n\n// Import and register all custom elements\nimport './elements/app/app';\nimport './elements/contextmenu/context-menu';\nimport './elements/contextmenu/context-menu-item';\nimport './elements/contextmenu/context-menu-separator';\nimport './elements/dialog/alert';\nimport './elements/dialog/confirm';\nimport './elements/dialog/dialog';\nimport './elements/dialog/prompt';\nimport './elements/notification/notification';\nimport './elements/notification/notification-container';\nimport './elements/panel/collapsible-panel';\nimport './elements/panel/split-panel';\nimport './elements/panel/split-panel-container';\nimport './elements/statusbar/status-bar';\nimport './elements/statusbar/status-item';\nimport './elements/statusbar/status-section';\nimport './elements/tabs/tab';\nimport './elements/tabs/tab-container';\nimport './elements/tabs/tab-panel';\nimport './elements/toolbar/toolbar';\nimport './elements/toolbar/toolbar-button';\nimport './elements/toolbar/toolbar-menu';\nimport './elements/toolbar/toolbar-separator';\n\n// Export types and interfaces for TypeScript users\nexport * from './types';\n\n// Export utility functions if any\nexport * from './utils';\n\n// Version information\nexport const VERSION = '1.0.0';\n\n// Auto-registration message for development\nif (typeof window !== 'undefined' && process.env.NODE_ENV === 'development') {\n  console.log(\n    `E2 v${VERSION} loaded - Custom elements registered automatically`\n  );\n}\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","generateId","prefix","Math","random","toString","substring","dispatchCustomEvent","element","eventName","detail","options","event","CustomEvent","bubbles","cancelable","dispatchEvent","addGlobalCSS","css","id","document","getElementById","style","createElement","textContent","head","appendChild","createTemplate","html","template","innerHTML","trim","getShadowRoot","mode","shadowRoot","attachShadow","debounce","func","wait","timeout","args","clearTimeout","window","setTimeout","isElementVisible","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","applyTheme","theme","classList","remove","add","createToast","type","message","notification","container","title","undefined","dismissible","persistent","querySelector","body","existingContainer","defaultContainer","position","show","then","parentNode","removeChild","Toast","info","success","warning","error","E2App","HTMLElement","observedAttributes","constructor","super","_theme","_stylesInitialized","handleThemeChange","setupElement","styleElement","connectedCallback","setupAutoTheme","disconnectedCallback","mediaQueryList","removeEventListener","matchMedia","addEventListener","attributeChangedCallback","name","oldValue","newValue","setCSSVariable","property","setProperty","getCSSVariable","getComputedStyle","getPropertyValue","customElements","ContextMenu","_visible","_justShown","boundContextMenuHandler","handleContextMenu","bind","bindEvents","handleDocumentClick","handleKeyDown","handleWindowResize","setupTargetListeners","removeTargetListeners","hide","targetSelector","getAttribute","querySelectorAll","forEach","target","disabled","mouseEvent","preventDefault","stopPropagation","trigger","currentTarget","clientX","clientY","contains","focusNextItem","focusPreviousItem","activateFocusedItem","items","currentIndex","Array","from","findIndex","item","activeElement","length","focus","focused","tagName","click","setAttribute","hasAttribute","removeAttribute","visible","x","y","adjustPosition","requestAnimationFrame","firstItem","menuId","menu","viewportWidth","viewportHeight","parseInt","width","height","child","ContextMenuItem","button","handleClick","tabIndex","handleFocus","updateContent","updateDisabledState","iconElement","labelElement","shortcutElement","icon","display","label","shortcut","contextMenu","closest","itemId","includes","Event","ContextMenuSeparator","_value","AlertDialogElement","_nativeDialog","_resolvePromise","_rejectPromise","handleClose","handleCancel","close","titleElement","messageElement","buttonElement","getDefaultTitle","className","getIconForType","dialogId","dialog","buttonText","open","Promise","resolve","reject","Error","showModal","ConfirmDialogElement","confirmButton","cancelButton","confirm","cancel","confirmed","confirmText","cancelText","danger","DialogElement","closeButton","updateTitle","updateClosable","updateSize","closable","returnValue","modal","PromptDialogElement","input","handleInput","handleKeydown","inputElement","multiline","currentType","toLowerCase","textarea","replaceChild","setupInputElement","placeholder","defaultValue","pattern","minLength","maxLength","HTMLInputElement","validateInput","shiftKey","errorMessage","isValid","required","RegExp","test","toggle","select","NotificationElement","_timeoutId","setupEventListeners","handleCloseClick","handleNotificationClick","dismiss","notificationId","startTimeout","progressBar","transitionDuration","NotificationContainerElement","_observer","setupMutationObserver","MutationObserver","mutations","mutation","manageNotifications","updateNotificationPositions","observe","childList","subtree","notifications","maxNotifications","excess","i","containerId","count","index","zIndex","disconnect","stackDirection","spacing","addNotification","removeNotification","clear","notificationElement","getNotificationCount","CollapsiblePanel","_collapsed","_orientation","handleToggle","collapsed","panelId","panel","orientation","expand","collapse","SplitPanel","_size","_minSize","_maxSize","_resizable","handleResize","parseFloat","toggleAttribute","size","minSize","maxSize","resizable","getCurrentSize","parentElement","containerHeight","containerWidth","SplitPanelContainer","_resizing","_activePanel","_startPosition","_startSize","_nextPanelStartSize","_updatingPanelSizes","debouncedResize","handleMouseDown","handleMouseMove","handleMouseUp","handleMouseLeave","updateHandles","updatePanelSizes","panels","getPanels","containerRect","handleSize","totalHandleSpace","availableSpace","totalSetSize","unsetPanels","remainingPercentage","max","defaultSize","actualSize","flexBasis","panelIndex","currentPanel","nextPanel","relativeX","relativeY","onBorder","borderStart","borderEnd","cursor","startSize","delta","deltaPercentage","indexOf","newCurrentSize","min","newNextSize","updateHoverCursor","overHandle","finalSize","resizePanel","getPanelSizes","sizes","resetPanelSizes","equalSize","StatusBar","showMessage","duration","messageEl","textEl","_temporaryMessageTimeout","temporary","hideMessage","getItemsInSection","section","slot","children","clearSection","StatusItem","_type","_label","_clickable","updateDisplay","itemType","iconEl","labelEl","valueEl","progressContainer","progressFill","progressText","updateProgressDisplay","String","fill","text","numValue","percentage","round","clickable","setProgress","progress","setIcon","StatusSection","_position","addItem","priority","removeItem","firstChild","getItems","getItemsByPriority","filter","Tab","_active","_closable","_icon","tabId","tab","MouseEvent","active","_pendingSetup","setup","TabContainer","_activeTabId","_tabPosition","handleTabClick","handleTabClose","tabSlot","panelSlot","updateTabsAndPanels","tabElement","selectTab","matches","removeTab","panelElement","previousTabId","activeTabId","activePanelId","remainingTabs","nextTab","nextPanelId","tabs","e","console","warn","correspondingPanel","activeTabElement","selectTabById","addTab","content","finalTabId","finalPanelId","removeTabById","tabPosition","TabPanel","scrollToTop","scrollTop","scrollToBottom","scrollHeight","scrollToElement","scrollIntoView","behavior","block","clearContent","setContent","appendContent","insertAdjacentHTML","prependContent","loading","emptyMessage","Toolbar","closeAllMenus","exceptMenu","ToolbarButton","updateDisabled","updateActive","iconSpan","labelSpan","customEvent","buttonId","ToolbarMenu","_isOpen","_justOpened","handleButtonClick","handleItemClick","dropdown","dropdownRect","marginTop","marginBottom","isOpen","parentToolbar","showEvent","hideEvent","ToolbarSeparator","VERSION"],"sourceRoot":""}